<?php
/********************************************************************************
DO NOT EDIT THIS FILE!

Mac.com (now Mobileme - me.com) contacts importer

You may not reprint or redistribute this code without permission from Octazen Solutions.

Copyright 2009 Octazen Solutions. All Rights Reserved
WWW: http://www.octazen.com
********************************************************************************/
//include_once(dirname(__FILE__).'/abimporter.php');
if (!defined('__ABI')) die('Please include abi.php to use this importer!');

global $_OZ_SERVICES;
$_OZ_SERVICES['medotcom'] = array('type'=>'abi', 'label'=>'MobileMe (.Mac)', 'class'=>'MeDotComImporter');

/////////////////////////////////////////////////////////////////////////////////////////
//MeDotComImporter
/////////////////////////////////////////////////////////////////////////////////////////
//@api
class MeDotComImporter extends WebRequestor {

	var $MAX_CONTACTS = 200;

	//@api
	function getInfo () {
		return array('id'=>'me.com');
	}

	//@api
	function login($loginemail, $password)  {

		$this->enableHttp1_1Features(true);
		//$this->useHttp1_1 = true;

		$parts = $this->getEmailParts($loginemail);
		$login = $parts[0];
		$this->setOwnerEmail($loginemail);
		oz_set_domain($parts[1]);
		
		$form = new HttpForm;
		$form->addField("returnURL", "aHR0cDovL3d3dy5tZS5jb20vbWFpbC8=");
		$form->addField("service", "mail");
		$form->addField("ssoNamespace", "primary-me");
		$form->addField("anchor", "account");
		$form->addField("cancelURL", "http://www.me.com/contacts");
		$form->addField("formID", "loginForm");
		$form->addField("username", $loginemail); // email is fine too
		$form->addField("password", $password);
		$form->addField("_authtrkcde", "{#TRKCDE#}");
		$form->action = "https://auth.me.com/authenticate";
		$html = $this->postForm($form);
		if (strpos($this->lastUrl,'auth.me.com/authenticate')!==FALSE || strpos($html, 'id="error"')!==false) {
			$this->close();
			return abi_set_error(_ABI_AUTHENTICATION_FAILED,'Bad user name or password');
		}

		return abi_set_success();
	}

	//@api
	function fetchContacts ($loginemail, $password) {

		$res = $this->login($loginemail, $password);
		if ($res!=_ABI_SUCCESS) return $res;


		// Get cookie
		$headers = array("X-Mobileme-Version: 1.0");
		$html = $this->httpRequest ("http://www.me.com/wo/WebObjects/Webmail2.woa?lang=en", false, null, 'iso-8859-1',$headers);
		$iscsecs = $this->cookiejar->getCookieValues('http://www.me.com','isc-www.me.com');
		if (empty($iscsecs) || count($iscsecs)==0) {
			$this->close();
			return abi_set_error(_ABI_FAILED,'Cannot find security token');
		}
		$isc = $iscsecs[0];
		

		$this->lastUrl = 'http://www.me.com/contacts/';
		
		//Not sue if the following headers useful (comment out all if not))
		//$headers = array("X-Mobileme-Version: 1.0");
		$headers = array("X-Mobileme-Version: 1.0", "X-Mobileme-Isc: $isc","X-Requested-With: XMLHttpRequest", "X-Prototype-Version: 1.6.0");
		//$headers = array("X-Mobileme-Version: 1.0", "X-Mobileme-Isc: $isc","X-Requested-With: XMLHttpRequest", "X-Prototype-Version: 1.6.0", "Referer: http://www.me.com/contacts/", "User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.14) Gecko/2009090216 Ubuntu/8.04 (hardy) Firefox/3.0.14");

		// ////////////////////////////////////////////////////////////////////////////
		// Fetch JSON contacts list
		// ////////////////////////////////////////////////////////////////////////////
		$guids = array();
		$form = new HttpForm;
		//$form->action = 'http://www.me.com/wo/WebObjects/Contacts.woa/wa/ScriptAction/loadContacts';
		$form->action = 'http://www.me.com/wo/WebObjects/Contacts.woa/wa/ScriptAction/loadContacts?lang=en';
		$form->addField('postBody','{"date":'.time().'}');
		$html = $this->postForm($form,'utf-8',$headers);
		//$html = $this->httpPost("http://www.me.com/wo/WebObjects/Contacts.woa/wa/ScriptAction/loadContacts", '{"date":'.time().'}','utf-8',$headers);
		$res = oz_json_decode($html,true);
		if (is_array($res) && isset($res['crecords'])) {
			$records = null;
			if (isset($res['crecords'])) $records = $res['crecords'];
			if ($records==null && isset($res['records'])) $records = $res['records'];
			if (is_array($records)) {
				foreach ($records as $rec) {
					$guid = $rec['guid'];
					$type = $rec['type'];
					if ('Contact'==$type) {
						$guids[]=$guid;
					}
				}
			}
		}


		// ////////////////////////////////////////////////////////////////////////////
		// Perform VCard export
		// ////////////////////////////////////////////////////////////////////////////
		$form = new HttpForm;
		$guidstr = join('","',$guids);
		if (empty($guidstr)) return array();	//No results
		$guidstr = '["'.$guidstr.'"]';
		$form->addField("guid_array",$guidstr);
		$postData = $form->buildPostArray();
		$vcard = $this->httpPost("/wo/WebObjects/Contacts.woa/wa/ScriptAction/exportVCards?iscsec=".$isc, $postData);

		//Parse VCard
		$cl = array();
		$tokenizer = new OzVCardTokenizer($vcard);
		$in_vcard = false;

		$cname = '';
		$cemails = array();
		while (true) {
			$field = $tokenizer->next();
			if ($field==null) break;

			if ($in_vcard) {
				$name = $field->name;
				if ('END'==$name && "VCARD"==$field->getStringValue()) {
					//Flush
					if (count($cemails)>0) {
						foreach ($cemails as $email) {
							$cl[] = new Contact($cname,$email);
						}
					}
					$in_vcard = false;
				}
				else if ('FN'==$name) {
					$cname = $field->getStringValue();
				}
				else if ('EMAIL'==$name) {
					$e = trim($field->getStringValue());
					if (abi_valid_email($e)) $cemails[]=$e;
				}
			}
			else {
				$name = $field->name;
				if ('BEGIN'==$name && "VCARD"==$field->getStringValue()) {
					$in_vcard = true;
					$cname = '';
					$cemails = array();
				}
			}
		}
		return $cl;

/*

		// ////////////////////////////////////////////////////////////////////////////
		// Fetch each contact details
		// ////////////////////////////////////////////////////////////////////////////
		$al = array();

		$n = count($guids);
		for ($cc=0; $cc<$this->MAX_CONTACTS && $cc<$n; $cc++) {
			$g = $guids[$cc];
			//$form = new HttpForm;
			//$form->addField("guid", $g);
			//$postData = $form->buildPostData();
			//$html = $this->httpPost("http://www.me.com/wo/WebObjects/Contacts.woa/wa/ScriptAction/refreshContactDetails?lang=en", "guid=$g");
			$html = $this->httpPost("http://www.me.com/wo/WebObjects/Contacts.woa/wa/ScriptAction/refreshContactDetails?lang=en", "guid=$g", 'utf-8', $headers);

			$emails = array();
			$contacts = array();
			$res = oz_json_decode($html,true);
			$records = null;
			if (isset($res['crecords'])) $records = $res['crecords'];
			if ($records==null && isset($res['records'])) $records = $res['records'];
			if (is_array($res) && $records!=null) {
				//$records = $res['crecords'];
				if (is_array($records)) {
					foreach ($records as $rec) {
						$guid = $rec['guid'];
						$type = $rec['type'];
						$value = isset($rec['associationValue']) ? $rec['associationValue'] : null;
						if ('Contact'==$type) {
							$contacts[] = $rec;
						}
						else if ('Email'==$type) {
							$emails[$guid] = $value;
						}
						//Others...
					}
				}
			}

			foreach ($contacts as $c) {
				if (isset($c['emailAddresses'])) {
					$emailList = $c['emailAddresses'];
					if (is_array($emailList)) {

						$fname = isset($c['firstName']) ? $c['firstName'] : '';
						$lname = isset($c['lastName']) ? $c['lastName'] : '';
						$name = trim(oz_reduce_whitespace($fname.' '.$lname));

						foreach ($emailList as $emailGuid) {
							if (isset($emails[$emailGuid])) {
								$email = $emails[$emailGuid];
								//abi_valid_email ??
								$al[] = new Contact($name,$email);
							}
						}
					}
				}
			}
		}

		$this->close();
		return $al;
*/
	}
}

//For legacy support
//@api
class MacMailImporter extends MeDotComImporter {}

// Mac.com
global $_DOMAIN_IMPORTERS;
$_DOMAIN_IMPORTERS["mac.com"]='MeDotComImporter';
$_DOMAIN_IMPORTERS["me.com"]='MeDotComImporter';
