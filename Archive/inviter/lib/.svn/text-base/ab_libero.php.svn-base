<?php
/********************************************************************************
DO NOT EDIT THIS FILE!

Libero.it contacts importer.

You may not reprint or redistribute this code without permission from Octazen Solutions.

Copyright 2009 Octazen Solutions. All Rights Reserved
WWW: http://www.octazen.com
********************************************************************************/
//include_once(dirname(__FILE__).'/abimporter.php');
if (!defined('__ABI')) die('Please include abi.php to use this importer!');

global $_OZ_SERVICES;
$_OZ_SERVICES['libero'] = array('type'=>'abi', 'label'=>'Libero.it', 'class'=>'LiberoImporter');

define('LiberoImporter_TOKEN_REGEX',"/&u=([^&]+).*?&t=([^&\"]+)/ims");
define('LiberoImporter_CONTACT_REGEX',"/<cp:item[^>]*?email=\"([^\"]*)\"[^>]*?name=\"([^\"]*)\"[^>]*>/ims");

/////////////////////////////////////////////////////////////////////////////////////////
//LiberoImporter
/////////////////////////////////////////////////////////////////////////////////////////
//@api
class LiberoImporter extends WebRequestor {

	//@api
	function getInfo () {
		return array('id'=>'libero');
	}

	//@api
	function fetchContacts ($loginemail, $password) {

		$parts = $this->getEmailParts ($loginemail);
		$login = $parts[0];
		$domain = $parts[1];
		$this->setOwnerEmail($loginemail);
		oz_set_domain($domain);
		
		$form = new HttpForm;
		$form->addField("LOGINID", $loginemail);
		$form->addField("PASSWORD", $password);
		$form->addField("SERVICE_ID", "old_email");
		$form->addField("RET_URL", "http://wmail-new.libero.it");
		$form->addField("AJAX", "1");
		$this->cookiejar->addCookie(new OzCookie("cookies_enabled=yes; DOMAIN=libero.it; PATH=/","http://libero.it/"));
		$postData = $form->buildPostData();
		$html = $this->httpPost("https://login.libero.it/logincheck.php",$postData);
		if (strpos($html,"NOTLOGGED||")!==FALSE) {
			$this->close();
			return abi_set_error(_ABI_AUTHENTICATION_FAILED,'Bad user name or password');
		}

		$html = $this->httpGet("http://wmail-new.libero.it/cp/WindMailPS.jsp?rndPrx=".rand(0,1000000));
		$form = oz_extract_form_by_name($html,"sentForm");
		if ($form == null) {
			$this->close();
			return abi_set_error(_ABI_FAILED,'Cannot find login form2');
		}
		$form->setField("cookieAccepted", "yes");
		$form->setField("ua", "Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/525.26.2 (KHTML, like Gecko) Version/3.2 Safari/525.26.13");
		$postData = $form->buildPostData();
		$html = $this->httpPost($form->action,$postData);

		$form = oz_extract_form_by_name($html,"loginInfo");
		if ($form == null) {
			$this->close();
			return abi_set_error(_ABI_FAILED,'Cannot find login form3');
		}
		$postData = $form->buildPostData();
		$html = $this->httpPost($form->action,$postData);

		// Get u and t tokens
		if (preg_match(LiberoImporter_TOKEN_REGEX,$html,$matches)==0) {
			$this->close();
			return abi_set_error(_ABI_FAILED,'Cannot find tokens');
		}
		$u = $matches[1];
		$t = $matches[2];

		$url = "/cp/ps/Mail/commands/GetCommunityContacts?d=libero.it&u=".$u."&t=".$t."&containerid=mailContactItems&rangeStart=0&rangeLength=5000";
		$html = $this->httpGet($url);

		$al = array();
		preg_match_all(LiberoImporter_CONTACT_REGEX, $html, $matches, PREG_SET_ORDER);
		foreach ($matches as $val) {
			$email = htmlentities2utf8($val[1]);
			$name = htmlentities2utf8($val[2]);
			if (abi_valid_email($email)) {
				$al[] = new Contact($name,$email);
			}
		}
		return $al;
	}
}

// libero.it
global $_DOMAIN_IMPORTERS;
$_DOMAIN_IMPORTERS["libero.it"] = 'LiberoImporter';
$_DOMAIN_IMPORTERS["inwind.it"] = 'LiberoImporter';
$_DOMAIN_IMPORTERS["iol.it"] = 'LiberoImporter';
$_DOMAIN_IMPORTERS["blu.it"] = 'LiberoImporter';
