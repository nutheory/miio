%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (Scott Dunlap) ()%%Title: (office+interface-cobalt.eps)%%CreationDate: 7/9/07 5:10 PM%%BoundingBox: 34 -324 345 -74%%HiResBoundingBox: 34.7261 -323.8389 344.543 -74.4653%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 190.625 -190.625 190.625 -190.625%AI3_TileBox: -319.875 -850.125 700.125 469.875%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 380 326%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -258.2085 203.2085 1.5 1829 1115 26 1 0 50 75 0 0%AI5_OpenViewLayers: 77%%PageOrigin:-35.8745 -849.125%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 3 Bd[<11121313141517181A1B1C1C1E1F20><0B0C0C0D0E0F0F1012131314151617><0B0B0C0D0E0F0F1012131314151617>0<EBEAE9E8E7E6E5E4E2E1E0DFDEDDDC><ECEBEAE9E8E7E6E5E3E2E1E0DFDEDD><EDECEBEAE9E8E7E6E4E3E2E1E0DFDE>4 %_Br<000000000000000000000000000000000000000000000000010101020203030404050506060708090A0A0B0C0D1011><00000000000000000000000000000000000000000000000001000001010202020203020304050405050607080A0A0B><0000000000000000000000000000000000000000000000000000000001010201020203030304050506070708090A0B>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F6F6F5F4F3F2F1F0EFEEECEB><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F8F8F7F6F5F5F4F3F2F1F0EEEDEC><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F7F6F5F4F3F2F1F0EFEEED>4 %_Br[0.85 0 53.6585 100 %_BS%_0.85 0 53.6585 100 Bs0.92 0 50 80 %_BS%_0.92 0 50 80 Bs1 0 80 0 %_BS%_1 0 80 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (New Gradient Swatch 1)(New Gradient Swatch 1) 0 2 Bd[<0303030303030404040404040505050505060606080807070908080909090A0A0B0B0B0C0C0C0D0D0E0E0F0F100F0F10101111121213131414151616171717171818191A1A1B1B1C1C1C1D1E1E1F20202020212222222324242526262627282829><A4A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A8A8A8A9A9ABABAAABABADADAEAEAFAFB0B0B1B1B3B4B4B5B5B6B6B7B9B9BABBBBBCBDBDBEBFBFC0C1C2C2C3C4C5C5C6C8C8C9C9CACCCDCDCFCECFD0D1D2D3D4D5D6D6D7D8D8D9DADBDCDDDEDFE0E1E2>1<000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101020202020202020202030303030303030404040505050505060606060607080808080909090A0B0B0B0C0D0D0D0E0F0F10><F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDBDAD9D9D8D8D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCCCCCBCACAC9C8C7C7C6><797979797978787878787777777776767675757574747373737272717170706F6F6E6E6D6D6C6B6B6A6A6969686767666565646363626161605F5E5E5D5C5B5B5A5958575756555453525251504F4E4D4C4B4A4A494847464544434241403F3E3D>04 %_Br[0.160784 0.886274 1 0.062745 0.776471 0.239216 0 2 53.6585 100 %_BS%_0.160784 0.886274 1 0.062745 0.776471 0.239216 0 2 53.6585 100 Bs0.011765 0.643137 1 0 0.94902 0.47451 0 2 65 0 %_BS%_0.011765 0.643137 1 0 0.94902 0.47451 0 2 65 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])PcBb2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 1)Pc0.54902 0.486274 0.552941 0.188235 0.439216 0.423529 0.392157 Xa(New Color Swatch 2)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Reflections) Ln0 Au*u1 D0 O0 J 0 j 1 w 4 M []0 d0 XR0 g242.4072 -200.0488 m242.4072 -207.5879 L242.4072 -211.75 245.7852 -215.125 249.9453 -215.125 C253.1689 -215.125 L258.8193 -209.4746 L264.4727 -215.125 L267.4004 -215.125 L271.5645 -215.125 274.9395 -211.75 274.9395 -207.5879 C274.9395 -200.0488 L242.4072 -200.0488 Lf258.6729 -215.8516 m254.2012 -215.8516 250.5762 -219.4785 250.5762 -223.9512 c250.5762 -228.4238 254.2012 -232.0488 258.6729 -232.0488 c263.1475 -232.0488 266.7725 -228.4238 266.7725 -223.9512 c266.7725 -219.4785 263.1475 -215.8516 258.6729 -215.8516 cBb1 (Unnamed gradient 4) 258.6738 -232.0488 90 32 1 0 0 1 0 0 Bg-0.000001 32 36.5322 0.000002 240.4072 -232.0488 Xm-0.000361 8262.5488 36.5322 0.000002 240.4072 -8494.5977 Bc-0.000001 25.6 36.5322 0.000002 240.4072 -232.0488 Bm0 6.4 36.5322 0.000002 240.4072 -206.4492 Bm-0.000361 8262.5488 36.5322 0.000002 240.4072 -200.0488 Bcf0 BB*U*u0 g341.6758 -222.8926 m340.7656 -220.2793 L339.8604 -217.6641 L335.4824 -220.6504 L335.0479 -220.9453 L333.8535 -217.9629 330.9414 -215.8516 327.5313 -215.8516 c324.1357 -215.8516 321.2344 -217.9434 320.0293 -220.9043 C319.6816 -220.6035 L315.6836 -217.127 L314.4766 -219.6191 L313.2676 -222.1094 L318.4727 -223.0938 L319.4648 -223.2813 L319.4482 -223.502 319.4316 -223.7227 319.4316 -223.9512 c319.4316 -228.4219 323.0586 -232.0488 327.5313 -232.0488 c332.0029 -232.0488 335.6289 -228.4219 335.6289 -223.9512 c335.6289 -223.7383 335.6143 -223.5293 335.5977 -223.3184 C336.3896 -223.2637 L341.6758 -222.8926 Lf0 g328.7793 -210.5352 m333.3535 -215.1055 L337.3438 -214.9121 340.5225 -211.625 340.5225 -207.5879 C340.5225 -200.0488 L328.7432 -200.0488 L328.7539 -200.1133 328.7793 -200.1719 328.7793 -200.2383 C328.7793 -210.5352 Lf321.96 -215.125 m322.0693 -215.125 L326.748 -210.4473 L326.748 -200.2383 L326.748 -200.1719 326.7734 -200.1133 326.7871 -200.0488 C314.4229 -200.0488 L314.4229 -207.5879 L314.4229 -211.75 317.7969 -215.125 321.96 -215.125 CBb1 (Unnamed gradient 4) 327.4717 -232.0488 90 32 1 0 0 1 0 0 Bg-0.000001 32 32.4082 0.000001 311.2676 -232.0488 Xm-0.000364 8331.3467 32.4082 0.000001 311.2676 -8563.3945 Bc-0.000001 25.6 32.4082 0.000001 311.2676 -232.0488 Bm0 6.4 32.4082 0.000001 311.2676 -206.4492 Bm-0.000364 8331.3467 32.4082 0.000001 311.2676 -200.0488 Bcf0 BB*U*u0 g189.6182 -209.9727 m186.7988 -209.125 L186.6895 -209.0801 186.5635 -209.1094 186.4878 -209.1973 c186.4092 -209.2871 186.3989 -209.418 186.46 -209.5176 C187.8745 -212.4668 L187.9224 -212.5469 188.0137 -212.584 188.1069 -212.5859 c188.2012 -212.5898 188.2959 -212.5293 188.3472 -212.4551 C189.0508 -211.4863 L189.2578 -211.2461 189.7217 -210.7773 189.9961 -210.5879 c190.0801 -210.5293 190.124 -210.4336 190.1143 -210.334 c190.104 -210.2363 190.04 -210.1504 189.9478 -210.1133 C189.6182 -209.9727 Lf0 g197.2939 -227.002 m197.2939 -228.1387 196.3408 -229.0625 195.1719 -229.0625 C187.8628 -229.0625 185.3896 -229.0625 V185.3911 -222.5879 L185.3911 -221.8574 184.7925 -221.2578 184.063 -221.2578 C177.9961 -221.2578 L177.9961 -217.2168 177.9961 -205.0938 Y177.9961 -203.959 178.9473 -203.0352 180.1167 -203.0352 C195.1719 -203.0352 L196.3408 -203.0352 197.2939 -203.959 197.2939 -205.0938 C197.2939 -212.2813 L198.1191 -213.0117 199.1523 -213.9258 200.2803 -214.9199 C200.2803 -205.0938 L200.2803 -202.3125 197.9893 -200.0488 195.1719 -200.0488 C180.1167 -200.0488 L177.3008 -200.0488 175.0098 -202.3125 175.0098 -205.0938 C175.0098 -223.1172 L175.0098 -223.5176 175.1709 -223.9023 175.4561 -224.1836 C183.021 -231.6211 L183.3003 -231.8945 183.6763 -232.0488 184.0679 -232.0488 C195.1719 -232.0488 L197.79 -232.0488 199.9297 -230.0859 200.2207 -227.5762 C197.2939 -224.9902 L197.2939 -227.002 Lf194.3721 -211.6934 m193.9277 -211.3086 193.4141 -211.0684 192.877 -210.959 C192.8867 -211.2441 192.7988 -211.5293 192.5986 -211.7598 c192.3057 -212.1016 191.8564 -212.2246 191.4473 -212.125 C191.6035 -212.5156 191.5469 -212.9766 191.252 -213.3184 c190.958 -213.6582 190.5107 -213.7793 190.1011 -213.6797 C190.2588 -214.0703 190.2021 -214.5332 189.9072 -214.875 c189.7075 -215.1035 189.4375 -215.2344 189.1558 -215.2637 C189.3384 -215.7793 189.6514 -216.2539 190.0928 -216.6387 C204.7578 -229.5898 L209.0352 -224.6445 L194.3721 -211.6934 LBb1 (Unnamed gradient 4) 192.0225 -232.0488 90 32 1 0 0 1 0 0 Bg-0.000001 32 38.0259 0.000002 173.0093 -232.0488 Xm-0.000358 8195.8975 38.0259 0.000002 173.0098 -8427.9453 Bc-0.000001 25.6 38.0259 0.000002 173.0093 -232.0488 Bm0 6.4 38.0259 0.000002 173.0093 -206.4492 Bm-0.000358 8195.8975 38.0259 0.000002 173.0093 -200.0488 Bcf0 BB*U*uu0 g122.2896 -204.6309 m119.6074 -201.9512 117.3418 -202.0234 117.2539 -204.793 C117.1274 -208.7012 L109.8081 -216.0215 L109.1646 -216.6641 108.7002 -217.4102 108.416 -218.1855 C106.5024 -218.248 L104.2397 -218.3223 104.1792 -220.1719 106.3682 -222.3633 C114.4507 -230.4434 L116.6396 -232.6328 118.4907 -232.5762 118.564 -230.3125 C118.6265 -228.3965 L119.4019 -228.1152 120.1489 -227.6504 120.792 -227.0039 C128.1118 -219.6875 L132.0195 -219.5605 L134.791 -219.4707 134.8628 -217.2051 132.1836 -214.5254 C122.2896 -204.6309 Lf0 D0 g120.5264 -212.8594 m112.5371 -220.8496 L112.1401 -221.2461 111.4961 -221.2461 111.0996 -220.8496 c110.7026 -220.4531 110.7026 -219.8086 111.0996 -219.4121 C119.0894 -211.4219 L119.4863 -211.0254 120.1299 -211.0254 120.5264 -211.4219 c120.9238 -211.8184 120.9238 -212.4629 120.5264 -212.8594 CfU1 D136.9019 -200.4258 m136.3984 -199.9219 135.5825 -199.9219 135.0786 -200.4258 C128.5864 -206.9141 L128.083 -207.418 128.083 -208.2344 128.5859 -208.7383 c129.0894 -209.2422 129.9053 -209.2422 130.4092 -208.7383 C136.9014 -202.25 L137.4048 -201.7461 137.4048 -200.9297 136.9019 -200.4258 cBb1 (Unnamed gradient 4) 121.022 -232.0488 90 32.001 1 0 0 1 0 0 Bg-0.000001 32.001 37.2256 0.000002 102.1792 -232.0488 Xm-0.000355 8125.481 37.2256 0.000002 102.1797 -8357.5293 Bc-0.000001 25.6008 37.2256 0.000002 102.1792 -232.0488 Bm0 6.4002 37.2256 0.000002 102.1792 -206.4482 Bm-0.000355 8125.481 37.2256 0.000002 102.1792 -200.0479 Bcf0 BB*U*u0 g45.3281 -210.4961 m48.9326 -210.4961 L48.9326 -202.8887 L45.3281 -202.8887 L45.3281 -210.4961 Lfu0 g67.248 -220.5508 m67.248 -204.7129 L67.248 -202.1348 65.1606 -200.0488 62.585 -200.0488 C41.7515 -200.0488 L39.1758 -200.0488 37.0884 -202.1348 37.0884 -204.7129 C37.0884 -225.5469 L37.0884 -228.1211 39.1758 -230.209 41.7515 -230.209 C57.4077 -230.209 L55.9199 -219.043 L62.8721 -219.9707 67.248 -220.5508 Vf0 D0 g43.2915 -201.5547 m61.0444 -201.5547 L61.0444 -211.8301 L43.2915 -211.8301 L43.2915 -201.5547 Lf0 g43.3638 -226.7012 m40.2964 -226.7012 L40.2964 -223.6289 L43.3638 -223.6289 L43.3638 -226.7012 LfU1 D72.6489 -220.7227 m72.3794 -220.4531 72.0928 -220.2168 71.7925 -220.0078 C73.3916 -221.6426 73.3828 -224.2637 71.7617 -225.8828 c70.1289 -227.5176 67.4819 -227.5176 65.8496 -225.8828 C65.8481 -225.8809 65.8462 -225.8789 65.8442 -225.877 C68.9258 -222.7969 L58.251 -221.375 L58.9619 -226.709 L59.6733 -232.0488 L62.4282 -229.293 L63.0127 -229.8066 63.3311 -230.041 v66.1382 -232.1133 70.1807 -232.125 72.6489 -229.6582 c75.1167 -227.1895 75.1162 -223.1895 72.6489 -220.7227 cBb1 (Unnamed gradient 4) 55.7939 -232.0488 90 32 1 0 0 1 0 0 Bg-0.000001 32 42.0283 0.000002 35.0884 -232.0488 Xm-0.000352 8059.7451 42.0283 0.000002 35.0889 -8291.7939 Bc-0.000001 25.6 42.0283 0.000002 35.0884 -232.0488 Bm0 6.4 42.0283 0.000002 35.0884 -206.4492 Bm-0.000352 8059.7451 42.0283 0.000002 35.0884 -200.0488 Bcf0 BB*UUu*u0 g180.916 -304.7412 m181.3931 -304.7412 L182.9116 -304.7412 184.1455 -305.916 184.2251 -307.3877 C196.418 -307.3877 L196.498 -305.916 197.7314 -304.7412 199.25 -304.7412 C199.7305 -304.7412 L201.248 -304.7412 202.4775 -305.916 202.5596 -307.3877 C207.79 -307.3877 L207.79 -295.5225 L207.79 -293.4863 206.1426 -291.8389 204.1104 -291.8389 C175.9341 -291.8389 L173.8989 -291.8389 172.2505 -293.4863 172.2505 -295.5225 C172.2505 -307.3877 L178.083 -307.3877 L178.1621 -305.916 179.3965 -304.7412 180.916 -304.7412 Cf0 g202.5732 -309.6484 m202.5732 -310.5781 L202.5732 -312.1182 201.2979 -313.3701 199.7305 -313.3701 C199.25 -313.3701 L197.6807 -313.3701 196.4023 -312.1182 196.4023 -310.5781 C196.4023 -309.6484 L184.2407 -309.6484 L184.2407 -310.5781 L184.2407 -312.1182 182.9629 -313.3701 181.3931 -313.3701 C180.916 -313.3701 L179.3452 -313.3701 178.0674 -312.1182 178.0674 -310.5781 C178.0674 -309.6484 L171.5142 -309.6484 L171.5142 -313.499 L171.5142 -315.5322 173.165 -317.1816 175.1987 -317.1816 C204.8428 -317.1816 L206.877 -317.1816 208.5273 -315.5322 208.5273 -313.499 C208.5273 -309.6484 L202.5732 -309.6484 Lf0 g199.25 -306.2578 m198.5186 -306.2578 197.9189 -306.832 197.9189 -307.5342 C197.9189 -310.5781 L197.9189 -311.2793 198.5186 -311.8545 199.25 -311.8545 C199.7305 -311.8545 L200.46 -311.8545 201.0576 -311.2793 201.0576 -310.5781 C201.0576 -307.5342 L201.0576 -306.832 200.46 -306.2578 199.7305 -306.2578 C199.25 -306.2578 Lf0 g180.916 -306.2578 m180.1826 -306.2578 179.584 -306.832 179.584 -307.5342 C179.584 -310.5781 L179.584 -311.2793 180.1826 -311.8545 180.916 -311.8545 C181.3931 -311.8545 L182.1265 -311.8545 182.7241 -311.2793 182.7241 -310.5781 C182.7241 -307.5342 L182.7241 -306.832 182.1265 -306.2578 181.3931 -306.2578 C180.916 -306.2578 Lf196.5 -318.7549 m190.4692 -321.1113 183.1602 -318.7529 183.0869 -318.7295 c182.292 -318.4658 181.4346 -318.8984 181.1714 -319.6924 c180.9087 -320.4863 181.3384 -321.3428 182.1323 -321.6074 c182.4727 -321.7197 190.5376 -324.3408 197.6035 -321.582 c198.3828 -321.2764 198.7686 -320.3955 198.4648 -319.6162 c198.1602 -318.8369 197.2813 -318.4521 196.5 -318.7549 cBb1 (Unnamed gradient 4) 190.021 -322.8408 90 31.002 1 0 0 1 0 0 Bg-0.000001 31.002 41.0137 0.000002 169.5142 -322.8408 Xm-0.000358 8195.3965 41.0137 0.000002 169.5146 -8518.2383 Bc-0.000001 24.8016 41.0137 0.000002 169.5142 -322.8408 Bm0 6.20039 41.0137 0.000002 169.5142 -298.0391 Bm-0.000358 8195.3965 41.0137 0.000002 169.5142 -291.8389 Bcf0 BB*U*uu0 g251.8232 -303.2334 m254.9648 -303.2334 257.5195 -300.6777 257.5215 -297.5371 C257.5215 -297.5361 L257.5215 -294.3945 254.9648 -291.8389 251.8232 -291.8389 c248.6816 -291.8389 246.125 -294.3945 246.125 -297.5361 c246.125 -300.6777 248.6816 -303.2334 251.8232 -303.2334 cf0 D0 g251.8232 -294.8428 m253.3076 -294.8428 254.5156 -296.0518 254.5156 -297.5361 c254.5146 -299.0205 253.3076 -300.2295 251.8232 -300.2295 c250.3398 -300.2295 249.1309 -299.0205 249.1309 -297.5361 c249.1309 -296.0518 250.3398 -294.8428 251.8232 -294.8428 cfUu1 D0 g265.1279 -303.2334 m268.2686 -303.2334 270.8262 -300.6777 270.8262 -297.5361 c270.8262 -294.3945 268.2686 -291.8389 265.1279 -291.8389 c261.9854 -291.8389 259.4307 -294.3945 259.4307 -297.5361 c259.4307 -300.6777 261.9854 -303.2334 265.1279 -303.2334 cf0 D0 g265.1279 -294.8428 m266.6113 -294.8428 267.8193 -296.0518 267.8193 -297.5361 c267.8193 -299.0205 266.6113 -300.2295 265.1279 -300.2295 c263.6436 -300.2295 262.4355 -299.0205 262.4355 -297.5361 c262.4355 -296.0518 263.6436 -294.8428 265.1279 -294.8428 cfUu1 D0 g271.9893 -317.2451 m258.9609 -301.0928 L257.9492 -301.0928 L244.9229 -317.2451 L244.8018 -321.4404 247.1992 -323.8389 V258.4561 -308.8145 L269.7109 -323.8389 L272.1074 -321.4404 271.9893 -317.2451 Yf0 D258.1875 -306.6816 m257.4238 -306.6816 256.8066 -306.0645 256.8066 -305.3027 c256.8066 -304.541 257.4238 -303.9238 258.1875 -303.9238 c258.9482 -303.9238 259.5645 -304.541 259.5645 -305.3027 c259.5645 -306.0645 258.9482 -306.6816 258.1875 -306.6816 cBb1 (Unnamed gradient 4) 258.4561 -323.8389 90 32 1 0 0 1 0 0 Bg-0.000001 32 31.3057 0.000001 242.8018 -323.8389 Xm-0.000361 8262.3311 31.3057 0.000001 242.8018 -8586.1699 Bc-0.000001 25.6 31.3057 0.000001 242.8018 -323.8389 Bm0 6.4 31.3057 0.000001 242.8018 -298.2393 Bm-0.000361 8262.3311 31.3057 0.000001 242.8018 -291.8389 Bcf0 BBU*U*uu1 D0 g129.1851 -291.8389 m112.8589 -291.8389 L110.6953 -291.8389 108.9404 -293.5928 108.9404 -295.7568 C108.9404 -319.9199 L108.9404 -322.082 110.6953 -323.8389 112.8589 -323.8389 C129.1851 -323.8389 L131.3481 -323.8389 133.103 -322.082 133.103 -319.9199 C133.103 -295.7568 L133.103 -293.5928 131.3481 -291.8389 129.1851 -291.8389 Cf0 D0 g127.3633 -295.6445 m128.3267 -295.6455 129.106 -296.4277 129.106 -297.3896 c129.106 -298.3506 128.3267 -299.1299 127.3628 -299.1299 c126.4009 -299.1299 125.6206 -298.3506 125.6206 -297.3896 c125.6206 -296.4277 126.4009 -295.6445 127.3633 -295.6445 cf0 g127.3633 -300.8955 m128.3267 -300.8984 129.106 -301.6777 129.106 -302.6416 c129.106 -303.6006 128.3267 -304.3838 127.3628 -304.3838 c126.4009 -304.3838 125.6206 -303.6006 125.6206 -302.6416 c125.6206 -301.6777 126.4009 -300.8955 127.3633 -300.8955 cf0 g127.3633 -306.1152 m128.3267 -306.1152 129.106 -306.8945 129.106 -307.8564 c129.106 -308.8193 128.3267 -309.5986 127.3628 -309.5986 c126.4009 -309.5986 125.6206 -308.8193 125.6206 -307.8564 c125.6206 -306.8945 126.4009 -306.1152 127.3633 -306.1152 cf0 g121.0322 -295.6445 m121.9951 -295.6455 122.7749 -296.4277 122.7749 -297.3896 c122.7749 -298.3506 121.9951 -299.1299 121.0313 -299.1299 c120.0688 -299.1299 119.2891 -298.3506 119.2891 -297.3896 c119.2891 -296.4277 120.0688 -295.6445 121.0322 -295.6445 cf0 g121.0322 -300.8955 m121.9951 -300.8984 122.7749 -301.6777 122.7749 -302.6416 c122.7749 -303.6006 121.9951 -304.3838 121.0313 -304.3838 c120.0688 -304.3838 119.2891 -303.6006 119.2891 -302.6416 c119.2891 -301.6777 120.0688 -300.8955 121.0322 -300.8955 cf0 g121.0322 -306.1152 m121.9951 -306.1152 122.7749 -306.8945 122.7749 -307.8564 c122.7749 -308.8193 121.9951 -309.5986 121.0313 -309.5986 c120.0688 -309.5986 119.2891 -308.8193 119.2891 -307.8564 c119.2891 -306.8945 120.0688 -306.1152 121.0322 -306.1152 cf0 g114.7007 -295.6445 m115.6621 -295.6455 116.4429 -296.4277 116.4429 -297.3896 c116.4429 -298.3506 115.6621 -299.1299 114.7007 -299.1299 c113.7373 -299.1299 112.9575 -298.3506 112.9575 -297.3896 c112.9575 -296.4277 113.7373 -295.6445 114.7007 -295.6445 cf0 g114.7007 -300.8955 m115.6621 -300.8984 116.4429 -301.6777 116.4429 -302.6416 c116.4429 -303.6006 115.6621 -304.3838 114.7007 -304.3838 c113.7373 -304.3838 112.9575 -303.6006 112.9575 -302.6416 c112.9575 -301.6777 113.7373 -300.8955 114.7007 -300.8955 cf0 g114.7007 -306.1152 m115.6621 -306.1152 116.4429 -306.8945 116.4429 -307.8564 c116.4429 -308.8193 115.6621 -309.5986 114.7007 -309.5986 c113.7373 -309.5986 112.9575 -308.8193 112.9575 -307.8564 c112.9575 -306.8945 113.7373 -306.1152 114.7007 -306.1152 cf0 g127.4526 -320.5107 m114.394 -320.5107 L112.1763 -320.5107 110.3721 -318.7061 110.3721 -316.4873 c110.3721 -314.2705 112.1763 -312.4658 114.394 -312.4658 C127.4526 -312.4658 L129.6709 -312.4658 131.4751 -314.2705 131.4751 -316.4873 c131.4751 -318.7061 129.6709 -320.5107 127.4526 -320.5107 CfU1 D127.4526 -313.9863 m114.394 -313.9863 L113.0127 -313.9863 111.8921 -315.1074 111.8921 -316.4873 c111.8921 -317.8721 113.0127 -318.9902 114.394 -318.9902 C127.4526 -318.9902 L128.8345 -318.9902 129.9546 -317.8721 129.9546 -316.4873 c129.9546 -315.1074 128.8345 -313.9863 127.4526 -313.9863 CBb1 (Unnamed gradient 4) 121.022 -323.8389 90 32 1 0 0 1 0 0 Bg-0.000001 32 28.1626 0.000001 106.9404 -323.8389 Xm-0.000355 8124.897 28.1626 0.000001 106.9409 -8448.7363 Bc-0.000001 25.6 28.1626 0.000001 106.9404 -323.8389 Bm0 6.4 28.1626 0.000001 106.9404 -298.2393 Bm-0.000355 8124.897 28.1626 0.000001 106.9404 -291.8389 Bcf0 BB*U*u0 g68.2173 -308.5107 m68.0327 -308.3232 67.853 -308.1514 67.6704 -307.9697 C67.665 -308.5518 67.6587 -309.1367 Y67.6372 -311.124 66.1812 -312.5527 64.1968 -312.5332 C64.1919 -312.5332 L62.2192 -312.5117 60.7993 -311.0742 60.7993 -309.1113 c60.7993 -309.0957 60.8057 -308.4561 60.8125 -307.7588 C60.189 -307.7529 59.5024 -307.7451 Y58.5483 -307.7354 57.6802 -307.3789 57.0576 -306.7441 c56.4443 -306.1162 56.1074 -305.2568 56.1074 -304.3203 C56.1074 -304.2783 L56.1167 -303.3281 56.4722 -302.46 57.1079 -301.8359 c57.7441 -301.2139 58.6196 -300.875 59.5742 -300.8857 C59.6133 -300.8857 59.6782 -300.8867 V57.0586 -298.5146 54.7563 -295.9492 52.7891 -291.8389 C49.208 -299.9502 38.9058 -306.8193 37.2637 -308.5107 c35.6714 -310.1514 34.7261 -312.3916 34.7261 -314.7803 c34.7261 -319.7568 38.7568 -323.8389 43.7319 -323.8389 c48.71 -323.8389 52.7891 -321.1953 52.7891 -316.4678 c52.7891 -321.1943 56.8711 -323.8389 61.8481 -323.8389 c66.8237 -323.8389 70.8555 -319.7568 70.8555 -314.7803 c70.8555 -312.292 69.8101 -310.1514 68.2173 -308.5107 cf58.1504 -304.3018 m58.1416 -305.1318 58.6689 -305.6943 59.5239 -305.7031 C62.876 -305.7363 L62.8423 -309.0889 L62.833 -309.9199 63.3594 -310.4814 64.2158 -310.4902 c65.0698 -310.499 65.6069 -309.9492 65.6162 -309.1162 C65.6499 -305.7656 L69.002 -305.7988 L69.8589 -305.8076 70.3945 -305.2568 70.4023 -304.4268 c70.4116 -303.5928 69.8862 -303.0332 69.0298 -303.0234 C65.6777 -302.9902 L65.7119 -299.6396 L65.7207 -298.8076 65.1953 -298.2471 64.3403 -298.2373 c63.4839 -298.2295 62.9468 -298.7783 62.938 -299.6113 C62.9038 -302.9619 L59.5527 -302.9277 L58.6982 -302.9199 58.1582 -303.4697 58.1504 -304.3018 cBb1 (Unnamed gradient 4) 52.7905 -323.8389 90 32 1 0 0 1 0 0 Bg-0.000001 32 40.1294 0.000002 32.7261 -323.8389 Xm-0.000352 8056.6655 40.1294 0.000002 32.7266 -8380.5039 Bc-0.000001 25.6 40.1294 0.000002 32.7261 -323.8389 Bm0 6.4 40.1294 0.000002 32.7261 -298.2393 Bm-0.000352 8056.6655 40.1294 0.000002 32.7261 -291.8389 Bcf0 BB*U*u0 g344.4385 -291.9482 m344.3271 -291.833 344.1563 -291.8076 344.0137 -291.8779 C340.2305 -293.7549 L340.1172 -293.8135 340.0586 -293.9307 340.0439 -294.0537 c340.0313 -294.1787 340.0977 -294.3115 340.1914 -294.3906 C341.0977 -295.1201 L341.3936 -295.4238 341.6563 -295.7783 341.8809 -296.165 c341.9482 -296.2793 342.0723 -296.3496 342.2061 -296.3486 c342.3359 -296.3457 342.459 -296.2734 342.5215 -296.1514 C342.7441 -295.7295 L344.499 -292.3721 L344.5762 -292.2314 344.5488 -292.0615 344.4385 -291.9482 cf0 g313.4189 -316.3242 m311.6885 -318.0156 311.6602 -320.791 313.3535 -322.5195 c315.0479 -324.2529 317.8223 -324.2793 319.5508 -322.5889 C329.3496 -312.9941 L323.2188 -306.7295 L313.4189 -316.3242 Lf0 g333.6074 -296.5576 m324.6855 -305.292 L330.8184 -311.5566 L339.7393 -302.8203 L341.4688 -301.1279 341.499 -298.3545 339.8057 -296.624 c338.1143 -294.8936 335.3379 -294.8652 333.6074 -296.5576 Cf319.123 -308.0293 m319.6104 -307.54 319.6182 -306.7354 319.1396 -306.2334 c318.9063 -305.9873 318.5938 -305.8496 318.2578 -305.8457 c317.9229 -305.8447 317.6094 -305.9746 317.3711 -306.2139 C310.7686 -312.8701 310.7686 -312.8721 V310.5225 -313.1191 310.3984 -313.4492 310.3984 -313.7783 c310.3984 -314.0986 310.5156 -314.4199 310.752 -314.665 c310.9854 -314.9111 311.2979 -315.0488 311.6328 -315.0527 c311.9668 -315.0566 312.2832 -314.9248 312.5195 -314.6846 C319.123 -308.0293 LBb1 (Unnamed gradient 4) 327.4707 -323.8379 90 31.999 1 0 0 1 0 0 Bg-0.000001 31.999 38.1777 0.000002 308.3984 -323.8379 Xm-0.000364 8331.7871 38.1777 0.000002 308.3984 -8655.625 Bc-0.000001 25.5992 38.1777 0.000002 308.3984 -323.8379 Bm0 6.3998 38.1777 0.000002 308.3984 -298.2383 Bm-0.000364 8331.7871 38.1777 0.000002 308.3984 -291.8389 Bcf0 BB*UUu*u0 g111.6177 -133.4287 m107.9546 -133.4287 105.0449 -130.6157 104.542 -126.5884 c104.5562 -126.6812 103.0791 -118.5132 102.6006 -115.8672 C101.9688 -116.7095 101.5811 -117.7456 101.5811 -118.8799 C101.5811 -136.5933 L101.5811 -139.3794 103.8408 -141.6387 106.627 -141.6387 C113.7617 -141.6387 L115.958 -141.6387 117.8213 -140.2334 118.5156 -138.2759 C130.4253 -138.2759 L133.1445 -138.2759 135.3462 -136.1196 135.4526 -133.4268 C135.4404 -133.4272 135.4287 -133.4287 135.4165 -133.4287 C111.6177 -133.4287 Lf138.3584 -114.6841 m137.8418 -111.7031 136.0986 -109.6387 133.3115 -109.6387 C109.5127 -109.6387 L106.7256 -109.6387 104.0708 -111.7842 104.4658 -114.6841 C106.5723 -126.335 L106.9194 -129.1172 108.8306 -131.3833 111.6177 -131.3833 C135.4165 -131.3833 L138.2031 -131.3833 140.4624 -129.1221 140.4624 -126.335 C138.3584 -114.6841 LBb1 (Unnamed gradient 4) 121.022 -141.6387 90 32 1 0 0 1 0 0 Bg-0.000001 32 42.8813 0.000002 99.5811 -141.6387 Xm-0.000355 8124.897 42.8813 0.000002 99.5815 -8266.5352 Bc-0.000001 25.6 42.8813 0.000002 99.5811 -141.6387 Bm0 6.4 42.8813 0.000002 99.5811 -116.0386 Bm-0.000355 8124.897 42.8813 0.000002 99.5811 -109.6387 Bcf0 BB*U*uu0 g204.9512 -111.1958 m204.7646 -111.0112 L202.9346 -109.1812 199.9648 -109.1812 198.1357 -111.0112 C186.7935 -122.354 L188.1802 -122.9028 189.4546 -123.73 190.5396 -124.8159 c191.8564 -126.1323 192.7979 -127.7212 193.3184 -129.4556 C204.9521 -117.8247 L206.7813 -115.9946 206.7822 -113.0259 204.9512 -111.1958 Cf0 D0 g201.3125 -116.7407 m200.1563 -116.7407 199.2227 -115.8042 199.2197 -114.6499 c199.2227 -113.4937 200.1563 -112.5562 201.3145 -112.5562 c202.4688 -112.5571 203.4033 -113.4927 203.4033 -114.6479 c203.4033 -115.8022 202.4688 -116.7417 201.3125 -116.7407 cfU1 D182.7144 -123.6401 m180.3101 -123.6401 178.0493 -124.5767 176.3486 -126.2778 c174.5938 -128.0317 173.7168 -130.3374 173.7168 -132.6421 c173.7168 -133.8052 173.9414 -134.9673 174.3882 -136.0601 C179.8188 -130.6294 L180.918 -130.8521 182.0522 -131.4468 183.002 -132.3989 c183.9526 -133.3481 184.5483 -134.481 184.77 -135.5806 C179.3584 -140.9937 L182.603 -142.2915 186.4556 -141.6304 189.0791 -139.0083 c190.7798 -137.3071 191.7148 -135.0464 191.7148 -132.6411 c191.7148 -130.2368 190.7788 -127.978 189.0791 -126.2778 c187.3789 -124.5776 185.1187 -123.6401 182.7144 -123.6401 cBb1 (Unnamed gradient 4) 190.021 -141.6382 90 31.9995 1 0 0 1 0 0 Bg-0.000001 31.9995 37.0659 0.000002 171.7168 -141.6382 Xm-0.000358 8194.5488 37.0659 0.000002 171.7173 -8336.1875 Bc-0.000001 25.5996 37.0659 0.000002 171.7168 -141.6382 Bm0 6.3999 37.0659 0.000002 171.7168 -116.0386 Bm-0.000358 8194.5488 37.0659 0.000002 171.7168 -109.6387 Bcf0 BB*U*u0 g332.0547 -121.2266 m331.9961 -121.2129 L331.4336 -121.082 331.0977 -120.9941 Y331.0771 -122.834 L327.7822 -125.6606 317.2461 -121.6563 Y317.2441 -138.0454 L330.6133 -143.0879 331.8184 -137.6021 V333.6602 -138.0327 338.0518 -138.9619 341.7969 -139.0015 C341.9658 -122.6104 L338.2676 -122.5723 333.9355 -121.6636 332.0547 -121.2266 Cf314.4922 -109.6387 m313.6563 -109.6387 312.9775 -110.3164 312.9775 -111.1533 C312.9775 -140.1245 L312.9775 -140.9609 313.6563 -141.6387 314.4922 -141.6387 c315.3271 -141.6387 316.0059 -140.9609 316.0059 -140.1245 C316.0059 -111.1533 L316.0059 -110.3164 315.3271 -109.6387 314.4922 -109.6387 cBb1 (Unnamed gradient 4) 327.4717 -141.6387 90 32 1 0 0 1 0 0 Bg-0.000001 32 32.9883 0.000001 310.9775 -141.6387 Xm-0.000364 8332.7959 32.9883 0.000001 310.9775 -8474.4336 Bc-0.000001 25.6 32.9883 0.000001 310.9775 -141.6387 Bm0 6.4 32.9883 0.000001 310.9775 -116.0386 Bm-0.000364 8332.7959 32.9883 0.000001 310.9775 -109.6387 Bcf0 BB*U*uu0 g58.6143 -134.2573 m60.8828 -134.2573 62.7207 -132.4199 62.7207 -130.1504 C61.3511 -113.7476 L61.3511 -111.4805 59.5117 -109.6401 57.2441 -109.6401 C46.7998 -109.6401 L44.5322 -109.6401 42.6924 -111.4805 42.6924 -113.7476 C41.3228 -130.1504 L41.3228 -132.4199 43.1621 -134.2573 45.4292 -134.2573 C58.6143 -134.2573 Lf0 D0 g56.8857 -112.938 m57.5146 -112.897 58.0571 -113.373 58.0981 -114.002 C59.1245 -129.7471 L59.1655 -130.376 58.6895 -130.9189 58.0605 -130.9595 c57.4316 -131.0005 56.8887 -130.5244 56.8481 -129.8955 C55.8218 -114.1504 L55.7808 -113.5215 56.2568 -112.979 56.8857 -112.938 cf0 g50.8818 -114.0762 m50.8818 -113.4463 51.3926 -112.9355 52.0225 -112.9355 c52.6523 -112.9355 53.1631 -113.4463 53.1631 -114.0762 C53.1631 -129.8213 L53.1631 -130.4512 52.6523 -130.9619 52.0225 -130.9619 c51.3926 -130.9619 50.8818 -130.4512 50.8818 -129.8213 C50.8818 -114.0762 Lf0 g44.9185 -129.7471 m45.9468 -114.002 L45.9878 -113.373 46.5308 -112.8965 47.1592 -112.938 c47.7881 -112.979 48.2646 -113.522 48.2231 -114.1504 C47.1948 -129.8955 L47.1538 -130.5244 46.6108 -131.001 45.9824 -130.9595 c45.3535 -130.9185 44.877 -130.3755 44.9185 -129.7471 CfU1 D64.2007 -135.5889 m63.9824 -134.8647 63.2192 -134.4546 62.4951 -134.6724 C44.3613 -140.1289 L43.6377 -140.3472 43.2271 -141.1104 43.4453 -141.8345 c43.6631 -142.5586 44.4263 -142.9688 45.1509 -142.751 C52.7539 -140.4629 L52.7476 -140.5259 52.7349 -140.5869 52.7349 -140.6514 c52.7349 -141.6929 53.5791 -142.5371 54.6211 -142.5371 c55.6626 -142.5371 56.5068 -141.6929 56.5068 -140.6514 c56.5068 -140.1982 56.3408 -139.7886 56.0747 -139.4634 C63.2842 -137.2939 L64.0083 -137.0762 64.4185 -136.313 64.2007 -135.5889 cBb1 (Unnamed gradient 4) 52.791 -142.8096 90 33.1694 1 0 0 1 0 0 Bg-0.000001 33.1694 27.0957 0.000001 39.3228 -142.8096 Xm-0.000352 8056.8252 27.0957 0.000001 39.3232 -8199.6348 Bc-0.000001 26.5355 27.0957 0.000001 39.3228 -142.8096 Bm0 6.63389 27.0957 0.000001 39.3228 -116.2739 Bm-0.000352 8056.8252 27.0957 0.000001 39.3228 -109.6401 Bcf0 BB*U*u0 g268.6279 -112.3076 m269.0771 -111.3853 268.6934 -110.2744 267.7695 -109.8257 c266.8477 -109.3774 265.7354 -109.7622 265.2871 -110.6846 C264.3887 -112.5347 L265.6396 -112.8501 266.8271 -113.2559 267.9268 -113.7515 C268.6279 -112.3076 Lf0 g248.9561 -113.751 m250.0566 -113.2554 251.2441 -112.8501 252.4951 -112.5342 C251.5947 -110.6841 L251.1475 -109.7612 250.0352 -109.3774 249.1143 -109.8257 c248.1895 -110.2749 247.8066 -111.3857 248.2539 -112.3081 C248.9561 -113.751 Lfu0 g258.4404 -134.4902 m267.2832 -134.4902 274.4551 -129.73 274.4551 -123.8569 c274.4551 -117.9844 267.2832 -113.2236 258.4404 -113.2236 c249.5977 -113.2236 242.4277 -117.9844 242.4277 -123.8569 c242.4277 -129.73 249.5977 -134.4902 258.4404 -134.4902 cf0 D0 g258.4404 -115.0591 m263.3438 -115.0591 267.3154 -119.0332 267.3154 -123.9351 c267.3154 -128.8364 263.3438 -132.8096 258.4404 -132.8096 c253.54 -132.8096 249.5664 -128.8364 249.5664 -123.9351 c249.5664 -119.0332 253.54 -115.0591 258.4404 -115.0591 cfU1 D0 g261.5107 -136.3198 m261.8018 -137.1401 262.2617 -137.8516 262.832 -138.439 C259.3086 -140.1895 255.7021 -139.3115 253.459 -138.3823 C254.002 -137.8062 254.4395 -137.1133 254.7227 -136.3198 C243.5928 -132.3413 L242.4941 -135.415 244.0947 -138.7974 247.168 -139.896 c248.5684 -140.397 250.0332 -140.3311 251.3184 -139.8262 C253.8613 -141.0928 259.585 -143.1792 264.9033 -139.8218 C266.1895 -140.3306 267.6572 -140.3984 269.0635 -139.896 c272.1357 -138.7974 273.7383 -135.415 272.6387 -132.3413 C261.5107 -136.3198 Lf258.3447 -131.6641 m258.8711 -131.6641 259.2969 -131.2383 259.2969 -130.7134 C259.2969 -124.4092 L263.2324 -121.7852 L263.6689 -121.4941 263.7871 -120.9033 263.4961 -120.4663 c263.2051 -120.0293 262.6143 -119.9116 262.1768 -120.2026 C257.8857 -123.064 L257.8184 -123.1099 257.7715 -123.1729 257.7188 -123.231 C257.6904 -123.2559 257.666 -123.2808 257.6406 -123.3091 C257.6289 -123.3262 257.6191 -123.3418 257.6074 -123.3589 C257.4814 -123.5205 257.3945 -123.7144 257.3945 -123.9346 C257.3945 -130.7134 L257.3945 -131.2383 257.8193 -131.6641 258.3447 -131.6641 cBb1 (Unnamed gradient 4) 258.4414 -141.6387 90 32.0005 1 0 0 1 0 0 Bg-0.000001 32.0005 36.0273 0.000002 240.4277 -141.6387 Xm-0.000361 8263.8574 36.0273 0.000002 240.4277 -8405.4961 Bc-0.000001 25.6004 36.0273 0.000002 240.4277 -141.6387 Bm0 6.4001 36.0273 0.000002 240.4277 -116.0381 Bm-0.000361 8263.8574 36.0273 0.000002 240.4277 -109.6382 Bcf0 BB*UULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Office+Interface Icons) Ln0 A0 D0 J 0 j 1 w 4 M []0 d0 XR-8000.8745 1308.9668 m8382.125 1308.9668 L(N) *-8000.8745 1210.8716 m8382.125 1210.8716 L(N) *1428.4141 8000.8745 m1428.4141 -8382.125 L(N) *uu0 O0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa267.4004 -182.9688 m264.4727 -182.9688 L258.8193 -188.6191 L253.1689 -182.9688 L249.9453 -182.9688 L245.7852 -182.9688 242.4072 -186.3438 242.4072 -190.5078 C242.4072 -198.0449 L274.9395 -198.0449 L274.9395 -190.5078 L274.9395 -186.3438 271.5645 -182.9688 267.4004 -182.9688 Cf1 Ap0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa266.7725 -174.1445 m266.7725 -178.6162 263.1475 -182.2422 258.6729 -182.2422 c254.2012 -182.2422 250.5762 -178.6162 250.5762 -174.1445 c250.5762 -169.6709 254.2012 -166.0459 258.6729 -166.0459 c263.1475 -166.0459 266.7725 -169.6709 266.7725 -174.1445 cfUu0 Ap336.3896 -174.8311 m335.5977 -174.7754 L335.6143 -174.5664 335.6289 -174.3574 335.6289 -174.1445 c335.6289 -169.6719 332.0029 -166.0459 327.5313 -166.0459 c323.0586 -166.0459 319.4316 -169.6719 319.4316 -174.1445 c319.4316 -174.3711 319.4482 -174.5928 319.4648 -174.8135 C318.4727 -175.001 L313.2676 -175.9854 L314.4766 -178.4756 L315.6836 -180.9678 L319.6816 -177.4912 L320.0293 -177.1895 L321.2344 -180.1514 324.1357 -182.2422 327.5313 -182.2422 c330.9414 -182.2422 333.8535 -180.1318 335.0479 -177.1484 C335.4824 -177.4453 L339.8604 -180.4307 L340.7656 -177.8154 L341.6758 -175.2012 L336.3896 -174.8311 Lf*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa326.748 -187.6475 m322.0693 -182.9688 L321.96 -182.9688 L317.7969 -182.9688 314.4229 -186.3438 314.4229 -190.5078 C314.4229 -198.0449 L326.7871 -198.0449 L326.7734 -197.9814 326.748 -197.9229 326.748 -197.8555 C326.748 -187.6475 Lf333.3535 -182.9883 m328.7793 -187.5586 L328.7793 -197.8555 L328.7793 -197.9229 328.7539 -197.9814 328.7432 -198.0449 C340.5225 -198.0449 L340.5225 -190.5078 L340.5225 -186.4688 337.3438 -183.1816 333.3535 -182.9883 Cf*UUuuu*u0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa189.9961 -187.5068 m189.7217 -187.3174 189.2578 -186.8486 189.0508 -186.6084 C188.3472 -185.6396 L188.2959 -185.5645 188.2012 -185.5049 188.1069 -185.5088 c188.0137 -185.5107 187.9224 -185.5488 187.8745 -185.6279 C186.46 -188.5762 L186.3989 -188.6777 186.4092 -188.8066 186.4878 -188.8975 c186.5635 -188.9854 186.6895 -189.0156 186.7988 -188.9688 C189.6182 -188.1211 L189.6182 -188.1211 L189.9478 -187.9814 L190.04 -187.9443 190.104 -187.8584 190.1143 -187.7607 c190.124 -187.6602 190.0801 -187.5645 189.9961 -187.5068 cf*UUU0 D197.2939 -185.8135 m197.2939 -193 L197.2939 -194.1357 196.3408 -195.0596 195.1719 -195.0596 C180.1167 -195.0596 L178.9473 -195.0596 177.9961 -194.1357 177.9961 -193 C177.9961 -180.877 177.9961 -176.8359 V184.063 -176.8369 L184.7925 -176.8369 185.3911 -176.2373 185.3911 -175.5078 C185.3896 -169.0322 L187.8628 -169.0322 195.1719 -169.0322 Y196.3408 -169.0322 197.2939 -169.9561 197.2939 -171.0918 C197.2939 -173.1045 L200.2207 -170.5186 L199.9297 -168.0088 197.79 -166.0459 195.1719 -166.0459 C184.0679 -166.0459 L183.6763 -166.0459 183.3003 -166.2002 183.021 -166.4736 C175.4561 -173.9121 L175.1709 -174.1924 175.0098 -174.5762 175.0098 -174.9766 C175.0098 -193 L175.0098 -195.7822 177.3008 -198.0449 180.1167 -198.0449 C195.1719 -198.0449 L197.9893 -198.0449 200.2803 -195.7822 200.2803 -193 C200.2803 -183.1748 L199.1523 -184.1699 198.1191 -185.083 197.2939 -185.8135 Cf0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa190.0928 -181.457 m189.6514 -181.8408 189.3384 -182.3164 189.1558 -182.8301 C189.4375 -182.8604 189.7075 -182.9912 189.9072 -183.2207 c190.2021 -183.5605 190.2588 -184.0234 190.1011 -184.4141 C190.5107 -184.3154 190.958 -184.4375 191.252 -184.7764 c191.5469 -185.1182 191.6035 -185.5791 191.4473 -185.9697 C191.8564 -185.8701 192.3057 -185.9932 192.5986 -186.334 c192.7988 -186.5654 192.8867 -186.8506 192.877 -187.1348 C193.4141 -187.0254 193.9277 -186.7852 194.3721 -186.4014 C209.0352 -173.4502 L204.7578 -168.5049 L190.0928 -181.457 LfUuu*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa132.0195 -178.5337 m128.1118 -178.4072 L120.792 -171.0898 L120.1489 -170.4443 119.4019 -169.98 118.6265 -169.6973 C118.564 -167.7817 L118.4907 -165.5195 116.6396 -165.4609 114.4507 -167.6514 C106.3682 -175.7319 L104.1792 -177.9229 104.2397 -179.772 106.5024 -179.8462 C108.416 -179.9087 L108.7002 -180.6841 109.1646 -181.4307 109.8081 -182.0737 C117.1274 -189.3936 L117.2539 -193.3018 L117.3418 -196.0703 119.6074 -196.1436 122.2896 -193.4639 C132.1836 -183.5703 L134.8628 -180.8896 134.791 -178.623 132.0195 -178.5337 Cf0 D120.5264 -186.6719 m120.1299 -187.0693 119.4863 -187.0693 119.0894 -186.6719 C111.0996 -178.6826 L110.7026 -178.2861 110.7026 -177.6421 111.0996 -177.2451 c111.4961 -176.8481 112.1401 -176.8481 112.5371 -177.2451 C120.5264 -185.2344 L120.9238 -185.6309 120.9238 -186.2754 120.5264 -186.6719 cf*UUu0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa128.5859 -189.3574 m128.083 -189.8604 128.083 -190.6768 128.5864 -191.1797 C135.0786 -197.6689 L135.5825 -198.1719 136.3984 -198.1719 136.9019 -197.6689 c137.4048 -197.1641 137.4048 -196.3477 136.9014 -195.8438 C130.4092 -189.3564 L129.9053 -188.8535 129.0894 -188.8535 128.5859 -189.3574 cfUUu*uu1 D55.9199 -179.0518 m57.4077 -167.8867 L41.7515 -167.8867 L39.1758 -167.8867 37.0884 -169.9746 37.0884 -172.5488 C37.0884 -193.3809 L37.0884 -195.959 39.1758 -198.0449 41.7515 -198.0449 C62.585 -198.0449 L65.1606 -198.0449 67.248 -195.959 67.248 -193.3809 C67.248 -177.543 L62.8721 -178.125 55.9199 -179.0518 Yf0 D40.2964 -174.4648 m40.2964 -171.3936 L43.3638 -171.3936 L43.3638 -174.4648 L40.2964 -174.4648 Lf61.0444 -196.54 m43.2915 -196.54 L43.2915 -186.2646 L61.0444 -186.2646 L61.0444 -196.54 LfU1 D48.9326 -187.5986 m45.3281 -187.5986 L45.3281 -195.2061 L48.9326 -195.2061 L48.9326 -187.5986 Lf*U0 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa63.3311 -168.0537 m63.0127 -168.2881 62.4282 -168.8018 y59.6733 -166.0459 L58.9619 -171.3848 L58.251 -176.7207 L68.9258 -175.2988 L65.8442 -172.2178 L65.8462 -172.2148 65.8481 -172.2129 65.8496 -172.2109 c67.4819 -170.5781 70.1289 -170.5781 71.7617 -172.2109 c73.3828 -173.832 73.3916 -176.4521 71.7925 -178.0869 C72.0928 -177.877 72.3794 -177.6416 72.6489 -177.3721 c75.1162 -174.9053 75.1167 -170.9053 72.6489 -168.4365 c70.1807 -165.9697 66.1382 -165.9805 63.3311 -168.0537 cfUUuu*u1 D199.7305 -276.9336 m199.25 -276.9336 L197.7314 -276.9336 196.498 -275.7578 196.418 -274.2861 C184.2251 -274.2861 L184.1455 -275.7578 182.9116 -276.9336 181.3931 -276.9336 C180.916 -276.9336 L179.3965 -276.9336 178.1621 -275.7578 178.083 -274.2861 C172.2505 -274.2861 L172.2505 -286.1523 L172.2505 -288.1885 173.8989 -289.8359 175.9341 -289.8359 C204.1104 -289.8359 L206.1426 -289.8359 207.79 -288.1885 207.79 -286.1523 C207.79 -274.2861 L202.5596 -274.2861 L202.4775 -275.7578 201.248 -276.9336 199.7305 -276.9336 Cf204.8428 -264.4941 m175.1987 -264.4941 L173.165 -264.4941 171.5142 -266.1436 171.5142 -268.1768 C171.5142 -272.0273 L178.0674 -272.0273 L178.0674 -271.0977 L178.0674 -269.5566 179.3452 -268.3047 180.916 -268.3047 C181.3931 -268.3047 L182.9629 -268.3047 184.2407 -269.5566 184.2407 -271.0977 C184.2407 -272.0273 L196.4023 -272.0273 L196.4023 -271.0977 L196.4023 -269.5566 197.6807 -268.3047 199.25 -268.3047 C199.7305 -268.3047 L201.2979 -268.3047 202.5732 -269.5566 202.5732 -271.0977 C202.5732 -272.0273 L208.5273 -272.0273 L208.5273 -268.1768 L208.5273 -266.1436 206.877 -264.4941 204.8428 -264.4941 Cf*Uu*u0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa181.3931 -269.8203 m180.916 -269.8203 L180.1826 -269.8203 179.584 -270.3945 179.584 -271.0977 C179.584 -274.1396 L179.584 -274.8418 180.1826 -275.416 180.916 -275.416 C181.3931 -275.416 L182.1265 -275.416 182.7241 -274.8418 182.7241 -274.1396 C182.7241 -271.0977 L182.7241 -270.3945 182.1265 -269.8203 181.3931 -269.8203 Cf199.7305 -269.8203 m199.25 -269.8203 L198.5186 -269.8203 197.9189 -270.3945 197.9189 -271.0977 C197.9189 -274.1396 L197.9189 -274.8418 198.5186 -275.416 199.25 -275.416 C199.7305 -275.416 L200.46 -275.416 201.0576 -274.8418 201.0576 -274.1396 C201.0576 -271.0977 L201.0576 -270.3945 200.46 -269.8203 199.7305 -269.8203 Cf*UUu0 D182.1323 -260.0664 m181.3384 -260.3311 180.9087 -261.1895 181.1714 -261.9814 c181.4346 -262.7773 182.292 -263.209 183.0869 -262.9453 c183.1602 -262.9229 190.4692 -260.5645 196.5 -262.9189 c197.2813 -263.2227 198.1602 -262.8379 198.4648 -262.0586 c198.7686 -261.2793 198.3828 -260.3975 197.6035 -260.0938 c190.5376 -257.335 182.4727 -259.9551 182.1323 -260.0664 cfUUuu*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa246.125 -284.1387 m246.125 -287.2813 248.6816 -289.8359 251.8232 -289.8359 c254.9648 -289.8359 257.5215 -287.2813 257.5215 -284.1387 C257.5215 -284.1367 L257.5195 -280.9961 254.9648 -278.4404 251.8232 -278.4404 c248.6816 -278.4404 246.125 -280.998 246.125 -284.1387 cf0 D249.1309 -284.1387 m249.1309 -282.6533 250.3398 -281.4453 251.8232 -281.4453 c253.3076 -281.4453 254.5146 -282.6533 254.5156 -284.1387 C254.5156 -285.623 253.3076 -286.8311 251.8232 -286.8311 c250.3398 -286.8311 249.1309 -285.623 249.1309 -284.1387 cf*UUu*u1 D259.4307 -284.1387 m259.4307 -287.2813 261.9854 -289.8359 265.1279 -289.8359 c268.2686 -289.8359 270.8262 -287.2813 270.8262 -284.1387 c270.8262 -280.998 268.2686 -278.4404 265.1279 -278.4404 c261.9854 -278.4404 259.4307 -280.998 259.4307 -284.1387 cf0 D262.4355 -284.1387 m262.4355 -282.6533 263.6436 -281.4453 265.1279 -281.4453 c266.6113 -281.4453 267.8193 -282.6533 267.8193 -284.1387 c267.8193 -285.623 266.6113 -286.8311 265.1279 -286.8311 c263.6436 -286.8311 262.4355 -285.623 262.4355 -284.1387 cf*UU*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa269.7109 -257.8359 m258.4561 -272.8604 L247.1992 -257.8359 L244.8018 -260.2344 244.9229 -264.4297 Y257.9492 -280.5811 L258.9609 -280.5811 L271.9893 -264.4297 L272.1074 -260.2344 269.7109 -257.8359 Vf0 D258.1875 -277.752 m257.4238 -277.752 256.8066 -277.1348 256.8066 -276.373 c256.8066 -275.6104 257.4238 -274.9941 258.1875 -274.9941 c258.9482 -274.9941 259.5645 -275.6104 259.5645 -276.373 c259.5645 -277.1348 258.9482 -277.752 258.1875 -277.752 cf*UUu*u1 D129.1851 -257.8359 m112.8589 -257.8359 L110.6953 -257.8359 108.9404 -259.5918 108.9404 -261.7539 C108.9404 -285.9189 L108.9404 -288.0811 110.6953 -289.8359 112.8589 -289.8359 C129.1851 -289.8359 L131.3481 -289.8359 133.103 -288.0811 133.103 -285.9189 C133.103 -261.7539 L133.103 -259.5918 131.3481 -257.8359 129.1851 -257.8359 Cf0 D114.7007 -286.0293 m113.7373 -286.0293 112.9575 -285.248 112.9575 -284.2852 c112.9575 -283.3232 113.7373 -282.5439 114.7007 -282.5439 c115.6621 -282.5439 116.4429 -283.3232 116.4429 -284.2852 c116.4429 -285.248 115.6621 -286.0283 114.7007 -286.0293 cf114.7007 -280.7783 m113.7373 -280.7783 112.9575 -279.9961 112.9575 -279.0322 c112.9575 -278.0732 113.7373 -277.29 114.7007 -277.29 c115.6621 -277.29 116.4429 -278.0732 116.4429 -279.0322 c116.4429 -279.9961 115.6621 -280.7773 114.7007 -280.7783 cf114.7007 -275.5605 m113.7373 -275.5605 112.9575 -274.7813 112.9575 -273.8184 c112.9575 -272.8564 113.7373 -272.0762 114.7007 -272.0762 c115.6621 -272.0762 116.4429 -272.8564 116.4429 -273.8184 c116.4429 -274.7813 115.6621 -275.5605 114.7007 -275.5605 cf121.0322 -286.0293 m120.0688 -286.0293 119.2891 -285.248 119.2891 -284.2852 c119.2891 -283.3232 120.0688 -282.5439 121.0313 -282.5439 c121.9951 -282.5439 122.7749 -283.3232 122.7749 -284.2852 c122.7749 -285.248 121.9951 -286.0283 121.0322 -286.0293 cf121.0322 -280.7783 m120.0688 -280.7783 119.2891 -279.9961 119.2891 -279.0322 c119.2891 -278.0732 120.0688 -277.29 121.0313 -277.29 c121.9951 -277.29 122.7749 -278.0732 122.7749 -279.0322 c122.7749 -279.9961 121.9951 -280.7773 121.0322 -280.7783 cf121.0322 -275.5605 m120.0688 -275.5605 119.2891 -274.7813 119.2891 -273.8184 c119.2891 -272.8564 120.0688 -272.0762 121.0313 -272.0762 c121.9951 -272.0762 122.7749 -272.8564 122.7749 -273.8184 c122.7749 -274.7813 121.9951 -275.5605 121.0322 -275.5605 cf127.3633 -286.0293 m126.4009 -286.0293 125.6206 -285.248 125.6206 -284.2852 c125.6206 -283.3232 126.4009 -282.5439 127.3628 -282.5439 c128.3267 -282.5439 129.106 -283.3232 129.106 -284.2852 c129.106 -285.248 128.3267 -286.0283 127.3633 -286.0293 cf127.3633 -280.7783 m126.4009 -280.7783 125.6206 -279.9961 125.6206 -279.0322 c125.6206 -278.0732 126.4009 -277.29 127.3628 -277.29 c128.3267 -277.29 129.106 -278.0732 129.106 -279.0322 c129.106 -279.9961 128.3267 -280.7773 127.3633 -280.7783 cf127.3633 -275.5605 m126.4009 -275.5605 125.6206 -274.7813 125.6206 -273.8184 c125.6206 -272.8564 126.4009 -272.0762 127.3628 -272.0762 c128.3267 -272.0762 129.106 -272.8564 129.106 -273.8184 c129.106 -274.7813 128.3267 -275.5605 127.3633 -275.5605 cf127.4526 -269.209 m114.394 -269.209 L112.1763 -269.209 110.3721 -267.4033 110.3721 -265.1875 c110.3721 -262.9688 112.1763 -261.165 114.394 -261.165 C127.4526 -261.165 L129.6709 -261.165 131.4751 -262.9688 131.4751 -265.1875 c131.4751 -267.4033 129.6709 -269.209 127.4526 -269.209 Cf*U1 Ap0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa129.9546 -265.1875 m129.9546 -266.5664 128.8345 -267.6885 127.4526 -267.6885 C114.394 -267.6885 L113.0127 -267.6885 111.8921 -266.5664 111.8921 -265.1875 C111.8921 -265.1875 L111.8921 -263.8027 113.0127 -262.6855 114.394 -262.6855 C127.4526 -262.6855 L128.8345 -262.6855 129.9546 -263.8027 129.9546 -265.1875 C129.9546 -265.1875 LfUu0 Ap0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa59.5742 -280.79 m58.6196 -280.7988 57.7441 -280.4609 57.1079 -279.8379 c56.4722 -279.2148 56.1167 -278.3457 56.1074 -277.3965 C56.1074 -277.3535 L56.1074 -276.418 56.4443 -275.5586 57.0576 -274.9316 c57.6802 -274.2949 58.5483 -273.9395 59.5024 -273.9297 C60.189 -273.9229 60.8125 -273.915 V60.8057 -273.2188 60.7993 -272.5781 60.7993 -272.5645 c60.7993 -270.6016 62.2192 -269.1641 64.1919 -269.1406 C64.1968 -269.1406 L66.1812 -269.123 67.6372 -270.5508 67.6587 -272.5371 C67.665 -273.123 67.6704 -273.7051 V67.853 -273.5234 68.0327 -273.3525 68.2173 -273.165 c69.8101 -271.5225 70.8555 -269.3818 70.8555 -266.8936 c70.8555 -261.918 66.8237 -257.8359 61.8481 -257.8359 c56.8711 -257.8359 52.7891 -260.4814 52.7891 -265.2061 c52.7891 -260.4785 48.71 -257.8359 43.7319 -257.8359 c38.7568 -257.8359 34.7261 -261.918 34.7261 -266.8936 c34.7261 -269.2822 35.6714 -271.5225 37.2637 -273.165 c38.9058 -274.8564 49.208 -281.7236 52.7891 -289.8359 C54.7563 -285.7246 57.0586 -283.1602 59.6782 -280.7891 C59.6133 -280.79 59.5742 -280.79 yfu*u0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa62.8423 -272.5859 m62.833 -271.7539 63.3594 -271.1934 64.2158 -271.1836 c65.0698 -271.1758 65.6069 -271.7266 65.6162 -272.5586 c65.6499 -275.9102 L69.002 -275.875 L69.8589 -275.8682 70.3945 -276.4189 70.4023 -277.248 c70.4116 -278.0811 69.8862 -278.6406 69.0298 -278.6504 c65.6777 -278.6855 L65.7119 -282.0352 L65.7207 -282.8682 65.1953 -283.4277 64.3403 -283.4375 c63.4839 -283.4443 62.9468 -282.8965 62.938 -282.0645 c62.9038 -278.7129 L59.5527 -278.7461 L58.6982 -278.7559 58.1582 -278.2061 58.1504 -277.373 c58.1416 -276.543 58.6689 -275.9814 59.5239 -275.9727 c62.876 -275.9385 L62.8423 -272.5859 lf/BBAccumRotation (0.010180) XT*UUUuuu*u1 D341.8809 -285.5107 m341.6563 -285.8975 341.3936 -286.25 341.0977 -286.5557 C340.1914 -287.2832 L340.0977 -287.3643 340.0313 -287.4961 340.0439 -287.6211 c340.0586 -287.7441 340.1172 -287.8613 340.2305 -287.9189 C344.0137 -289.7979 L344.1563 -289.8682 344.3271 -289.8408 344.4385 -289.7275 c344.5488 -289.6143 344.5762 -289.4434 344.499 -289.3018 C342.7441 -285.9453 L342.7441 -285.9453 L342.5215 -285.5234 L342.459 -285.4023 342.3359 -285.3281 342.2061 -285.3271 c342.0723 -285.3242 341.9482 -285.3945 341.8809 -285.5107 cf/BBAccumRotation (0.010607) XT*UUU*u0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa319.5508 -259.0859 m317.8223 -257.3945 315.0479 -257.4229 313.3535 -259.1543 c311.6602 -260.8848 311.6885 -263.6582 313.4189 -265.3516 C323.2188 -274.9453 L329.3496 -268.6816 L319.5508 -259.0859 Lf339.7393 -278.8535 m330.8184 -270.1191 L324.6855 -276.3818 L333.6074 -285.1172 L335.3379 -286.8105 338.1143 -286.7813 339.8057 -285.0518 c341.499 -283.3203 341.4688 -280.5469 339.7393 -278.8535 Cf*U0 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa311.6328 -266.6211 m311.2979 -266.625 310.9854 -266.7637 310.752 -267.0107 C310.5156 -267.2559 310.3984 -267.5762 310.3984 -267.8975 c310.3984 -268.2266 310.5225 -268.5566 310.7686 -268.8027 c310.7686 -268.8057 317.3711 -275.4609 Y317.6094 -275.6992 317.9229 -275.8311 318.2578 -275.8281 c318.5938 -275.8242 318.9063 -275.6875 319.1396 -275.4404 c319.6182 -274.9395 319.6104 -274.1357 319.123 -273.6445 C312.5195 -266.9893 L312.2832 -266.749 311.9668 -266.6191 311.6328 -266.6211 cfUUuu0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa104.542 -90.6865 m105.0449 -86.6592 107.9546 -83.8462 111.6177 -83.8462 C135.4165 -83.8462 L135.4287 -83.8462 135.4404 -83.8477 135.4526 -83.8481 C135.3462 -81.1553 133.1445 -78.999 130.4253 -78.999 C118.5156 -78.999 L117.8213 -77.0415 115.958 -75.6362 113.7617 -75.6362 C106.627 -75.6362 L103.8408 -75.6362 101.5811 -77.8955 101.5811 -80.6816 C101.5811 -98.395 L101.5811 -99.5293 101.9688 -100.5654 102.6006 -101.4077 C103.0791 -98.7617 104.5562 -90.5938 104.542 -90.6865 cf1 Ap104.4658 -102.5908 m104.0708 -105.4907 106.7256 -107.6362 109.5127 -107.6362 C133.3115 -107.6362 L136.0986 -107.6362 137.8418 -105.5718 138.3584 -102.5908 C140.4624 -90.9399 L140.4624 -88.1528 138.2031 -85.8916 135.4165 -85.8916 C111.6177 -85.8916 L108.8306 -85.8916 106.9194 -88.1577 106.5723 -90.9399 C104.4658 -102.5908 LfUu*u0 Ap1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa204.9521 -99.4502 m193.3184 -87.8193 L192.7979 -89.5537 191.8564 -91.1426 190.5396 -92.459 c189.4546 -93.5449 188.1802 -94.3721 186.7935 -94.9209 C198.1357 -106.2637 L199.9648 -108.0938 202.9346 -108.0938 204.7646 -106.2637 C204.9512 -106.0791 L206.7822 -104.249 206.7813 -101.2803 204.9521 -99.4502 Cf0 D201.3145 -104.7188 m200.1563 -104.7188 199.2227 -103.7813 199.2197 -102.625 c199.2227 -101.4707 200.1563 -100.5342 201.3125 -100.5342 c202.4688 -100.5332 203.4033 -101.4727 203.4033 -102.627 c203.4033 -103.7822 202.4688 -104.7178 201.3145 -104.7188 cf*U0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa189.0791 -78.2666 m186.4556 -75.6445 182.603 -74.9834 179.3584 -76.2813 C184.77 -81.6943 L184.5483 -82.7939 183.9526 -83.9268 183.002 -84.876 c182.0522 -85.8281 180.918 -86.4229 179.8188 -86.6455 C174.3882 -81.2148 L173.9414 -82.3076 173.7168 -83.4697 173.7168 -84.6328 c173.7168 -86.9375 174.5938 -89.2432 176.3486 -90.9971 c178.0493 -92.6982 180.3101 -93.6348 182.7144 -93.6348 c185.1187 -93.6348 187.3789 -92.6973 189.0791 -90.9971 c190.7788 -89.2969 191.7148 -87.0381 191.7148 -84.6338 c191.7148 -82.2285 190.7798 -79.9678 189.0791 -78.2666 cfUu0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa332.0547 -96.0483 m333.9355 -95.6113 338.2676 -94.7026 341.9658 -94.6646 C341.7969 -78.2734 L338.0518 -78.313 333.6602 -79.2422 331.8184 -79.6729 C330.6133 -74.187 317.2441 -79.2295 Y317.2461 -95.6187 L327.7822 -91.6143 331.0771 -94.4409 V331.0977 -96.2808 L331.4336 -96.1929 331.9961 -96.062 V332.0547 -96.0483 Lfu0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa312.9775 -77.1504 m312.9775 -106.1216 L312.9775 -106.9585 313.6563 -107.6362 314.4922 -107.6362 c315.3271 -107.6362 316.0059 -106.9585 316.0059 -106.1216 C316.0059 -77.1504 L316.0059 -76.314 315.3271 -75.6362 314.4922 -75.6362 c313.6563 -75.6362 312.9775 -76.314 312.9775 -77.1504 CfUUu*u1 D58.6143 -83.0176 m45.4292 -83.0176 L43.1621 -83.0176 41.3228 -84.855 41.3228 -87.1245 C42.6924 -103.5273 L42.6924 -105.7944 44.5322 -107.6348 46.7998 -107.6348 C57.2441 -107.6348 L59.5117 -107.6348 61.3511 -105.7944 61.3511 -103.5273 C62.7207 -87.1245 L62.7207 -84.855 60.8828 -83.0176 58.6143 -83.0176 Cf0 D47.1592 -104.3369 m46.5308 -104.3784 45.9878 -103.9019 45.9468 -103.2729 C44.9185 -87.5278 L44.877 -86.8994 45.3535 -86.3564 45.9824 -86.3154 c46.6108 -86.2739 47.1538 -86.7505 47.1948 -87.3794 C48.2231 -103.1245 L48.2646 -103.7529 47.7881 -104.2959 47.1592 -104.3369 cf53.1631 -103.1987 m53.1631 -103.8286 52.6523 -104.3394 52.0225 -104.3394 c51.3926 -104.3394 50.8818 -103.8286 50.8818 -103.1987 C50.8818 -87.4536 L50.8818 -86.8237 51.3926 -86.313 52.0225 -86.313 c52.6523 -86.313 53.1631 -86.8237 53.1631 -87.4536 C53.1631 -103.1987 Lf58.0981 -103.2729 m58.0571 -103.9019 57.5146 -104.3779 56.8857 -104.3369 c56.2568 -104.2959 55.7808 -103.7534 55.8218 -103.1245 C56.8481 -87.3794 L56.8887 -86.7505 57.4316 -86.2744 58.0605 -86.3154 c58.6895 -86.356 59.1655 -86.8989 59.1245 -87.5278 C58.0981 -103.2729 Lf*U63.2842 -79.981 m56.0747 -77.8115 L56.3408 -77.4863 56.5068 -77.0767 56.5068 -76.6235 c56.5068 -75.582 55.6626 -74.7378 54.6211 -74.7378 c53.5791 -74.7378 52.7349 -75.582 52.7349 -76.6235 c52.7349 -76.688 52.7476 -76.749 52.7539 -76.812 C45.1509 -74.5239 L44.4263 -74.3062 43.6631 -74.7163 43.4453 -75.4404 c43.2271 -76.1646 43.6377 -76.9277 44.3613 -77.146 C62.4951 -82.6025 L63.2192 -82.8203 63.9824 -82.4102 64.2007 -81.686 c64.4185 -80.9619 64.0083 -80.1987 63.2842 -79.981 CfUu*u1 D248.2539 -104.9668 m247.8066 -105.8892 248.1895 -107 249.1143 -107.4492 c250.0352 -107.8975 251.1475 -107.5137 251.5947 -106.5908 C252.4951 -104.7407 L251.2441 -104.4248 250.0566 -104.0195 248.9561 -103.5239 C248.2539 -104.9668 Lf268.6279 -104.9673 m267.9268 -103.5234 L266.8271 -104.019 265.6396 -104.4248 264.3887 -104.7402 C265.2871 -106.5903 L265.7354 -107.5127 266.8477 -107.8975 267.7695 -107.4492 c268.6934 -107.0005 269.0771 -105.8896 268.6279 -104.9673 Cf*Uu*u0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa258.4404 -82.7847 m249.5977 -82.7847 242.4277 -87.5449 242.4277 -93.418 c242.4277 -99.2905 249.5977 -104.0513 258.4404 -104.0513 c267.2832 -104.0513 274.4551 -99.2905 274.4551 -93.418 c274.4551 -87.5449 267.2832 -82.7847 258.4404 -82.7847 cf0 D258.4404 -102.2158 m253.54 -102.2158 249.5664 -98.2417 249.5664 -93.3398 c249.5664 -88.4385 253.54 -84.4653 258.4404 -84.4653 c263.3438 -84.4653 267.3154 -88.4385 267.3154 -93.3398 c267.3154 -98.2417 263.3438 -102.2158 258.4404 -102.2158 cf*UU0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa269.0635 -77.3789 m267.6572 -76.8765 266.1895 -76.9443 264.9033 -77.4531 C259.585 -74.0957 253.8613 -76.1821 251.3184 -77.4487 C250.0332 -76.9438 248.5684 -76.8779 247.168 -77.3789 c244.0947 -78.4775 242.4941 -81.8599 243.5928 -84.9336 C254.7227 -80.9551 L254.4395 -80.1616 254.002 -79.4688 253.459 -78.8926 C255.7021 -77.9634 259.3086 -77.0854 262.832 -78.8359 C262.2617 -79.4233 261.8018 -80.1348 261.5107 -80.9551 C272.6387 -84.9336 L273.7383 -81.8599 272.1357 -78.4775 269.0635 -77.3789 cf263.2324 -95.4897 m259.2969 -92.8657 L259.2969 -86.5615 L259.2969 -86.0366 258.8711 -85.6108 258.3447 -85.6108 c257.8193 -85.6108 257.3945 -86.0366 257.3945 -86.5615 C257.3945 -93.3403 L257.3945 -93.5605 257.4814 -93.7544 257.6074 -93.916 C257.6191 -93.9331 257.6289 -93.9487 257.6406 -93.9658 C257.666 -93.9941 257.6904 -94.019 257.7188 -94.0439 C257.7715 -94.1021 257.8184 -94.165 257.8857 -94.2109 C262.1768 -97.0723 L262.6143 -97.3633 263.2051 -97.2456 263.4961 -96.8086 c263.7871 -96.3716 263.6689 -95.7808 263.2324 -95.4897 CfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF