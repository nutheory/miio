<?php
/********************************************************************************
DO NOT EDIT THIS FILE!

StudiVZ invite sender

You may not reprint or redistribute this code without permission from Octazen Solutions.

Copyright 2009 Octazen Solutions. All Rights Reserved
WWW: http://www.octazen.com
********************************************************************************/
if (!defined('__ABI')) die('Please include abi.php to use this invite sender!');

global $_OZ_SERVICES;
$_OZ_SERVICES['is_studivz'] = array('type'=>'is', 'label'=>'StudiVZ', 'class'=>'StudiVZInviter');

/////////////////////////////////////////////////////////////////////////////////////////
//StudiVZInviter
/////////////////////////////////////////////////////////////////////////////////////////
//@api
class StudiVZContact extends SocialContact {
	function StudiVZContact ($uid, $name, $imgurl) {
		parent::SocialContact($uid, $name, $imgurl);
	}
}

define('StudiVZInviter_UID_REGEX',"/<li[^>]*>\\s*<a\\s+href=\"\/Profile\/([^\/\"]*)[^>]*>/ims");
define('StudiVZInviter_CONTACT_REGEX',"/<td\\s+class=\"image\">\\s*<a\\s+href=\"\/Profile\/([^\/\"]*).*?<img\\s+src=\"([^\"]*)\"\\s+alt=\"([^\"]*)\"\\s+class=\"frame\"/ims");
define('StudiVZInviter_NEXTPAGE_REGEX',"/<a\\s+href=\"(\/Friends\/[^\"]*)\"[^>]*>&#187;<\/a>/ims");

//@api
class StudiVZInviter extends WebRequestor {

	var $uid;

	//@api
	function getInfo () {
		return array('id'=>'studivz');
	}

	//@api
	function login ($email, $password) {
		oz_set_domain('studivz');

		$html = $this->httpGet("https://secure.studivz.net");
		$form = oz_extract_form_by_id($html, "Loginbox");
		if ($form == null) {
			$this->close();
			return abi_set_error(_ABI_FAILED,'Cannot find login form');
		}
		$form->setField("email", $email);
		$form->setField("password", $password);
		$form->setField("login", "Login");
		$postData = $form->buildPostData();
		$html = $this->httpPost($form->action, $postData);
		if (strpos($html,"class=\"error\"")!==FALSE) {
			$this->close();
			return abi_set_error(_ABI_AUTHENTICATION_FAILED,'Bad username or password');
		}

		if (!preg_match(StudiVZInviter_UID_REGEX,$html,$matches)) {
			$this->close();
			return abi_set_error(_ABI_FAILED,'Cannot find UID');
		}
		$this->uid = $matches[1];
		$this->close();
		return abi_set_success();
	}

	//@api
	function logout()  {
		$this->httpGet("http://www.studivz.net/Logout/");
	}

	//@api
	function fetchContacts ($maxFetch=NULL, $maxPages=NULL) {

		//Get max contacts, pages, duration to fetch contacts
		if ($maxFetch===NULL) $maxFetch = oz_get_config('limit.max_contacts',1000);
		if ($maxPages===NULL) $maxPages = oz_get_config('limit.max_pages',30);

		// http://www.studivz.net/Friends/All/253f248a146f8052/p/1
		$ids = array();
		$al = array();
		for ($i=1; $i<=$maxPages; $i++) {
			$url = "http://www.studivz.net/Friends/All/".$this->uid."/p/".$i;
			$html = $this->httpGet($url);
			preg_match_all(StudiVZInviter_CONTACT_REGEX, $html, $matches, PREG_SET_ORDER);
			$c=0;
			foreach ($matches as $val) {
				$uid = trim($val[1]);
				if (!isset($ids[$uid])) {
					$ids[$uid] = $uid;
					$imgurl = $this->makeAbsolute($this->lastUrl,htmlentities2utf8(trim($val[2])));
					$name = trim(htmlentities2utf8(trim($val[3])));
					$contact = new StudiVZContact($uid,$name,$imgurl);
					$c++;
					$al[] = $contact;
					if (count($al)>=$maxFetch) break;
				}
			}
			if ($c == 0) break;
			if (count($al)>=$maxFetch) break;
			if (!preg_match(StudiVZInviter_NEXTPAGE_REGEX,$html,$matches)) break;
		}
		return $al;
	}

	//returns true if successful, false if failed.
	//@api
	function sendMessage ($uid, $subject, $message, $saveToSent = false) {
		$uids = array();
		$uids[] = $uid;
		return $this->sendMessages($uids,$subject,$message);
	}

	//@api
	function sendMessages ($uids, $subject, $message, $saveToSent = false) {

		$BATCH_SIZE = 10;
		$start = 0;
		$maxRecipientsPerMessage = $BATCH_SIZE;
		$res = true;
		$uidcount = count($uids);
		while ($start < $uidcount) {
			$n = $start + $maxRecipientsPerMessage;
			if ($n > $uidcount) $n=$uidcount;
			$html = $this->httpGet("http://www.studivz.net/Messages/WriteMessage");
			$form = oz_extract_form_by_id($html, "Messages_WriteForm");
			if ($form == null) {
				$res = false;
				return abi_set_error(_ABI_FAILED,'Cannot find message form');
				break;
			}
			$form->setField("subject", $subject);
			$form->setField("message", $message);
			for ($i = $start; $i < $n; $i++) {
				$uid = $uids[$i];
				if (oz_instanceof($uid,'SocialContact')) $uid = $uid->uid;
				$form->addField("recipientIds[]", $uid);
			}
			$postData = $form->buildPostData();
			$html = $this->httpPost($form->action, $postData);
			$res &= strpos($this->lastUrl,"SendSuccess")!==FALSE;
			$start = $n;
		}
		return $res==true;
	}

}
