%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (Scott Dunlap) ()%%Title: (computer_icons-kiwi-cobalt.eps)%%CreationDate: 7/8/07 8:49 PM%%BoundingBox: 31 -325 347 -74%%HiResBoundingBox: 31.9326 -324.6191 346.7158 -74.6709%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.596078 0.513725 0.505882 0.2 (New Color Swatch 1)%%+ 0.517647 0.14902 1 0.007843 (New Color Swatch 3)%%+ 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 190.625 -190.625 190.625 -190.625%AI3_TileBox: -187.875 -478.125 546.125 97.875%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 380 326%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -172.375 49.375 2 1829 1115 18 1 0 50 75 0 0%AI5_OpenViewLayers: 77%%PageOrigin:-53.8745 -867.125%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (New Gradient Swatch 1)(New Gradient Swatch 1) 0 3 Bd[<11121313141517181A1B1C1C1E1F20><0B0C0C0D0E0F0F1012131314151617><0B0B0C0D0E0F0F1012131314151617>0<EBEAE9E8E7E6E5E4E2E1E0DFDEDDDC><ECEBEAE9E8E7E6E5E3E2E1E0DFDEDD><EDECEBEAE9E8E7E6E4E3E2E1E0DFDE>4 %_Br<000000000000000000000000000000000000000000000000010101020203030404050506060708090A0A0B0C0D1011><00000000000000000000000000000000000000000000000001000001010202020203020304050405050607080A0A0B><0000000000000000000000000000000000000000000000000000000001010201020203030304050506070708090A0B>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F6F6F5F4F3F2F1F0EFEEECEB><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F8F8F7F6F5F5F4F3F2F1F0EEEDEC><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F7F6F5F4F3F2F1F0EFEEED>4 %_Br[0.85 0 53.6585 100 %_BS%_0.85 0 53.6585 100 Bs0.92 0 50 80 %_BS%_0.92 0 50 80 Bs1 0 80 0 %_BS%_1 0 80 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<0303030303030404040404040505050505060606080807070908080909090A0A0B0B0B0C0C0C0D0D0E0E0F0F100F0F10101111121213131414151616171717171818191A1A1B1B1C1C1C1D1E1E1F20202020212222222324242526262627282829><A4A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A8A8A8A9A9ABABAAABABADADAEAEAFAFB0B0B1B1B3B4B4B5B5B6B6B7B9B9BABBBBBCBDBDBEBFBFC0C1C2C2C3C4C5C5C6C8C8C9C9CACCCDCDCFCECFD0D1D2D3D4D5D6D6D7D8D8D9DADBDCDDDEDFE0E1E2>1<000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101020202020202020202030303030303030404040505050505060606060607080808080909090A0B0B0B0C0D0D0D0E0F0F10><F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDBDAD9D9D8D8D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCCCCCBCACAC9C8C7C7C6><797979797978787878787777777776767675757574747373737272717170706F6F6E6E6D6D6C6B6B6A6A6969686767666565646363626161605F5E5E5D5C5B5B5A5958575756555453525251504F4E4D4C4B4A4A494847464544434241403F3E3D>04 %_Br[0.160784 0.886274 1 0.062745 0.776471 0.239216 0 2 53.6585 100 %_BS%_0.160784 0.886274 1 0.062745 0.776471 0.239216 0 2 53.6585 100 Bs0.011765 0.643137 1 0 0.94902 0.47451 0 2 65 0 %_BS%_0.011765 0.643137 1 0 0.94902 0.47451 0 2 65 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 0.54902 0.678431 0 (New Color Swatch 3) 1 1 Xk(New Color Swatch 3)PcBb2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 1)Pc0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 (New Color Swatch 1) 0 1 Xk(New Color Swatch 1)Pc0.517647 0.14902 1 0.007843 0.54902 0.678431 0 (New Color Swatch 3) 0 1 Xk(New Color Swatch 3)Pc0.094118 0.007843 0.239216 0 0.54902 0.678431 0 (New Color Swatch 3) 0.8 1 Xk(New Color Swatch 3)Pc0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa(R=67 G=166 B=221 1)Pc0.764706 0.560784 0.490196 0.282353 0.25098 0.333333 0.368627 Xa(R=64 G=85 B=94 1)Pc0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa(R=53 G=112 B=153 1)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(reflection) Ln0 A*u1 D0 O0 J 0 j 1 w 4 M []0 d0 XR0 g122.3643 -214.8535 m130.1494 -207.0664 L130.7603 -207.2061 131.4258 -207.042 131.9004 -206.5664 C134.5884 -203.876 L135.3218 -203.1387 135.3218 -201.9463 134.584 -201.2129 c134.2168 -200.8457 133.7358 -200.6621 133.2549 -200.6621 c132.7725 -200.6621 132.29 -200.8467 131.9229 -201.2148 C129.2349 -203.9053 L128.7622 -204.3809 128.5986 -205.0439 128.7363 -205.6533 C120.9497 -213.4414 L120.5581 -213.8301 120.5605 -214.4648 120.9497 -214.8555 c121.3408 -215.2451 121.9727 -215.2451 122.3643 -214.8535 Cf130.0684 -222.5117 m128.2783 -223.9355 122.7871 -227.7744 115.3306 -227.791 c114.8086 -227.791 114.3877 -227.3672 114.3877 -226.8477 c114.3877 -226.3281 114.8086 -225.9063 115.3306 -225.9063 c119.4712 -225.9092 123.0078 -224.5791 125.5107 -223.2412 c126.7598 -222.5713 127.7505 -221.9033 128.4204 -221.4043 c129.0923 -220.9072 129.4209 -220.5986 129.4248 -220.6006 C129.5063 -220.5264 129.5996 -220.4736 129.6958 -220.4326 C126.2393 -219.8604 122.9194 -218.2695 120.2544 -215.6035 c117.7192 -213.0684 116.1318 -209.9453 115.4883 -206.6738 C115.4688 -206.6748 115.4492 -206.6729 115.4297 -206.6738 C115.355 -206.7549 115.0825 -207.0654 114.6577 -207.6406 c113.1567 -209.6582 110.1489 -214.5244 110.1553 -220.7314 c110.1553 -221.252 109.7329 -221.6729 109.2144 -221.6729 c108.6934 -221.6729 108.2715 -221.25 108.2734 -220.7295 c108.2891 -213.8047 111.5996 -208.5781 113.2109 -206.4346 C111.9351 -206.1055 110.728 -205.4443 109.729 -204.4443 c108.6411 -203.3564 107.9541 -202.0225 107.6558 -200.623 C101.9604 -207.9297 102.1392 -218.3203 108.1987 -225.4277 C108.1035 -225.5332 108.0166 -225.6475 107.9458 -225.7783 c107.4702 -226.667 107.8022 -227.7754 108.689 -228.251 c109.3989 -228.6328 110.2432 -228.4902 110.7998 -227.9688 C117.7178 -233.5801 127.5483 -233.7842 134.6914 -228.5986 C133.7988 -228.2246 132.9609 -227.6777 132.2339 -226.9512 c130.9878 -225.7051 130.2749 -224.1348 130.0684 -222.5117 CBb1 (New Gradient Swatch 1) 119.3267 -232.3389 90 31.7158 1 0 0 1 0 0 Bg-0.000001 31.7158 37.3613 0.000002 99.9604 -232.3389 Xm-0.000355 8124.647 37.3613 0.000002 99.9609 -8356.9863 Bc-0.000001 25.3727 37.3613 0.000002 99.9604 -232.3389 Bm0 6.34316 37.3613 0.000002 99.9604 -206.9658 Bm-0.000355 8124.647 37.3613 0.000002 99.9604 -200.623 Bcf0 BB*U0 D0 0.34902 1 0 1 0.690196 0 Xa134.0698 -212.1797 m134.0698 -212.1807 L134.0698 -212.1797 Lf1 XR271.3184 -223.292 m269.8008 -223.1543 270.8359 -221.291 v270.8984 -221.1777 270.9443 -221.0859 270.9736 -221.0137 C275.5039 -216.4844 L276.3164 -215.6719 276.3164 -214.3408 275.5039 -213.5273 C263.208 -201.2334 L262.3936 -200.4199 261.0645 -200.4199 260.251 -201.2334 C253.9326 -207.5518 L254.1826 -207.8213 254.5635 -207.8555 Y257.6689 -206.4063 258.5068 -207.5 Y260.6475 -209.6396 257.4961 -212.6484 Y254.4893 -215.7988 252.3506 -213.6582 V251.2539 -212.8203 252.7041 -209.7148 V252.6689 -209.334 252.4023 -209.084 V245.4707 -216.0127 L244.6602 -216.8262 244.6602 -218.1553 245.4707 -218.9688 C251.2588 -224.7539 L251.667 -224.5293 251.7178 -224.0156 Y250.2695 -220.9102 251.3623 -220.0723 Y253.501 -217.9326 256.5107 -221.082 Y259.6602 -224.0898 257.5205 -226.2295 V256.6826 -227.3223 253.5771 -225.874 V253.0625 -225.9248 252.8379 -226.334 V257.7656 -231.2637 L258.5801 -232.0762 259.9102 -232.0771 260.7236 -231.2637 C265.8643 -226.1221 L265.9375 -226.0918 266.0273 -226.0469 266.1416 -225.9834 c268.0049 -224.9482 268.1436 -226.4668 Y266.6943 -229.5723 267.7861 -230.4092 Y269.9268 -232.5488 273.5947 -228.7432 Y277.3984 -225.0762 275.2607 -222.9365 V274.4238 -221.8428 271.3184 -223.292 VBb1 (New Gradient Swatch 1) 260.4883 -231.873 90 31.25 1 0 0 1 0 0 Bg-0.000001 31.25 36.7383 0.000002 242.6602 -231.873 Xm-0.000361 8265.0391 36.7383 0.000002 242.6602 -8496.9121 Bc-0.000001 25 36.7383 0.000002 242.6602 -231.873 Bm0 6.25 36.7383 0.000002 242.6602 -206.873 Bm-0.000361 8265.0391 36.7383 0.000002 242.6602 -200.623 Bcf0 BB*uu1 D0 XR0 g52.1509 -200.623 m43.3042 -200.625 36.1177 -207.8154 36.1157 -216.6602 c36.1177 -225.5049 43.3042 -232.6934 52.1509 -232.6953 c60.9937 -232.6934 68.1802 -225.5049 68.1821 -216.6602 c68.1802 -207.8154 60.9937 -200.625 52.1509 -200.623 cf0 D0 g52.1509 -230.6934 m44.4126 -230.6807 38.1284 -224.3965 38.1157 -216.6602 c38.1284 -208.9238 44.4126 -202.6396 52.1509 -202.625 c59.8853 -202.6396 66.1699 -208.9238 66.1821 -216.6602 c66.1699 -224.3965 59.8853 -230.6807 52.1509 -230.6934 cfUu1 D0 g52.1499 -204.6641 m45.5361 -204.6641 40.1558 -210.0469 40.1558 -216.6602 c40.1558 -223.2744 45.5361 -228.6533 52.1499 -228.6533 c58.7627 -228.6533 64.1431 -223.2744 64.1431 -216.6602 c64.1431 -210.0469 58.7627 -204.6641 52.1499 -204.6641 cf0 D0 g48.1997 -218.5068 m47.9609 -217.5313 L48.1348 -217.5977 48.3428 -217.666 48.5854 -217.7393 c48.8276 -217.8105 49.0649 -217.8467 49.2974 -217.8467 c49.7681 -217.8467 50.0869 -217.7676 50.2534 -217.6084 c50.4204 -217.4492 50.5029 -217.167 50.5029 -216.7637 c50.5029 -216.5391 50.4766 -216.292 50.4224 -216.0215 c50.3672 -215.748 50.3013 -215.4629 50.2202 -215.1592 C49.3267 -211.9961 L49.2461 -211.6621 49.1885 -211.3652 49.1528 -211.1006 c49.1157 -210.8369 49.0986 -210.5791 49.0986 -210.3262 c49.0986 -209.6768 49.3389 -209.1396 49.8193 -208.7158 c50.3003 -208.293 50.9736 -208.082 51.8403 -208.082 c52.4043 -208.082 52.8984 -208.1563 53.3247 -208.3037 c53.7515 -208.4531 54.3218 -208.667 55.0361 -208.9502 C55.2754 -209.9268 L55.1523 -209.8672 54.9541 -209.8008 54.6797 -209.7246 c54.4058 -209.6475 54.1611 -209.6113 53.9443 -209.6113 c53.4829 -209.6113 53.1577 -209.6875 52.9702 -209.8389 c52.7822 -209.9902 52.689 -210.2744 52.689 -210.6943 c52.689 -210.8604 52.7178 -211.1064 52.7759 -211.4316 c52.8335 -211.7578 52.8989 -212.0459 52.9717 -212.2979 C53.8623 -215.4512 L53.9492 -215.7402 54.0088 -216.0586 54.0415 -216.4053 c54.0742 -216.752 54.0903 -216.9941 54.0903 -217.1318 c54.0903 -217.7969 53.8574 -218.3359 53.3906 -218.751 c52.9243 -219.167 52.2603 -219.375 51.3999 -219.375 c50.9224 -219.375 50.4165 -219.29 49.8804 -219.1191 c49.3447 -218.9502 48.7852 -218.7461 48.1997 -218.5068 Cf54.8799 -224.5654 m54.4644 -224.9551 53.9639 -225.1504 53.3789 -225.1504 c52.7939 -225.1504 52.2905 -224.9551 51.873 -224.5654 c51.4536 -224.1748 51.2441 -223.7061 51.2441 -223.1572 c51.2441 -222.6074 51.4536 -222.1396 51.873 -221.7539 c52.2905 -221.3672 52.7939 -221.1738 53.3789 -221.1738 c53.9639 -221.1738 54.4644 -221.3672 54.8799 -221.7539 c55.2954 -222.1396 55.5034 -222.6074 55.5034 -223.1572 c55.5034 -223.7061 55.2954 -224.1748 54.8799 -224.5654 cBb1 (New Gradient Swatch 1) 52.1489 -232.6953 90 32.0723 1 0 0 1 0 0 Bg-0.000001 32.0723 36.0664 0.000002 34.1157 -232.6953 Xm-0.000352 8056.0239 36.0664 0.000002 34.1162 -8288.7188 Bc-0.000001 25.6578 36.0664 0.000002 34.1157 -232.6953 Bm0 6.41445 36.0664 0.000002 34.1157 -207.0371 Bm-0.000352 8056.0239 36.0664 0.000002 34.1157 -200.623 Bcf0 BBU*U*u1 D0 g214.9004 -221.292 m200.5918 -209.4717 L200.5918 -216.8184 L185.9863 -219.6563 L185.9863 -222.5059 L200.5918 -225.4277 L200.5918 -232.7324 L214.9004 -221.292 Lf197.373 -210.8496 m182.7676 -207.9277 L182.7676 -200.623 L168.459 -212.0635 L182.7676 -223.8838 L182.7676 -216.5371 L197.373 -213.6992 L197.373 -210.8496 LBb1 (New Gradient Swatch 1) 191.6797 -232.7324 90 32.1094 1 0 0 1 0 0 Bg-0.000001 32.1094 50.4419 0.000002 166.4585 -232.7324 Xm-0.000358 8195.5547 50.4419 0.000002 166.459 -8428.2871 Bc-0.000001 25.6875 50.4419 0.000002 166.4585 -232.7324 Bm0 6.42187 50.4419 0.000002 166.4585 -207.0449 Bm-0.000358 8195.5547 50.4419 0.000002 166.4585 -200.623 Bcf0 BB*U*uu0 g120.2983 -123.1284 m119.9458 -122.9775 119.5625 -122.896 119.1772 -122.896 c118.8247 -122.896 118.4697 -122.9634 118.1357 -123.0962 c117.73 -123.2529 116.9819 -123.6729 116.5762 -124.6045 c116.4028 -125.002 116.3394 -125.3936 116.3418 -125.7275 c116.3418 -126.1821 116.4478 -126.541 116.5415 -126.7734 c116.6982 -127.1812 117.1162 -127.9272 118.0498 -128.333 C118.2397 -128.4165 L118.2671 -128.4165 L118.5625 -128.5186 118.8706 -128.5693 119.1772 -128.5674 c119.5317 -128.5693 119.8867 -128.5 120.2188 -128.3677 c120.9204 -128.0947 121.4829 -127.5464 121.7803 -126.8594 c121.9336 -126.5024 122.0127 -126.1191 122.0127 -125.7339 c122.0127 -125.3813 121.9478 -125.0244 121.813 -124.6899 c121.54 -123.9907 120.9956 -123.4263 120.2983 -123.1284 cf0 D0 g119.9458 -126.062 m119.8501 -126.2764 119.6973 -126.4229 119.4829 -126.5083 c119.3813 -126.5493 119.2793 -126.5679 119.1772 -126.5679 c119.0649 -126.5679 118.957 -126.5454 118.853 -126.5005 C118.8125 -126.4824 L118.5562 -126.3599 118.4512 -126.1563 118.3984 -126.0317 c118.374 -125.9722 118.3394 -125.856 118.3413 -125.7275 c118.3413 -125.6299 118.3555 -125.5298 118.4106 -125.4014 c118.5313 -125.1201 118.7471 -125.0083 118.8716 -124.9551 c118.9736 -124.9146 119.0752 -124.896 119.1772 -124.896 c119.2852 -124.896 119.3975 -124.9185 119.5117 -124.9673 c119.7173 -125.0571 119.8682 -125.2119 119.9541 -125.4238 c119.9946 -125.5278 120.0132 -125.6318 120.0132 -125.7339 c120.0132 -125.8438 119.9907 -125.9561 119.9458 -126.062 cfU1 D0 g123.3267 -129.2275 m121.8232 -131.0127 119.2754 -131.6851 117.0239 -130.7104 c114.2729 -129.521 113.0093 -126.3262 114.1987 -123.5762 c115.3882 -120.8271 118.5835 -119.5625 121.3335 -120.751 c122.1255 -121.0942 122.7896 -121.6069 123.312 -122.2241 C124.458 -118.7139 127.2842 -115.9614 130.8379 -114.916 C129.3818 -113.3442 127.5903 -112.0361 125.4976 -111.1299 c117.4351 -107.6416 108.0679 -111.3496 104.5776 -119.4121 c101.0884 -127.4756 104.7954 -136.8418 112.8589 -140.332 c119.2349 -143.0908 126.4121 -141.3384 130.8682 -136.5044 C127.314 -135.4697 124.4844 -132.7295 123.3267 -129.2275 Cfu0 g134.0029 -116.1187 m128.7129 -116.1206 124.4185 -120.417 124.4165 -125.7051 c124.4185 -130.9946 128.7129 -135.2915 134.0029 -135.2935 c139.2905 -135.2915 143.5869 -130.9946 143.5894 -125.7051 c143.5869 -120.417 139.2905 -116.1206 134.0029 -116.1187 cf0 D137.79 -132.2554 m135.3682 -133.6533 132.4873 -133.5562 130.2207 -132.251 C134.0029 -125.7017 L126.4385 -125.7012 L126.4434 -123.0874 127.7979 -120.543 130.2197 -119.145 C134.0044 -125.7002 L137.7861 -119.1499 L138.9023 -119.791 139.8701 -120.7241 140.5586 -121.917 c141.2461 -123.1084 141.5703 -124.4131 141.5674 -125.7002 C134.0054 -125.7012 L137.79 -132.2554 LBb1 (New Gradient Swatch 1) 123.4272 -141.6416 90 31.8237 1 0 0 1 0 0 Bg-0.000001 31.8237 46.501 0.000002 99.0884 -141.6416 Xm-0.000355 8128.7515 46.501 0.000002 99.0889 -8270.3926 Bc-0.000001 25.459 46.501 0.000002 99.0884 -141.6416 Bm0 6.36475 46.501 0.000002 99.0884 -116.1826 Bm-0.000355 8128.7515 46.501 0.000002 99.0884 -109.8179 Bcf0 BBU*U*u1 D0 g343.2549 -112.3516 m342.0068 -111.1035 L340.46 -109.5552 338.0537 -109.4106 336.3291 -110.6426 C336.3311 -110.6611 336.335 -113.3491 Y336.335 -114.3491 335.5244 -115.1597 334.5244 -115.1587 C331.8701 -115.1587 L331.8213 -115.1592 331.7725 -115.1484 331.7236 -115.1445 C329.3721 -117.4966 L329.3721 -118.8877 L329.3721 -119.5654 328.9961 -120.1489 328.4453 -120.4595 C329.6143 -121.022 330.6982 -121.772 331.6436 -122.7173 c331.8535 -122.9277 332.0439 -123.1504 332.2354 -123.3726 C340.8613 -114.7451 L341.0088 -114.5986 341.2002 -114.5254 341.3926 -114.5254 c341.585 -114.5254 341.7764 -114.5986 341.9229 -114.7451 c342.2158 -115.0381 342.2158 -115.5137 341.9229 -115.8066 C333.1533 -124.5767 L333.7285 -125.4556 334.1641 -126.3979 334.4775 -127.3716 C343.2549 -118.5938 L344.9775 -116.8691 344.9795 -114.0747 343.2549 -112.3516 Cfu0 g316.5811 -124.1294 m312.8125 -127.8994 312.8125 -134.0078 316.5811 -137.7769 c320.3506 -141.5469 326.459 -141.5469 330.2285 -137.7773 c333.9971 -134.0078 333.9971 -127.8994 330.2285 -124.1294 c326.459 -120.3599 320.3496 -120.3608 316.5811 -124.1294 cf0 D322.7363 -135.7666 m321.5908 -136.9116 319.7354 -136.9116 318.5908 -135.7671 c317.4463 -134.6221 317.4463 -132.7671 318.5908 -131.6216 c319.7354 -130.4775 321.5908 -130.4775 322.7363 -131.6216 c323.8809 -132.7671 323.8809 -134.6216 322.7363 -135.7666 cBb1 (New Gradient Swatch 1) 329.1514 -140.6045 90 30.7861 1 0 0 1 0 0 Bg-0.000001 30.7861 36.167 0.000002 310.8125 -140.6045 Xm-0.000364 8333.9688 36.167 0.000002 310.8125 -8474.5742 Bc-0.000001 24.6289 36.167 0.000002 310.8125 -140.6045 Bm0 6.15723 36.167 0.000002 310.8125 -115.9756 Bm-0.000364 8333.9688 36.167 0.000002 310.8125 -109.8184 Bcf0 BBU*U*uu1 D0 g204.3584 -115.3672 m201.1895 -115.3672 L203.2695 -114.3828 204.7109 -112.271 204.7109 -109.8179 C180.8262 -109.8179 L180.8262 -112.271 182.269 -114.3828 184.3491 -115.3672 C180.1792 -115.3672 L175.9292 -115.3696 172.4766 -118.8218 172.4766 -123.0718 C172.4766 -134.2578 L172.4766 -138.5103 175.9292 -141.9629 180.1792 -141.9648 C204.3584 -141.9648 L208.6094 -141.9629 212.0615 -138.5103 212.0635 -134.2578 C212.0635 -123.0718 L212.0615 -118.8218 208.6094 -115.3696 204.3584 -115.3672 Cf0 D0 g210.0625 -134.2578 m210.0576 -137.4033 207.502 -139.959 204.3584 -139.9634 C180.1792 -139.9634 L177.0381 -139.959 174.4824 -137.4033 174.4761 -134.2578 C174.4761 -123.0718 L174.4824 -119.9307 177.0381 -117.373 180.1792 -117.3667 C204.3584 -117.3667 L207.502 -117.373 210.0576 -119.9307 210.0625 -123.0718 C210.0625 -134.2578 LfUu1 D0 g204.833 -119.9282 m179.7075 -119.9282 L178.0947 -119.9282 176.7837 -121.2393 176.7837 -122.8525 C176.7837 -134.478 L176.7837 -136.0913 178.0947 -137.4023 179.7075 -137.4023 C204.833 -137.4023 L206.4443 -137.4023 207.7559 -136.0913 207.7559 -134.478 C207.7559 -122.8525 L207.7559 -121.2393 206.4443 -119.9282 204.833 -119.9282 Cf0 D191.0986 -124.5493 m187.3359 -128.3125 L189.1602 -130.1367 L188.4307 -130.4897 L181.1221 -134.0327 L179.6289 -134.7583 L180.3525 -133.2637 L183.8955 -125.9531 L184.248 -125.2246 L184.8193 -125.7969 L186.0732 -127.0493 L190.2441 -122.8784 L191.5068 -124.1411 L191.0986 -124.5493 LBb1 (New Gradient Swatch 1) 192.2695 -141.9648 90 32.147 1 0 0 1 0 0 Bg-0.000001 32.147 43.5874 0.000002 170.4761 -141.9648 Xm-0.000358 8196.1445 43.5874 0.000002 170.4766 -8338.1094 Bc-0.000001 25.7176 43.5874 0.000002 170.4761 -141.9648 Bm0 6.42939 43.5874 0.000002 170.4761 -116.2471 Bm-0.000358 8196.1445 43.5874 0.000002 170.4761 -109.8179 Bcf0 BBU*U*u1 D0 g252.043 -131.0996 m252.1689 -132.627 252.5068 -134.251 253.1123 -135.9678 C253.6357 -136.2246 254.1768 -136.4551 254.7529 -136.6318 c255.2891 -136.7979 255.8271 -136.9072 256.3662 -136.9922 C257.2236 -136.3203 258.5732 -135.1436 259.9043 -133.4854 C257.6465 -132.5674 254.9766 -131.6885 252.043 -131.0996 Cf0 g253.1553 -123.5889 m252.4814 -125.29 252.0342 -127.2178 251.9912 -129.3584 C255.3838 -129.9971 258.4287 -131.0137 260.9463 -132.0654 C261.4268 -131.3501 261.8809 -130.564 262.2871 -129.7188 C261.0908 -128.4629 260.2148 -126.9067 259.7744 -125.1748 C257.7871 -124.4702 255.5635 -123.8857 253.1553 -123.5889 Cf0 g267.1729 -132.5874 m265.834 -132.2441 264.6025 -131.6401 263.5322 -130.8286 C263.1914 -131.4937 262.8311 -132.1328 262.4482 -132.7217 C263.668 -133.2803 264.7275 -133.8252 265.5986 -134.3057 C266.1807 -133.7964 266.7012 -133.2144 267.1729 -132.5874 Cf0 g258.7627 -137.1094 m260.667 -137 262.4951 -136.4131 264.0889 -135.4268 C263.3193 -135.0234 262.4355 -134.5859 261.4443 -134.1436 C260.5225 -135.3477 259.5811 -136.3398 258.7627 -137.1094 Cf0 g269.5371 -132.9106 m268.291 -134.9121 266.5449 -136.5649 264.4033 -137.6943 c261.2168 -139.377 257.5654 -139.7178 254.1221 -138.6514 c250.6807 -137.5889 247.8594 -135.2471 246.1768 -132.0596 c244.4961 -128.8721 244.1553 -125.2207 245.2236 -121.7764 c246.2842 -118.3359 248.625 -115.5146 251.8125 -113.832 c255.001 -112.1514 258.6514 -111.8105 262.0947 -112.8789 c262.9131 -113.1313 263.6934 -113.4614 264.4355 -113.8525 C265.293 -113.335 266.2305 -112.9414 267.2266 -112.6914 C265.8936 -111.7642 264.416 -111.0313 262.8193 -110.5381 c258.749 -109.2793 254.4346 -109.6807 250.6689 -111.666 c246.9053 -113.6523 244.1387 -116.9883 242.8818 -121.0537 c241.623 -125.1221 242.0234 -129.4375 244.0107 -133.2031 c245.9971 -136.9688 249.3311 -139.7354 253.3975 -140.9922 c257.4658 -142.251 261.7822 -141.8496 265.5479 -139.8623 c268.6563 -138.2212 271.0674 -135.6523 272.5264 -132.5205 C271.6328 -132.7749 270.6934 -132.9199 269.7197 -132.9199 c269.6582 -132.9199 269.5986 -132.9116 269.5371 -132.9106 Cf0 g247.0029 -123.5068 m246.9951 -123.4297 L246.6094 -125.2412 246.6904 -127.0596 247.1533 -128.7549 C248.2393 -128.8203 249.3008 -128.9346 250.335 -129.085 C250.416 -127.0146 250.8408 -125.124 251.4775 -123.4277 C250.0361 -123.3359 248.54 -123.3506 247.0029 -123.5068 Cf0 g262.4951 -115.291 m262.1631 -115.1543 261.8203 -115.0264 261.4688 -114.916 c261.0869 -114.7988 260.7041 -114.7021 260.3223 -114.627 C259.9854 -114.8594 259.1357 -115.4756 258.0977 -116.458 C259.126 -116.6362 260.1025 -116.8877 261.0322 -117.187 C261.4561 -116.5151 261.9482 -115.8921 262.5117 -115.3369 C262.5059 -115.3213 262.501 -115.3066 262.4951 -115.291 Cf0 g250.9346 -134.582 m250.6025 -133.2666 250.4111 -132.0029 250.3447 -130.7959 C249.5107 -130.667 248.6553 -130.5674 247.7871 -130.4961 C248.5068 -132.0674 249.5732 -133.4717 250.9346 -134.582 Cf0 g256.0381 -116.207 m256.71 -115.4883 257.3447 -114.8887 257.8877 -114.417 C255.6982 -114.4609 253.5889 -115.1357 251.8057 -116.3223 C253.2813 -116.1348 254.6943 -116.1084 256.0381 -116.207 Cf0 g254.665 -117.8164 m253.0059 -117.8115 251.2354 -118.0234 249.3711 -118.5098 C248.5791 -119.4609 247.9424 -120.5615 247.4863 -121.7764 C249.1084 -121.6504 250.6768 -121.6611 252.1807 -121.7832 C252.9092 -120.2734 253.7793 -118.9473 254.665 -117.8164 Cf0 g256.6826 -117.9248 m255.7158 -119.0205 254.7197 -120.3721 253.8965 -121.9668 C255.8975 -122.2422 257.7646 -122.7021 259.4775 -123.2568 C259.4648 -123.0537 259.4463 -122.8521 259.4463 -122.6455 c259.4463 -121.2314 259.7334 -119.8838 260.2529 -118.6567 C259.1367 -118.3218 257.9502 -118.0591 256.6826 -117.9248 Cfu0 g281.2764 -111.2471 m280.3506 -110.2412 278.7861 -110.1768 277.7803 -111.1035 C273.7461 -115.2764 L272.5498 -114.6206 271.1777 -114.2461 269.7197 -114.2461 c265.0869 -114.2461 261.3174 -118.0146 261.3174 -122.6465 c261.3174 -127.2793 265.0869 -131.0479 269.7197 -131.0479 c274.3525 -131.0479 278.1201 -127.2793 278.1201 -122.6465 c278.1201 -121.269 277.7803 -119.9712 277.1904 -118.8228 C281.1338 -114.7432 L282.1396 -113.8174 282.2041 -112.2529 281.2764 -111.2471 cf0 D269.7197 -128.0527 m266.7373 -128.0527 264.3135 -125.6279 264.3135 -122.6465 c264.3135 -119.666 266.7373 -117.2412 269.7197 -117.2412 c272.7021 -117.2412 275.126 -119.666 275.126 -122.6465 c275.126 -125.6279 272.7021 -128.0527 269.7197 -128.0527 cBb1 (New Gradient Swatch 1) 262.0469 -141.7119 90 31.894 1 0 0 1 0 0 Bg-0.000001 31.894 44.5811 0.000002 239.623 -141.7119 Xm-0.000361 8266.4609 44.5811 0.000002 239.623 -8408.1719 Bc-0.000001 25.5152 44.5811 0.000002 239.623 -141.7119 Bm0 6.37881 44.5811 0.000002 239.623 -116.1968 Bm-0.000361 8266.4609 44.5811 0.000002 239.623 -109.8179 Bcf0 BBU*U*uu1 D0 g67.2012 -109.8179 m37.4639 -109.8179 L34.4087 -109.8179 31.9326 -112.2949 31.9326 -115.3491 C31.9326 -125.7354 L31.9326 -128.7896 34.4087 -131.2661 37.4639 -131.2666 C67.2012 -131.2661 L70.2568 -131.2661 72.7329 -128.7896 72.7324 -125.7354 C72.7324 -115.3491 L72.7324 -112.2949 70.2559 -109.8179 67.2012 -109.8179 Cf0 D0 g45.2305 -113.7124 m59.4351 -113.7129 L60.4204 -113.7124 61.2183 -114.5122 61.2183 -115.4956 c61.2183 -116.4814 60.4204 -117.2803 59.4351 -117.2803 C45.2305 -117.2803 L44.2456 -117.2803 43.4473 -116.4814 43.4473 -115.4966 c43.4473 -114.5122 44.2456 -113.7129 45.2305 -113.7124 Cf0 g38.4497 -113.8267 m39.4341 -113.8267 40.2339 -114.625 40.2339 -115.6099 c40.2339 -116.5952 39.4341 -117.3931 38.4497 -117.3931 c37.4644 -117.3931 36.666 -116.5952 36.666 -115.6099 c36.666 -114.626 37.4644 -113.8267 38.4497 -113.8267 cf0 g38.4497 -127.3726 m37.4644 -127.3726 36.666 -126.5728 36.666 -125.5889 c36.666 -124.604 37.4644 -123.8057 38.4497 -123.8047 c39.4341 -123.8047 40.2339 -124.604 40.2339 -125.5889 c40.2339 -126.5737 39.4341 -127.3726 38.4497 -127.3726 cf0 g39.3413 -120.5996 m39.3413 -119.6143 40.1401 -118.8159 41.1245 -118.8149 c42.1108 -118.8159 42.9092 -119.6143 42.9092 -120.5996 c42.9092 -121.584 42.1094 -122.3828 41.1245 -122.3828 c40.1401 -122.3828 39.3413 -121.583 39.3413 -120.5996 cf0 g43.9893 -127.3726 m43.0044 -127.3726 42.2056 -126.5737 42.2056 -125.5889 c42.2056 -124.604 43.0044 -123.8047 43.9902 -123.8057 c44.9741 -123.8047 45.7734 -124.604 45.7734 -125.5889 c45.7734 -126.5737 44.9741 -127.3726 43.9893 -127.3726 cf0 g44.8813 -120.5996 m44.8813 -119.6143 45.6797 -118.8149 46.6646 -118.8149 c47.6494 -118.8149 48.4487 -119.6143 48.4487 -120.5996 c48.4487 -121.584 47.6494 -122.3828 46.6655 -122.3828 c45.6797 -122.3828 44.8813 -121.583 44.8813 -120.5996 cf0 g49.5288 -127.3726 m48.5449 -127.3726 47.7456 -126.5728 47.7456 -125.5889 c47.7456 -124.604 48.5449 -123.8047 49.5293 -123.8057 c50.5142 -123.8057 51.313 -124.604 51.313 -125.5889 c51.313 -126.5728 50.5142 -127.3726 49.5288 -127.3726 cf0 g50.4209 -120.5996 m50.4209 -119.6143 51.2207 -118.8159 52.2041 -118.8159 c53.1904 -118.8149 53.9888 -119.6143 53.9888 -120.5996 c53.9888 -121.584 53.1904 -122.3828 52.2051 -122.3828 c51.2207 -122.3828 50.4209 -121.583 50.4209 -120.5996 cf0 g55.0679 -127.3726 m54.084 -127.3726 53.2847 -126.5737 53.2847 -125.5889 c53.2847 -124.604 54.084 -123.8047 55.0693 -123.8047 c56.0532 -123.8057 56.853 -124.604 56.853 -125.5889 c56.853 -126.5728 56.0532 -127.3726 55.0679 -127.3726 cf0 g55.9619 -120.5996 m55.9604 -119.6143 56.7598 -118.8159 57.7451 -118.8159 c58.729 -118.8159 59.5278 -119.6143 59.5278 -120.5996 c59.5278 -121.584 58.729 -122.3828 57.7451 -122.3828 c56.7598 -122.3828 55.9604 -121.584 55.9619 -120.5996 cf0 g60.6084 -127.3726 m59.624 -127.3726 58.8252 -126.5728 58.8242 -125.5889 c58.8242 -124.604 59.624 -123.8047 60.6084 -123.8047 c61.5942 -123.8057 62.3921 -124.604 62.3921 -125.5889 c62.3921 -126.5728 61.5942 -127.3726 60.6084 -127.3726 cf0 g61.5 -120.5996 m61.5 -119.6143 62.2993 -118.8149 63.2847 -118.8159 c64.269 -118.8149 65.0674 -119.6143 65.0674 -120.5996 c65.0674 -121.583 64.269 -122.3828 63.2837 -122.3828 c62.2993 -122.3828 61.5 -121.583 61.5 -120.5996 cf0 g66.2148 -127.3726 m65.2305 -127.3726 64.4312 -126.5728 64.4321 -125.5889 c64.4321 -124.604 65.2305 -123.8057 66.2148 -123.8047 c67.2012 -123.8047 67.9985 -124.604 67.9985 -125.5889 c67.9985 -126.5737 67.2012 -127.3726 66.2148 -127.3726 cf0 g66.2148 -117.3931 m65.2305 -117.3931 64.4312 -116.5952 64.4321 -115.6099 c64.4321 -114.626 65.2305 -113.8267 66.2148 -113.8267 c67.2012 -113.8267 67.9985 -114.625 67.9985 -115.6099 c67.9985 -116.5952 67.2012 -117.394 66.2148 -117.3931 cfU1 D64.0273 -133.376 m56.5137 -133.376 L56.4556 -133.4263 56.3975 -133.4785 56.3647 -133.5522 c56.2793 -133.7432 56.3179 -133.9663 56.4604 -134.1206 c57.1533 -134.8784 58.0757 -135.4302 59.1167 -135.6694 C59.1143 -135.8398 59.1104 -136.0142 59.0967 -136.1987 C58.8877 -138.1348 57.9365 -139.0068 55.9941 -139.0796 C55.3115 -139.0796 54.5049 -138.9336 53.6045 -138.5942 c50.3008 -137.3691 46.8892 -135.8652 43.9575 -135.8408 c42.1694 -135.7964 40.3364 -136.5845 39.4731 -138.4521 c39.2188 -138.9761 39.4385 -139.606 39.9624 -139.8599 c40.4868 -140.1138 41.1167 -139.8945 41.3706 -139.3701 c41.9316 -138.2974 42.6021 -137.9966 43.9575 -137.9521 c46.1416 -137.9277 49.5391 -139.3052 52.8608 -140.5693 c53.9624 -140.9839 55.0146 -141.189 55.9941 -141.189 c58.8389 -141.2622 61.0698 -139.21 61.2017 -136.3447 c61.2168 -136.1274 61.2217 -135.917 61.2246 -135.7075 C62.3462 -135.4961 63.3423 -134.9258 64.0806 -134.1206 c64.2227 -133.9663 64.2612 -133.7432 64.1758 -133.5522 c64.1431 -133.4785 64.085 -133.4263 64.0273 -133.376 CBb1 (New Gradient Swatch 1) 52.3325 -141.1909 90 31.373 1 0 0 1 0 0 Bg-0.000001 31.373 44.8003 0.000002 29.9326 -141.1909 Xm-0.000352 8056.2793 44.8003 0.000002 29.9331 -8197.4707 Bc-0.000001 25.0984 44.8003 0.000002 29.9326 -141.1909 Bm0 6.27461 44.8003 0.000002 29.9326 -116.0923 Bm-0.000352 8056.2793 44.8003 0.000002 29.9326 -109.8179 Bcf0 BB*U*uu0 g65.186 -292.2773 m37.1694 -292.2773 L35.1216 -292.2773 33.46 -293.9395 33.46 -295.9883 C33.46 -314.501 L33.46 -316.5488 35.1216 -318.2119 37.1694 -318.2119 C42.1953 -318.2119 L42.1953 -317.3926 L42.1953 -315.0205 44.1245 -313.0889 46.4966 -313.0889 C55.9551 -313.0889 L58.3271 -313.0889 60.2563 -315.0205 60.2563 -317.3926 C60.2563 -318.2119 L65.186 -318.2119 L67.2339 -318.2119 68.895 -316.5488 68.895 -314.501 C68.895 -295.9883 L68.895 -293.9395 67.2339 -292.2773 65.186 -292.2773 Cf0 D0 g53.4307 -298.6338 m59.3408 -298.6338 L59.894 -298.6338 60.3418 -299.083 60.3418 -299.6348 c60.3418 -300.1875 59.894 -300.6338 59.3408 -300.6338 C53.4307 -300.6338 L52.8774 -300.6338 52.4321 -300.1875 52.4321 -299.6348 c52.4321 -299.083 52.8774 -298.6338 53.4307 -298.6338 Cf0 g44.0415 -310.0527 m42.3589 -310.0527 40.9961 -308.6885 40.9961 -307.0068 c40.9961 -305.3271 42.3589 -303.9609 44.0415 -303.9609 c45.7231 -303.9609 47.0864 -305.3271 47.0864 -307.0068 c47.0864 -308.6885 45.7231 -310.0527 44.0415 -310.0527 cf0 g50.1577 -300.8545 m50.1577 -302.4189 48.8887 -303.6895 47.3228 -303.6895 C46.2222 -303.6895 L44.0967 -301.5645 L41.9712 -303.6895 L40.7598 -303.6895 L39.1938 -303.6895 37.9248 -302.4189 37.9248 -300.8545 C37.9248 -298.0205 L50.1577 -298.0205 L50.1577 -300.8545 Lf0 g64.0581 -307.9365 m53.4316 -307.9365 L52.8784 -307.9365 52.4316 -307.4893 52.4316 -306.9355 c52.4316 -306.3848 52.8784 -305.9385 53.4316 -305.9385 C64.0581 -305.9385 L64.6089 -305.9385 65.0557 -306.3848 65.0557 -306.9355 c65.0557 -307.4893 64.6089 -307.9365 64.0581 -307.9365 Cf0 g64.0576 -304.2861 m53.4307 -304.2861 L52.8774 -304.2861 52.4302 -303.8389 52.4302 -303.2852 c52.4302 -302.7344 52.8774 -302.2852 53.4307 -302.2852 C64.0576 -302.2852 L64.6089 -302.2852 65.0562 -302.7344 65.0562 -303.2852 c65.0562 -303.8389 64.6089 -304.2861 64.0576 -304.2861 CfUu1 D0 g55.9556 -315.0898 m46.4961 -315.0898 L45.2256 -315.0898 44.1948 -316.1221 44.1948 -317.3926 C44.1948 -318.7051 L44.1948 -319.9766 45.2256 -321.0078 46.4961 -321.0078 C47.333 -321.0078 L47.6484 -322.8809 49.2646 -324.3105 51.2261 -324.3125 c53.1895 -324.3105 54.8057 -322.8809 55.1201 -321.0078 C55.9556 -321.0078 L57.2261 -321.0078 58.2573 -319.9766 58.2573 -318.7051 C58.2573 -317.3926 L58.2573 -316.1221 57.2261 -315.0898 55.9556 -315.0898 Cf0 D51.2261 -322.3115 m50.1465 -322.3086 49.27 -321.4346 49.2656 -320.3506 c49.27 -319.2695 50.144 -318.3945 51.2261 -318.3926 c52.3081 -318.3945 53.1841 -319.2695 53.1865 -320.3506 c53.1841 -321.4346 52.3081 -322.3086 51.2261 -322.3115 cBb1 (New Gradient Swatch 1) 51.1772 -324.3125 90 32.0352 1 0 0 1 0 0 Bg-0.000001 32.0352 39.4351 0.000002 31.46 -324.3125 Xm-0.000352 8055.0522 39.4351 0.000002 31.4604 -8379.3652 Bc-0.000001 25.6281 39.4351 0.000002 31.46 -324.3125 Bm0 6.40703 39.4351 0.000002 31.46 -298.6846 Bm-0.000352 8055.0522 39.4351 0.000002 31.46 -292.2773 Bcf0 BBU*Uu*uu1 D0 g346.0176 -294.9717 m345.0313 -293.2656 343.1563 -292.2773 341.1045 -292.2773 C316.9189 -292.2773 L316.9063 -292.2861 L314.9697 -292.373 313.2236 -293.3447 312.2852 -294.9697 c311.8145 -295.7822 311.584 -296.6914 311.5859 -297.6064 c311.5859 -298.625 311.8691 -299.6514 312.4111 -300.5918 C324.3467 -321.2637 L325.3711 -323.0547 327.168 -324.1914 329.1475 -324.1914 c331.125 -324.1943 332.9268 -323.0586 333.9531 -321.2695 C345.8945 -300.585 L346.4326 -299.6484 346.7158 -298.625 346.7158 -297.6064 c346.7158 -296.6914 346.4854 -295.7822 346.0176 -294.9717 cf0 D0 g344.2119 -299.6172 m332.2686 -320.2979 L331.5332 -321.5635 330.3711 -322.248 329.1475 -322.25 c327.9268 -322.248 326.7637 -321.5605 326.0332 -320.2959 C326.0322 -320.2959 L314.0928 -299.6221 L313.71 -298.958 313.5273 -298.2617 313.5273 -297.6064 c313.5293 -297.0117 313.6738 -296.4502 313.9678 -295.9434 c314.5771 -294.8877 315.75 -294.2256 317.21 -294.2217 c317.2324 -294.2217 317.2549 -294.2207 317.2764 -294.2197 C341.0908 -294.2197 L342.5488 -294.2256 343.7217 -294.8896 344.3359 -295.9434 c344.627 -296.4463 344.7715 -297.0098 344.7715 -297.6064 c344.7715 -298.2617 344.5889 -298.958 344.2119 -299.6172 CfUu1 D0 g341.0908 -296.5664 m317.2129 -296.5664 L316.0186 -296.5664 315.5313 -297.4102 316.127 -298.4443 C321.0107 -306.9063 L321.6074 -307.9395 322.585 -309.6348 323.1816 -310.665 C328.0664 -319.125 L328.6621 -320.1611 329.6387 -320.1611 330.2363 -319.125 C335.1201 -310.665 L335.7178 -309.6348 336.6953 -307.9395 337.291 -306.9063 C342.1768 -298.4443 L342.7725 -297.4102 342.2832 -296.5664 341.0908 -296.5664 Cf0 D0 g327.7627 -299.416 m328.127 -299.0713 328.5566 -298.8994 329.0508 -298.8994 c329.5391 -298.8994 329.9648 -299.0713 330.3281 -299.416 c330.6934 -299.7627 330.875 -300.1758 330.875 -300.6572 c330.875 -301.1387 330.6934 -301.5557 330.3281 -301.9072 c329.9648 -302.2588 329.5391 -302.4346 329.0508 -302.4346 c328.5566 -302.4346 328.127 -302.2588 327.7627 -301.9072 c327.3984 -301.5557 327.2158 -301.1387 327.2158 -300.6572 c327.2158 -300.1758 327.3984 -299.7627 327.7627 -299.416 cf330.3428 -312.4092 m329.9746 -312.7539 329.541 -312.9268 329.041 -312.9268 c328.5342 -312.9268 328.0996 -312.7539 327.7383 -312.4092 c327.3779 -312.0635 327.1973 -311.6475 327.1973 -311.1592 c327.1973 -310.9189 327.248 -310.5586 327.3496 -310.0811 c327.4512 -309.6016 327.5625 -309.1133 327.6816 -308.6123 c327.8154 -308.0674 327.9668 -307.3936 328.1377 -306.5889 c328.3086 -305.7832 328.4902 -304.7754 328.6797 -303.5645 C329.4111 -303.5645 L329.6016 -304.7627 329.7822 -305.7686 329.9531 -306.584 c330.125 -307.3984 330.2764 -308.0762 330.4102 -308.6211 c330.5488 -309.1982 330.6641 -309.7002 330.7559 -310.1279 c330.8477 -310.5557 330.8945 -310.8984 330.8945 -311.1592 c330.8945 -311.6475 330.71 -312.0635 330.3428 -312.4092 cBb1 (New Gradient Swatch 1) 329.1504 -324.1914 90 31.9141 1 0 0 1 0 0 Bg-0.000001 31.9141 39.1318 0.000002 309.584 -324.1914 Xm-0.000364 8333.0283 39.1318 0.000002 309.584 -8657.2188 Bc-0.000001 25.5313 39.1318 0.000002 309.584 -324.1914 Bm0 6.38281 39.1318 0.000002 309.584 -298.6602 Bm-0.000364 8333.0283 39.1318 0.000002 309.584 -292.2773 Bcf0 BBU*UU*u1 D0 g207.8477 -295.2939 m203.8262 -291.2715 197.3047 -291.2725 193.2832 -295.2939 C184.9858 -303.5898 L191.8877 -305.8086 197.3359 -311.2578 199.5527 -318.1582 C207.8477 -309.8623 L211.873 -305.8359 211.873 -299.3164 207.8477 -295.2939 cf0 g183.1167 -305.5176 m179.9131 -309.2676 179.833 -314.7637 182.8823 -318.5967 C191.4893 -309.9883 L189.1299 -307.8877 186.2759 -306.3301 183.1167 -305.5176 Cf0 g184.5459 -320.2598 m188.3784 -323.3086 193.873 -323.2314 197.624 -320.0283 C196.8125 -316.8682 195.2539 -314.0127 193.1533 -311.6514 C184.5459 -320.2598 Lf181.0762 -320.6318 m180.8325 -320.874 179.9878 -321.6494 178.9912 -321.875 c178.7617 -321.9209 178.5347 -321.9521 178.2988 -321.9521 c177.4814 -321.9521 176.7202 -321.5703 175.8296 -320.7139 c174.0386 -318.9014 173.9888 -317.0791 174.1035 -315.8643 c174.21 -314.9014 174.5098 -313.9297 174.9976 -312.9727 C175.0186 -312.9268 175.0503 -312.8701 175.0957 -312.7842 c175.3921 -312.2402 176.293 -310.583 176.7974 -308.6221 c177.3604 -306.4824 177.5669 -303.4678 175.3564 -301.2344 c174.022 -299.9014 172.543 -299.207 171.1211 -299.207 c170.8457 -299.207 170.5747 -299.2344 170.314 -299.2871 c169.3296 -299.4775 168.4497 -299.9482 167.6992 -300.6797 c167.624 -300.75 167.5781 -300.8086 167.5591 -300.8311 c167.376 -301.0566 167.2944 -301.3262 167.3218 -301.6025 c167.3491 -301.8789 167.4849 -302.126 167.6992 -302.3037 c167.8848 -302.4561 168.1118 -302.5381 168.3516 -302.5381 c168.667 -302.5381 168.9609 -302.3975 169.1611 -302.1543 c169.1777 -302.1348 169.8237 -301.4805 170.6958 -301.3301 c170.8438 -301.3076 170.9985 -301.292 171.165 -301.292 c172.0303 -301.292 172.894 -301.7402 173.8843 -302.7041 c175.0918 -303.8916 175.394 -305.707 174.7871 -308.1025 c174.3286 -309.8545 173.5361 -311.3125 173.2378 -311.8604 C173.1499 -312.0215 L172.5288 -313.2725 172.1655 -314.4639 172.0386 -315.6377 c171.8701 -317.0557 171.9473 -319.792 174.3574 -322.1768 c175.521 -323.376 176.9478 -324.0332 178.3804 -324.0332 c178.7578 -324.0332 179.125 -323.9873 179.4751 -323.8975 c180.5762 -323.626 181.5815 -323.0361 182.5464 -322.0977 C182.2778 -321.8701 182.0171 -321.6328 181.7651 -321.3799 c181.5205 -321.1387 181.2935 -320.8877 181.0762 -320.6318 CBb1 (New Gradient Swatch 1) 189.0923 -324.0332 90 31.7559 1 0 0 1 0 0 Bg-0.000001 31.7559 48.5791 0.000002 165.2944 -324.0332 Xm-0.000358 8192.9668 48.5791 0.000002 165.2949 -8517 Bc-0.000001 25.4047 48.5791 0.000002 165.2944 -324.0332 Bm0 6.35117 48.5791 0.000002 165.2944 -298.6289 Bm-0.000358 8192.9668 48.5791 0.000002 165.2944 -292.2773 Bcf0 BB*U*uu0 g116.8667 -305.252 m116.5239 -305.1055 116.1514 -305.0273 115.771 -305.0273 c115.4258 -305.0273 115.0767 -305.0918 114.7461 -305.2207 c114.3447 -305.377 113.6084 -305.7871 113.2114 -306.709 c113.041 -307.0977 112.9785 -307.4824 112.9805 -307.8125 c112.9805 -308.2578 113.0864 -308.6113 113.1758 -308.8359 c113.3193 -309.2129 113.688 -309.877 114.4824 -310.2871 C114.4966 -310.3027 L114.6606 -310.375 L115.0142 -310.5293 115.3926 -310.6055 115.771 -310.6055 c116.1201 -310.6055 116.4697 -310.5391 116.7959 -310.4102 c117.4863 -310.1367 118.0396 -309.5996 118.3325 -308.9219 c118.4824 -308.5723 118.5596 -308.1953 118.5596 -307.8164 c118.5615 -307.4707 118.4946 -307.1211 118.3638 -306.7871 c118.0938 -306.0996 117.5571 -305.5488 116.8667 -305.252 cf0 D0 g116.5986 -308.1699 m116.4966 -308.4023 116.3325 -308.5625 116.1016 -308.6543 c115.9893 -308.6992 115.8789 -308.7188 115.771 -308.7188 c115.6504 -308.7188 115.5317 -308.6953 115.4175 -308.6445 C115.4111 -308.6426 L115.1099 -308.5137 114.9873 -308.2793 114.9312 -308.1387 c114.9038 -308.0742 114.8667 -307.9512 114.8667 -307.8125 c114.8687 -307.709 114.8833 -307.5977 114.9453 -307.4551 c115.0723 -307.1543 115.3071 -307.0313 115.436 -306.9785 c115.5444 -306.9355 115.6543 -306.9141 115.771 -306.9141 c115.8872 -306.9141 116.0103 -306.9395 116.1284 -306.9883 c116.3555 -307.0879 116.5176 -307.2559 116.6089 -307.4824 c116.6528 -307.5938 116.6733 -307.7051 116.6733 -307.8164 c116.6733 -307.9355 116.6484 -308.0566 116.5986 -308.1699 cfU1 D0 g141.6782 -303.4473 m141.7427 -298.252 136.7798 -293.1094 131.9995 -293.4375 C136.0376 -299.1797 135.8237 -303.0195 v135.6147 -306.9707 132.2319 -310.0859 Y132.0112 -306.875 128.0239 -303.7148 127.0776 -300.4453 c125.5796 -295.2461 129.0308 -292.2773 Y123.7114 -292.6426 120.4849 -298.1133 122.6147 -305.5098 c123.7085 -309.207 129.9888 -315.7832 128.6743 -324.6191 C133.7231 -318.5898 141.5601 -308.7051 141.6782 -303.4473 cf121.2036 -308.3047 m121.2036 -308.3066 121.2026 -308.3086 121.2026 -308.3105 C121.1787 -308.5703 121.1333 -308.8301 121.0708 -309.0879 c121.0601 -309.1328 121.0474 -309.1777 121.0356 -309.2227 c120.9668 -309.4766 120.8857 -309.7305 120.7778 -309.9805 c119.5825 -312.7461 116.3687 -314.0176 113.603 -312.8223 c110.8384 -311.625 109.5659 -308.4121 110.7642 -305.6484 c111.9604 -302.8828 115.1733 -301.6113 117.937 -302.8066 c118.2896 -302.959 118.6172 -303.1445 118.9194 -303.3574 C118.9214 -303.3594 118.9233 -303.3613 118.9258 -303.3633 C119.2256 -303.5762 119.499 -303.8145 119.7451 -304.0762 C119.7456 -304.0762 119.7461 -304.0781 119.7466 -304.0781 C119.0513 -300.3164 119.6128 -296.9199 121.3979 -294.3711 c121.4946 -294.2324 121.6021 -294.1094 121.7056 -293.9785 C114.0845 -290.7109 105.2505 -294.2188 101.9536 -301.834 c98.6499 -309.4648 102.1606 -318.3301 109.7905 -321.6309 c115.436 -324.0762 121.7515 -322.7832 125.9956 -318.8594 C125.2847 -315.543 123.6548 -312.6641 122.2456 -310.1875 c121.8657 -309.5215 121.5181 -308.9023 121.2036 -308.3047 CBb1 (New Gradient Swatch 1) 121.1948 -324.6191 90 32.3418 1 0 0 1 0 0 Bg-0.000001 32.3418 47.0928 0.000002 96.6499 -324.6191 Xm-0.000355 8125.0698 47.0928 0.000002 96.6504 -8449.6895 Bc-0.000001 25.8734 47.0928 0.000002 96.6499 -324.6191 Bm0 6.46836 47.0928 0.000002 96.6499 -298.7461 Bm-0.000355 8125.0698 47.0928 0.000002 96.6499 -292.2773 Bcf0 BB*U*uu0 g274.9209 -306.8496 m274.8975 -306.1484 274.3857 -305.6338 273.6914 -305.5254 C271.9053 -305.2422 270.8096 -305.0684 V270.6172 -304.332 270.3525 -303.624 270.0283 -302.9424 C270.6406 -302.0566 271.8213 -300.3516 Y271.9951 -300.0996 272.0791 -299.8076 272.0791 -299.5166 c272.0791 -299.208 271.9814 -298.8975 271.7861 -298.6377 c271.0674 -297.6807 270.248 -296.8076 269.3545 -296.0459 c268.8379 -295.6074 268.0908 -295.5801 267.5439 -295.9766 C266.0918 -297.0332 265.1963 -297.6816 V264.4756 -297.2607 263.7061 -296.917 262.9004 -296.6514 C262.7031 -295.5889 262.3291 -293.5762 Y262.2119 -292.9502 261.7041 -292.4736 261.0762 -292.3906 c260.4678 -292.3145 259.8242 -292.2773 259.0439 -292.2773 C257.5801 -292.3232 L256.8779 -292.3477 256.377 -292.8604 256.2676 -293.5527 C255.9824 -295.3613 255.8096 -296.4512 V254.958 -296.6836 254.1426 -297.0107 253.3613 -297.4209 C252.4668 -296.8076 250.8428 -295.6885 Y250.3105 -295.3232 249.6025 -295.3496 249.0977 -295.751 c248.165 -296.4971 247.334 -297.3223 246.6201 -298.21 c246.4033 -298.4756 246.2969 -298.8018 246.2969 -299.1279 c246.2969 -299.4297 246.3896 -299.7324 246.5762 -299.9902 C247.6787 -301.5 248.3232 -302.3887 V247.917 -303.1387 247.5947 -303.9297 247.3535 -304.7539 C246.2783 -304.9482 244.3867 -305.2842 Y243.7461 -305.4014 243.2549 -305.9297 243.1875 -306.5811 c243.1416 -307.0479 243.1201 -307.5547 243.1201 -308.1807 c243.1201 -308.8691 243.1572 -309.5273 243.2334 -310.1406 c243.3115 -310.791 243.8145 -311.3076 244.46 -311.4102 C246.3389 -311.7061 247.418 -311.8779 V247.6494 -312.6104 247.9521 -313.3242 248.3193 -313.998 C247.7021 -314.8965 246.6133 -316.4863 Y246.4414 -316.7373 246.3555 -317.0273 246.3555 -317.3135 c246.3555 -317.6445 246.4678 -317.9707 246.6865 -318.2412 c247.4746 -319.2051 248.3467 -320.0625 249.2773 -320.7861 c249.792 -321.1836 250.5059 -321.1982 251.0322 -320.8174 C252.6035 -319.6875 253.4893 -319.0508 V254.0928 -319.3584 254.7217 -319.6133 255.373 -319.8174 C255.5693 -320.8877 255.9258 -322.8223 Y256.043 -323.4502 256.585 -323.9346 257.2178 -324.0146 C257.4922 -324.0469 L258.1865 -324.1221 258.1943 -324.123 V258.3643 -324.124 L258.2607 -324.123 258.2617 -324.123 V258.5059 -324.124 258.5313 -324.124 V258.9014 -324.127 L259.0439 -324.124 L259.6592 -324.124 260.2715 -324.0869 260.915 -324.0137 c261.5684 -323.9375 262.0879 -323.4346 262.1914 -322.7871 C262.4961 -320.8535 262.665 -319.79 V263.2334 -319.6094 263.7939 -319.3828 264.3457 -319.1074 C265.2227 -319.7119 266.9805 -320.9189 Y267.502 -321.2773 268.1943 -321.2588 268.6992 -320.876 c269.6641 -320.1396 270.5654 -319.2607 271.3818 -318.2607 c271.6045 -317.9932 271.7109 -317.6631 271.7109 -317.335 c271.7109 -317.0322 271.6211 -316.7295 271.4346 -316.4717 C270.3418 -314.9805 269.6934 -314.0889 V270.0195 -313.5049 270.293 -312.9053 270.5156 -312.2891 C271.5703 -312.0996 273.584 -311.7305 Y274.2002 -311.6182 274.6748 -311.123 274.7686 -310.5039 c274.8682 -309.8291 274.9688 -309.0254 274.9688 -308.1807 C274.9209 -306.8496 Lf0 D0 g259.0449 -315.0693 m255.2852 -315.0693 252.2393 -312.0234 252.2373 -308.2627 c252.2393 -304.5049 255.2852 -301.458 259.0449 -301.458 c262.8037 -301.458 265.8477 -304.5049 265.8496 -308.2627 c265.8477 -312.0234 262.8037 -315.0693 259.0449 -315.0693 cfUu1 D0 g259.0439 -303.416 m256.3643 -303.416 254.1953 -305.5859 254.1953 -308.2627 c254.1953 -310.9414 256.3643 -313.1133 259.0439 -313.1133 c261.7227 -313.1133 263.8916 -310.9414 263.8916 -308.2627 c263.8916 -305.584 261.7207 -303.416 259.0439 -303.416 cf0 D259.0439 -311.1143 m257.4717 -311.1104 256.1982 -309.8369 256.1943 -308.2627 c256.1982 -306.6904 257.4688 -305.4189 259.0439 -305.417 c260.6182 -305.4189 261.8906 -306.6904 261.8926 -308.2627 c261.8906 -309.8369 260.6162 -311.1104 259.0439 -311.1143 cBb1 (New Gradient Swatch 1) 259.0449 -324.127 90 31.8496 1 0 0 1 0 0 Bg-0.000001 31.8496 35.8486 0.000002 241.1201 -324.127 Xm-0.000361 8262.9199 35.8486 0.000002 241.1201 -8587.0469 Bc-0.000001 25.4797 35.8486 0.000002 241.1201 -324.127 Bm0 6.36992 35.8486 0.000002 241.1201 -298.6475 Bm-0.000361 8262.9199 35.8486 0.000002 241.1201 -292.2773 Bcf0 BBU*U*uu1 D0 g329.1523 -200.623 m320.4375 -200.625 313.3574 -207.709 313.3555 -216.4219 c313.3574 -225.1318 320.4395 -232.2148 329.1523 -232.2148 c337.8652 -232.2148 344.9453 -225.1318 344.9473 -216.4219 c344.9453 -207.709 337.8652 -200.625 329.1523 -200.623 cf0 D0 g329.1523 -230.3652 m321.4639 -230.3496 315.2197 -224.1055 315.207 -216.4219 c315.2197 -208.7344 321.4639 -202.4863 329.1523 -202.4727 c336.8379 -202.4863 343.083 -208.7344 343.0957 -216.4219 c343.083 -224.1074 336.8379 -230.3496 329.1523 -230.3652 cfUu1 D0 g329.1523 -204.5547 m322.6094 -204.5547 317.2881 -209.8789 317.2881 -216.4199 c317.2881 -222.9629 322.6094 -228.2832 329.1523 -228.2832 c335.6924 -228.2832 341.0146 -222.9629 341.0146 -216.4199 c341.0146 -209.8789 335.6924 -204.5547 329.1523 -204.5547 cf0 D0 g320.6113 -217.627 m320.002 -217.627 319.5068 -217.1328 319.5068 -216.5215 c319.5068 -215.9121 320.002 -215.416 320.6113 -215.416 c321.2227 -215.416 321.7158 -215.9121 321.7158 -216.5215 c321.7158 -217.1328 321.2227 -217.627 320.6113 -217.627 cf0 g329.1514 -206.7695 m329.7617 -206.7695 330.2549 -207.2656 330.2549 -207.877 c330.2549 -208.4863 329.7617 -208.9805 329.1514 -208.9805 c328.541 -208.9805 328.0459 -208.4863 328.0459 -207.877 c328.0459 -207.2656 328.541 -206.7695 329.1514 -206.7695 cf336.8721 -217.4492 m330.1025 -217.4492 L330.1025 -225.1816 L330.1025 -225.707 329.6758 -226.1328 329.1504 -226.1328 c328.626 -226.1328 328.1992 -225.707 328.1992 -225.1816 C328.1992 -216.498 L328.1992 -215.9727 328.626 -215.5449 329.1484 -215.5449 C336.8721 -215.5449 L337.3955 -215.5449 337.8223 -215.9727 337.8223 -216.498 c337.8223 -217.0225 337.3955 -217.4492 336.8721 -217.4492 CBb1 (New Gradient Swatch 1) 329.1514 -232.2148 90 31.5918 1 0 0 1 0 0 Bg-0.000001 31.5918 35.5918 0.000002 311.3555 -232.2148 Xm-0.000364 8333.0264 35.5918 0.000002 311.3555 -8565.2422 Bc-0.000001 25.2734 35.5918 0.000002 311.3555 -232.2148 Bm0 6.31836 35.5918 0.000002 311.3555 -206.9414 Bm-0.000364 8333.0264 35.5918 0.000002 311.3555 -200.623 Bcf0 BBU*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 17 255 153 204 0 50 Lb(kiwi computer) Ln0 Auu*u0 O0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa0 J 0 j 1 w 4 M []0 d0 XR313.3555 -181.8242 m313.3574 -173.1138 320.4395 -166.0313 329.1523 -166.0313 C329.1523 -166.0313 L337.8652 -166.0313 344.9453 -173.1138 344.9473 -181.8242 C344.9473 -181.8242 L344.9453 -190.5361 337.8652 -197.6211 329.1523 -197.623 C329.1523 -197.623 L320.4375 -197.6211 313.3574 -190.5361 313.3555 -181.8242 C313.3555 -181.8242 Lf1 D329.1523 -195.7734 m336.8379 -195.7588 343.083 -189.5117 343.0957 -181.8242 C343.0957 -181.8242 L343.083 -174.1382 336.8379 -167.8955 329.1523 -167.8809 C329.1523 -167.8809 L321.4639 -167.8955 315.2197 -174.1401 315.207 -181.8242 C315.207 -181.8242 L315.2197 -189.5117 321.4639 -195.7588 329.1523 -195.7734 C329.1523 -195.7734 Lf*U*u0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa329.1523 -169.9629 m322.6094 -169.9629 317.2881 -175.2832 317.2881 -181.8262 c317.2881 -188.3672 322.6094 -193.6914 329.1523 -193.6914 c335.6924 -193.6914 341.0146 -188.3672 341.0146 -181.8262 c341.0146 -175.2832 335.6924 -169.9629 329.1523 -169.9629 cf0 D320.6113 -182.8301 m320.002 -182.8301 319.5068 -182.334 319.5068 -181.7236 c319.5068 -181.1133 320.002 -180.6187 320.6113 -180.6187 c321.2227 -180.6187 321.7158 -181.1133 321.7158 -181.7236 c321.7158 -182.334 321.2227 -182.8301 320.6113 -182.8301 cf329.1514 -191.4756 m328.541 -191.4756 328.0459 -190.9795 328.0459 -190.3691 c328.0459 -189.7598 328.541 -189.2646 329.1514 -189.2646 c329.7617 -189.2646 330.2549 -189.7598 330.2549 -190.3691 c330.2549 -190.9795 329.7617 -191.4756 329.1514 -191.4756 cf336.8721 -182.7002 m329.1484 -182.7002 L328.626 -182.7002 328.1992 -182.2734 328.1992 -181.748 C328.1992 -173.064 L328.1992 -172.5391 328.626 -172.1123 329.1504 -172.1123 c329.6758 -172.1123 330.1025 -172.5391 330.1025 -173.064 C330.1025 -180.7959 L336.8721 -180.7959 L337.3955 -180.7959 337.8223 -181.2231 337.8223 -181.748 c337.8223 -182.2734 337.3955 -182.7002 336.8721 -182.7002 Cf*UUUu0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa134.5884 -194.3701 m131.9004 -191.6797 L131.4258 -191.2041 130.7603 -191.04 130.1494 -191.1797 C122.3643 -183.3926 L121.9727 -183.001 121.3408 -183.001 120.9497 -183.3906 c120.5605 -183.7813 120.5581 -184.416 120.9497 -184.8047 C128.7363 -192.5928 L128.5986 -193.2021 128.7622 -193.8652 129.2349 -194.3408 C131.9229 -197.0313 L132.29 -197.3994 132.7725 -197.584 133.2549 -197.584 c133.7358 -197.584 134.2168 -197.4004 134.584 -197.0332 c135.3218 -196.2998 135.3218 -195.1074 134.5884 -194.3701 Cf0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa110.7998 -170.2773 m110.2432 -169.7559 109.3989 -169.6133 108.689 -169.9951 c107.8022 -170.4707 107.4702 -171.5791 107.9458 -172.4678 c108.0166 -172.5986 108.1035 -172.7129 108.1987 -172.8184 C102.1392 -179.9258 101.9604 -190.3164 107.6558 -197.623 C107.9541 -196.2236 108.6411 -194.8896 109.729 -193.8018 c110.728 -192.8018 111.9351 -192.1406 113.2109 -191.8115 C111.5996 -189.668 108.2891 -184.4414 108.2734 -177.5166 c108.2715 -176.9961 108.6934 -176.5732 109.2144 -176.5732 c109.7329 -176.5732 110.1553 -176.9941 110.1553 -177.5146 c110.1489 -183.7217 113.1567 -188.5879 114.6577 -190.6055 c115.0825 -191.1807 115.355 -191.4912 115.4297 -191.5723 C115.4492 -191.5732 115.4688 -191.5713 115.4883 -191.5723 C116.1318 -188.3008 117.7192 -185.1777 120.2544 -182.6426 c122.9194 -179.9766 126.2393 -178.3857 129.6958 -177.8135 C129.5996 -177.7725 129.5063 -177.7197 129.4248 -177.6455 C129.4209 -177.6475 129.0923 -177.3389 128.4204 -176.8418 c127.7505 -176.3428 126.7598 -175.6748 125.5107 -175.0049 c123.0078 -173.667 119.4712 -172.3369 115.3306 -172.3398 c114.8086 -172.3398 114.3877 -171.918 114.3877 -171.3984 c114.3877 -170.8789 114.8086 -170.4551 115.3306 -170.4551 c122.7871 -170.4717 128.2783 -174.3105 130.0684 -175.7344 C130.2749 -174.1113 130.9878 -172.541 132.2339 -171.2949 c132.9609 -170.5684 133.7988 -170.0215 134.6914 -169.6475 C127.5483 -164.4619 117.7178 -164.666 110.7998 -170.2773 Cf0 0.34902 1 0 1 0.690196 0 Xa134.0698 -186.0664 m134.0698 -186.0654 L134.0698 -186.0664 LfU0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa1 XR275.5039 -184.7188 m276.3164 -183.9053 276.3164 -182.5742 275.5039 -181.7617 C270.9736 -177.2334 L270.9443 -177.1602 270.8984 -177.0684 270.8359 -176.9561 c269.8008 -175.0918 271.3184 -174.9541 Y274.4238 -176.4033 275.2607 -175.3096 Y277.3984 -173.1699 273.5947 -169.5029 Y269.9268 -165.6973 267.7861 -167.8369 V266.6943 -168.6738 268.1436 -171.7803 V268.0049 -173.2979 266.1416 -172.2627 v266.0273 -172.2002 265.9375 -172.1543 265.8643 -172.124 C260.7236 -166.9824 L259.9102 -166.1689 258.5801 -166.1699 257.7656 -166.9824 C252.8379 -171.9121 L253.0625 -172.3213 253.5771 -172.3721 Y256.6826 -170.9238 257.5205 -172.0166 Y259.6602 -174.1563 256.5107 -177.165 Y253.501 -180.3135 251.3623 -178.1748 V250.2695 -177.3359 251.7178 -174.2314 V251.667 -173.7168 251.2588 -173.4922 V245.4707 -179.2773 L244.6602 -180.0908 244.6602 -181.4199 245.4707 -182.2334 C252.4023 -189.1621 L252.6689 -188.9121 252.7041 -188.5313 Y251.2539 -185.4258 252.3506 -184.5879 Y254.4893 -182.4473 257.4961 -185.5977 Y260.6475 -188.6064 258.5068 -190.7461 V257.6689 -191.8398 254.5635 -190.3906 V254.1826 -190.4248 253.9326 -190.6943 V260.251 -197.0127 L261.0645 -197.8262 262.3936 -197.8262 263.208 -197.0127 C275.5039 -184.7188 Lfu*u0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa0 XR36.1157 -181.5859 m36.1177 -172.7412 43.3042 -165.5527 52.1509 -165.5508 C52.1509 -165.5508 L60.9937 -165.5527 68.1802 -172.7412 68.1821 -181.5859 C68.1821 -181.5859 L68.1802 -190.4307 60.9937 -197.6211 52.1509 -197.623 C52.1509 -197.623 L43.3042 -197.6211 36.1177 -190.4307 36.1157 -181.5859 C36.1157 -181.5859 Lf1 D52.1509 -195.6211 m59.8853 -195.6064 66.1699 -189.3223 66.1821 -181.5859 C66.1821 -181.5859 L66.1699 -173.8496 59.8853 -167.5654 52.1509 -167.5527 C52.1509 -167.5527 L44.4126 -167.5654 38.1284 -173.8496 38.1157 -181.5859 C38.1157 -181.5859 L38.1284 -189.3223 44.4126 -195.6064 52.1509 -195.6211 C52.1509 -195.6211 Lf*U*u0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa52.1499 -169.5928 m45.5361 -169.5928 40.1558 -174.9717 40.1558 -181.5859 c40.1558 -188.1992 45.5361 -193.582 52.1499 -193.582 c58.7627 -193.582 64.1431 -188.1992 64.1431 -181.5859 c64.1431 -174.9717 58.7627 -169.5928 52.1499 -169.5928 cf0 D55.0361 -189.2959 m54.3218 -189.5791 53.7515 -189.793 53.3247 -189.9424 c52.8984 -190.0898 52.4043 -190.1641 51.8403 -190.1641 c50.9736 -190.1641 50.3003 -189.9531 49.8193 -189.5303 c49.3389 -189.1064 49.0986 -188.5693 49.0986 -187.9199 c49.0986 -187.667 49.1157 -187.4092 49.1528 -187.1455 c49.1885 -186.8809 49.2461 -186.584 49.3267 -186.25 C50.2202 -183.0869 L50.3013 -182.7832 50.3672 -182.498 50.4224 -182.2246 c50.4766 -181.9541 50.5029 -181.707 50.5029 -181.4824 c50.5029 -181.0791 50.4204 -180.7969 50.2534 -180.6377 c50.0869 -180.4785 49.7681 -180.3994 49.2974 -180.3994 c49.0649 -180.3994 48.8276 -180.4355 48.5854 -180.5068 c48.3428 -180.5801 48.1348 -180.6484 47.9609 -180.7148 C48.1997 -179.7393 L48.7852 -179.5 49.3447 -179.2959 49.8804 -179.127 c50.4165 -178.9561 50.9224 -178.8711 51.3999 -178.8711 c52.2603 -178.8711 52.9243 -179.0791 53.3906 -179.4951 c53.8574 -179.9102 54.0903 -180.4492 54.0903 -181.1143 c54.0903 -181.252 54.0742 -181.4941 54.0415 -181.8408 c54.0088 -182.1875 53.9492 -182.5059 53.8623 -182.7949 C52.9717 -185.9482 L52.8989 -186.2002 52.8335 -186.4883 52.7759 -186.8145 c52.7178 -187.1396 52.689 -187.3857 52.689 -187.5518 c52.689 -187.9717 52.7822 -188.2559 52.9702 -188.4072 c53.1577 -188.5586 53.4829 -188.6348 53.9443 -188.6348 c54.1611 -188.6348 54.4058 -188.5986 54.6797 -188.5215 c54.9541 -188.4453 55.1523 -188.3789 55.2754 -188.3193 C55.0361 -189.2959 Lf54.8799 -176.4922 m54.4644 -176.8789 53.9639 -177.0723 53.3789 -177.0723 c52.7939 -177.0723 52.2905 -176.8789 51.873 -176.4922 c51.4536 -176.1064 51.2441 -175.6387 51.2441 -175.0889 c51.2441 -174.54 51.4536 -174.0713 51.873 -173.6807 c52.2905 -173.291 52.7939 -173.0957 53.3789 -173.0957 c53.9639 -173.0957 54.4644 -173.291 54.8799 -173.6807 c55.2954 -174.0713 55.5034 -174.54 55.5034 -175.0889 c55.5034 -175.6387 55.2954 -176.1064 54.8799 -176.4922 cf*UUuu*u200.5918 -172.8184 m200.5918 -165.5137 L214.9004 -176.9541 L200.5918 -188.7744 L200.5918 -181.4277 L185.9863 -178.5898 L185.9863 -175.7402 L200.5918 -172.8184 lf*UUu*u0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa182.7676 -190.3184 m182.7676 -197.623 L168.459 -186.1826 L182.7676 -174.3623 L182.7676 -181.709 L197.373 -184.5469 L197.373 -187.3965 L182.7676 -190.3184 lf*UUUu*u118.1357 -93.5396 m117.73 -93.3828 116.9819 -92.9629 116.5762 -92.0313 C116.5762 -92.0313 L116.4028 -91.6338 116.3394 -91.2422 116.3418 -90.9082 C116.3418 -90.9082 L116.3418 -90.4536 116.4478 -90.0947 116.5415 -89.8623 C116.5415 -89.8623 L116.6982 -89.4546 117.1162 -88.7085 118.0498 -88.3027 C118.0498 -88.3027 L118.2397 -88.2192 L118.2671 -88.2192 L118.5625 -88.1172 118.8706 -88.0664 119.1772 -88.0684 C119.1772 -88.0684 L119.5317 -88.0664 119.8867 -88.1357 120.2188 -88.2681 C120.2188 -88.2681 L120.9204 -88.541 121.4829 -89.0894 121.7803 -89.7764 C121.7803 -89.7764 L121.9336 -90.1333 122.0127 -90.5166 122.0127 -90.9019 C122.0127 -90.9019 L122.0127 -91.2544 121.9478 -91.6113 121.813 -91.9458 C121.813 -91.9458 L121.54 -92.645 120.9956 -93.2095 120.2983 -93.5073 C120.2983 -93.5073 L119.9458 -93.6582 119.5625 -93.7397 119.1772 -93.7397 C119.1772 -93.7397 L118.8247 -93.7397 118.4697 -93.6724 118.1357 -93.5396 C118.1357 -93.5396 Lf1 D118.3984 -90.604 m118.374 -90.6636 118.3394 -90.7798 118.3413 -90.9082 C118.3413 -90.9082 L118.3413 -91.0059 118.3555 -91.106 118.4106 -91.2344 C118.4106 -91.2344 L118.5313 -91.5156 118.7471 -91.6274 118.8716 -91.6807 C118.8716 -91.6807 L118.9736 -91.7212 119.0752 -91.7397 119.1772 -91.7397 C119.1772 -91.7397 L119.2852 -91.7397 119.3975 -91.7173 119.5117 -91.6685 C119.5117 -91.6685 L119.7173 -91.5786 119.8682 -91.4238 119.9541 -91.2119 C119.9541 -91.2119 L119.9946 -91.1079 120.0132 -91.0039 120.0132 -90.9019 C120.0132 -90.9019 L120.0132 -90.792 119.9907 -90.6797 119.9458 -90.5737 C119.9458 -90.5737 L119.8501 -90.3594 119.6973 -90.2129 119.4829 -90.1274 C119.4829 -90.1274 L119.3813 -90.0864 119.2793 -90.0679 119.1772 -90.0679 C119.1772 -90.0679 L119.0649 -90.0679 118.957 -90.0903 118.853 -90.1353 C118.853 -90.1353 L118.8125 -90.1533 L118.5562 -90.2759 118.4512 -90.4795 118.3984 -90.604 C118.3984 -90.604 Lf*U0 D123.312 -94.4116 m122.7896 -95.0288 122.1255 -95.5415 121.3335 -95.8848 c118.5835 -97.0732 115.3882 -95.8086 114.1987 -93.0596 c113.0093 -90.3096 114.2729 -87.1147 117.0239 -85.9253 c119.2754 -84.9507 121.8232 -85.623 123.3267 -87.4082 C124.4844 -83.9063 127.314 -81.166 130.8682 -80.1313 C126.4121 -75.2974 119.2349 -73.5449 112.8589 -76.3037 c104.7954 -79.7939 101.0884 -89.1602 104.5776 -97.2236 c108.0679 -105.2861 117.4351 -108.9941 125.4976 -105.5059 c127.5903 -104.5996 129.3818 -103.2915 130.8379 -101.7197 C127.2842 -100.6743 124.458 -97.9219 123.312 -94.4116 Cf*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa134.0029 -81.3423 m128.7129 -81.3442 124.4185 -85.6411 124.4165 -90.9307 c124.4185 -96.2188 128.7129 -100.5151 134.0029 -100.5171 c139.2905 -100.5151 143.5869 -96.2188 143.5894 -90.9307 c143.5869 -85.6411 139.2905 -81.3442 134.0029 -81.3423 cf0 D140.5586 -94.7188 m139.8701 -95.9116 138.9023 -96.8447 137.7861 -97.4858 C134.0044 -90.9355 L130.2197 -97.4907 L127.7979 -96.0928 126.4434 -93.5483 126.4385 -90.9346 C134.0029 -90.9341 L130.2207 -84.3848 L132.4873 -83.0796 135.3682 -82.9824 137.79 -84.3804 C134.0054 -90.9346 L141.5674 -90.9355 L141.5703 -92.2227 141.2461 -93.5273 140.5586 -94.7188 cf*UUu0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa343.2549 -98.042 m334.4775 -89.2642 L334.1641 -90.2378 333.7285 -91.1802 333.1533 -92.0591 C341.9229 -100.8291 L342.2158 -101.1221 342.2158 -101.5977 341.9229 -101.8906 c341.7764 -102.0371 341.585 -102.1104 341.3926 -102.1104 c341.2002 -102.1104 341.0088 -102.0371 340.8613 -101.8906 C332.2354 -93.2632 L332.0439 -93.4854 331.8535 -93.708 331.6436 -93.9185 c330.6982 -94.8638 329.6143 -95.6138 328.4453 -96.1763 C328.9961 -96.4868 329.3721 -97.0703 329.3721 -97.748 C329.3721 -99.1392 L331.7236 -101.4912 L331.7725 -101.4873 331.8213 -101.4766 331.8701 -101.4771 C334.5244 -101.4771 L335.5244 -101.4761 336.335 -102.2866 336.335 -103.2866 C336.3311 -105.9746 336.3291 -105.9932 V338.0537 -107.2251 340.46 -107.0806 342.0068 -105.5322 C343.2549 -104.2842 L344.9795 -102.561 344.9775 -99.7666 343.2549 -98.042 Cf*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa330.2285 -78.8584 m326.459 -75.0889 320.3506 -75.0889 316.5811 -78.8589 c312.8125 -82.6279 312.8125 -88.7363 316.5811 -92.5063 c320.3496 -96.2749 326.459 -96.2759 330.2285 -92.5063 c333.9971 -88.7363 333.9971 -82.6279 330.2285 -78.8584 cf0 D322.7363 -85.0142 m321.5908 -86.1582 319.7354 -86.1582 318.5908 -85.0142 c317.4463 -83.8687 317.4463 -82.0137 318.5908 -80.8687 c319.7354 -79.7241 321.5908 -79.7241 322.7363 -80.8691 c323.8809 -82.0142 323.8809 -83.8687 322.7363 -85.0142 cf*UUu*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa204.3584 -74.6709 m180.1792 -74.6709 L175.9292 -74.6729 172.4766 -78.1255 172.4766 -82.3779 C172.4766 -93.564 L172.4766 -97.814 175.9292 -101.2661 180.1792 -101.2686 C184.3491 -101.2686 L182.269 -102.2529 180.8262 -104.3647 180.8262 -106.8179 C204.7109 -106.8179 L204.7109 -104.3647 203.2695 -102.2529 201.1895 -101.2686 C204.3584 -101.2686 L208.6094 -101.2661 212.0615 -97.814 212.0635 -93.564 C212.0635 -82.3779 L212.0615 -78.1255 208.6094 -74.6729 204.3584 -74.6709 Cf0 D210.0625 -93.564 m210.0576 -96.7051 207.502 -99.2627 204.3584 -99.269 C180.1792 -99.269 L177.0381 -99.2627 174.4824 -96.7051 174.4761 -93.564 C174.4761 -82.3779 L174.4824 -79.2324 177.0381 -76.6768 180.1792 -76.6724 C204.3584 -76.6724 L207.502 -76.6768 210.0576 -79.2324 210.0625 -82.3779 C210.0625 -93.564 Lf*U*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa204.833 -79.2334 m179.7075 -79.2334 L178.0947 -79.2334 176.7837 -80.5444 176.7837 -82.1577 C176.7837 -93.7832 L176.7837 -95.3965 178.0947 -96.7075 179.7075 -96.7075 C204.833 -96.7075 L206.4443 -96.7075 207.7559 -95.3965 207.7559 -93.7832 C207.7559 -82.1577 L207.7559 -80.5444 206.4443 -79.2334 204.833 -79.2334 Cf0 D190.2441 -93.7573 m186.0732 -89.5864 L184.8193 -90.8389 L184.248 -91.4111 L183.8955 -90.6826 L180.3525 -83.3721 L179.6289 -81.8774 L181.1221 -82.603 L188.4307 -86.146 L189.1602 -86.499 L187.3359 -88.3232 L191.0986 -92.0864 L191.5068 -92.4946 L190.2441 -93.7573 Lf*UUu*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa254.665 -98.8193 m253.7793 -97.6885 252.9092 -96.3623 252.1807 -94.8525 C250.6768 -94.9746 249.1084 -94.9854 247.4863 -94.8594 C247.9424 -96.0742 248.5791 -97.1748 249.3711 -98.126 C251.2354 -98.6123 253.0059 -98.8242 254.665 -98.8193 Cf256.3662 -79.6436 m255.8271 -79.7285 255.2891 -79.8379 254.7529 -80.0039 c254.1768 -80.1807 253.6357 -80.4111 253.1123 -80.668 C252.5068 -82.3848 252.1689 -84.0088 252.043 -85.5361 C254.9766 -84.9473 257.6465 -84.0684 259.9043 -83.1504 C258.5732 -81.4922 257.2236 -80.3154 256.3662 -79.6436 Cf264.0889 -81.209 m262.4951 -80.2227 260.667 -79.6357 258.7627 -79.5264 C259.5811 -80.2959 260.5225 -81.2881 261.4443 -82.4922 C262.4355 -82.0498 263.3193 -81.6123 264.0889 -81.209 Cf246.9951 -93.2061 m247.0029 -93.1289 L248.54 -93.2852 250.0361 -93.2998 251.4775 -93.208 C250.8408 -91.5117 250.416 -89.6211 250.335 -87.5508 C249.3008 -87.7012 248.2393 -87.8154 247.1533 -87.8809 C246.6904 -89.5762 246.6094 -91.3945 246.9951 -93.2061 Cf250.9346 -82.0537 m249.5732 -83.1641 248.5068 -84.5684 247.7871 -86.1396 C248.6553 -86.0684 249.5107 -85.9688 250.3447 -85.8398 C250.4111 -84.6328 250.6025 -83.3691 250.9346 -82.0537 Cf265.5479 -76.7734 m261.7822 -74.7861 257.4658 -74.3848 253.3975 -75.6436 c249.3311 -76.9004 245.9971 -79.667 244.0107 -83.4326 c242.0234 -87.1982 241.623 -91.5137 242.8818 -95.582 c244.1387 -99.6475 246.9053 -102.9834 250.6689 -104.9697 c254.4346 -106.9551 258.749 -107.3564 262.8193 -106.0977 c264.416 -105.6045 265.8936 -104.8716 267.2266 -103.9443 C266.2305 -103.6943 265.293 -103.3008 264.4355 -102.7832 C263.6934 -103.1743 262.9131 -103.5044 262.0947 -103.7568 c258.6514 -104.8252 255.001 -104.4844 251.8125 -102.8037 c248.625 -101.1211 246.2842 -98.2998 245.2236 -94.8594 c244.1553 -91.415 244.4961 -87.7637 246.1768 -84.5762 c247.8594 -81.3887 250.6807 -79.0469 254.1221 -77.9844 c257.5654 -76.918 261.2168 -77.2588 264.4033 -78.9414 c266.5449 -80.0708 268.291 -81.7236 269.5371 -83.7251 C269.5986 -83.7241 269.6582 -83.7158 269.7197 -83.7158 c270.6934 -83.7158 271.6328 -83.8608 272.5264 -84.1152 C271.0674 -80.9834 268.6563 -78.4146 265.5479 -76.7734 cf261.4688 -101.7197 m261.8203 -101.6094 262.1631 -101.4814 262.4951 -101.3447 C262.501 -101.3291 262.5059 -101.3145 262.5117 -101.2988 C261.9482 -100.7437 261.4561 -100.1206 261.0322 -99.4487 C260.1025 -99.748 259.126 -99.9995 258.0977 -100.1777 C259.1357 -101.1602 259.9854 -101.7764 260.3223 -102.0088 C260.7041 -101.9336 261.0869 -101.8369 261.4688 -101.7197 cf267.1729 -84.0483 m266.7012 -83.4214 266.1807 -82.8394 265.5986 -82.3301 C264.7275 -82.8105 263.668 -83.3555 262.4482 -83.9141 C262.8311 -84.5029 263.1914 -85.1421 263.5322 -85.8071 C264.6025 -84.9956 265.834 -84.3916 267.1729 -84.0483 Cf256.0381 -100.4287 m254.6943 -100.5273 253.2813 -100.501 251.8057 -100.3135 C253.5889 -101.5 255.6982 -102.1748 257.8877 -102.2188 C257.3447 -101.7471 256.71 -101.1475 256.0381 -100.4287 Cf259.4463 -93.9902 m259.4463 -93.7837 259.4648 -93.582 259.4775 -93.3789 C257.7646 -93.9336 255.8975 -94.3936 253.8965 -94.6689 C254.7197 -96.2637 255.7158 -97.6152 256.6826 -98.7109 C257.9502 -98.5767 259.1367 -98.314 260.2529 -97.979 C259.7334 -96.752 259.4463 -95.4043 259.4463 -93.9902 cf253.1553 -93.0469 m255.5635 -92.75 257.7871 -92.1655 259.7744 -91.4609 C260.2148 -89.729 261.0908 -88.1729 262.2871 -86.917 C261.8809 -86.0718 261.4268 -85.2856 260.9463 -84.5703 C258.4287 -85.6221 255.3838 -86.6387 251.9912 -87.2773 C252.0342 -89.418 252.4814 -91.3457 253.1553 -93.0469 Cf*U*u0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa281.1338 -101.8926 m277.1904 -97.813 L277.7803 -96.6646 278.1201 -95.3667 278.1201 -93.9893 c278.1201 -89.3564 274.3525 -85.5879 269.7197 -85.5879 c265.0869 -85.5879 261.3174 -89.3564 261.3174 -93.9893 c261.3174 -98.6211 265.0869 -102.3896 269.7197 -102.3896 c271.1777 -102.3896 272.5498 -102.0151 273.7461 -101.3594 C277.7803 -105.5322 L278.7861 -106.459 280.3506 -106.3945 281.2764 -105.3887 c282.2041 -104.3828 282.1396 -102.8184 281.1338 -101.8926 Cf0 D269.7197 -99.3945 m266.7373 -99.3945 264.3135 -96.9697 264.3135 -93.9893 c264.3135 -91.0078 266.7373 -88.583 269.7197 -88.583 c272.7021 -88.583 275.126 -91.0078 275.126 -93.9893 c275.126 -96.9697 272.7021 -99.3945 269.7197 -99.3945 cf*UUu*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa67.2012 -85.3696 m37.4639 -85.3691 L34.4087 -85.3696 31.9326 -87.8462 31.9326 -90.9004 C31.9326 -101.2866 L31.9326 -104.3408 34.4087 -106.8179 37.4639 -106.8179 C67.2012 -106.8179 L70.2559 -106.8179 72.7324 -104.3408 72.7324 -101.2866 C72.7324 -90.9004 L72.7329 -87.8462 70.2568 -85.3696 67.2012 -85.3696 Cf0 D60.6084 -89.2632 m61.5942 -89.2632 62.3921 -90.063 62.3921 -91.0469 c62.3921 -92.0317 61.5942 -92.8301 60.6084 -92.8311 c59.624 -92.8311 58.8242 -92.0317 58.8242 -91.0469 c58.8252 -90.063 59.624 -89.2632 60.6084 -89.2632 cf59.5278 -96.0361 m59.5278 -97.0215 58.729 -97.8198 57.7451 -97.8198 c56.7598 -97.8198 55.9604 -97.0215 55.9619 -96.0361 c55.9604 -95.0518 56.7598 -94.2529 57.7451 -94.2529 c58.729 -94.2529 59.5278 -95.0518 59.5278 -96.0361 cf55.0679 -89.2632 m56.0532 -89.2632 56.853 -90.063 56.853 -91.0469 c56.853 -92.0317 56.0532 -92.8301 55.0693 -92.8311 c54.084 -92.8311 53.2847 -92.0317 53.2847 -91.0469 c53.2847 -90.062 54.084 -89.2632 55.0679 -89.2632 cf53.9888 -96.0361 m53.9888 -97.0215 53.1904 -97.8208 52.2041 -97.8198 c51.2207 -97.8198 50.4209 -97.0215 50.4209 -96.0361 c50.4209 -95.0527 51.2207 -94.2529 52.2051 -94.2529 c53.1904 -94.2529 53.9888 -95.0518 53.9888 -96.0361 cf49.5288 -89.2632 m50.5142 -89.2632 51.313 -90.063 51.313 -91.0469 c51.313 -92.0317 50.5142 -92.8301 49.5293 -92.8301 c48.5449 -92.8311 47.7456 -92.0317 47.7456 -91.0469 c47.7456 -90.063 48.5449 -89.2632 49.5288 -89.2632 cf48.4487 -96.0361 m48.4487 -97.0215 47.6494 -97.8208 46.6646 -97.8208 c45.6797 -97.8208 44.8813 -97.0215 44.8813 -96.0361 c44.8813 -95.0527 45.6797 -94.2529 46.6655 -94.2529 c47.6494 -94.2529 48.4487 -95.0518 48.4487 -96.0361 cf43.9893 -89.2632 m44.9741 -89.2632 45.7734 -90.062 45.7734 -91.0469 c45.7734 -92.0317 44.9741 -92.8311 43.9902 -92.8301 c43.0044 -92.8311 42.2056 -92.0317 42.2056 -91.0469 c42.2056 -90.062 43.0044 -89.2632 43.9893 -89.2632 cf38.4497 -89.2632 m39.4341 -89.2632 40.2339 -90.062 40.2339 -91.0469 c40.2339 -92.0317 39.4341 -92.8311 38.4497 -92.8311 c37.4644 -92.8301 36.666 -92.0317 36.666 -91.0469 c36.666 -90.063 37.4644 -89.2632 38.4497 -89.2632 cf38.4497 -102.8091 m37.4644 -102.8091 36.666 -102.0098 36.666 -101.0259 c36.666 -100.0405 37.4644 -99.2427 38.4497 -99.2427 c39.4341 -99.2427 40.2339 -100.0405 40.2339 -101.0259 c40.2339 -102.0107 39.4341 -102.8091 38.4497 -102.8091 cf41.1245 -97.8208 m40.1401 -97.8198 39.3413 -97.0215 39.3413 -96.0361 c39.3413 -95.0527 40.1401 -94.2529 41.1245 -94.2529 c42.1094 -94.2529 42.9092 -95.0518 42.9092 -96.0361 c42.9092 -97.0215 42.1108 -97.8198 41.1245 -97.8208 cf59.4351 -102.9229 m45.2305 -102.9233 L44.2456 -102.9229 43.4473 -102.1235 43.4473 -101.1392 c43.4473 -100.1543 44.2456 -99.3555 45.2305 -99.3555 C59.4351 -99.3555 L60.4204 -99.3555 61.2183 -100.1543 61.2183 -101.1401 c61.2183 -102.1235 60.4204 -102.9233 59.4351 -102.9229 Cf61.5 -96.0361 m61.5 -95.0527 62.2993 -94.2529 63.2837 -94.2529 c64.269 -94.2529 65.0674 -95.0527 65.0674 -96.0361 c65.0674 -97.0215 64.269 -97.8208 63.2847 -97.8198 c62.2993 -97.8208 61.5 -97.0215 61.5 -96.0361 cf66.2148 -102.8091 m65.2305 -102.8091 64.4321 -102.0098 64.4321 -101.0259 c64.4312 -100.0405 65.2305 -99.2427 66.2148 -99.2427 c67.2012 -99.2417 67.9985 -100.0405 67.9985 -101.0259 c67.9985 -102.0107 67.2012 -102.8091 66.2148 -102.8091 cf66.2148 -92.8311 m65.2305 -92.8301 64.4321 -92.0317 64.4321 -91.0469 c64.4312 -90.063 65.2305 -89.2632 66.2148 -89.2632 c67.2012 -89.2632 67.9985 -90.062 67.9985 -91.0469 c67.9985 -92.0317 67.2012 -92.8311 66.2148 -92.8311 cf*U0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa43.9575 -80.7949 m46.8892 -80.7705 50.3008 -79.2666 53.6045 -78.0415 c54.5049 -77.7021 55.3115 -77.5562 55.9941 -77.5562 C57.9365 -77.6289 58.8877 -78.501 59.0967 -80.437 C59.1104 -80.6216 59.1143 -80.7959 59.1167 -80.9663 C58.0757 -81.2056 57.1533 -81.7573 56.4604 -82.5151 c56.3179 -82.6694 56.2793 -82.8926 56.3647 -83.0835 c56.3975 -83.1572 56.4556 -83.2095 56.5137 -83.2598 C64.0273 -83.2598 L64.085 -83.2095 64.1431 -83.1572 64.1758 -83.0835 c64.2612 -82.8926 64.2227 -82.6694 64.0806 -82.5151 c63.3423 -81.71 62.3462 -81.1396 61.2246 -80.9282 C61.2217 -80.7188 61.2168 -80.5083 61.2017 -80.291 c61.0698 -77.4258 58.8389 -75.3735 55.9941 -75.4468 c55.0146 -75.4468 53.9624 -75.6519 52.8608 -76.0664 c49.5391 -77.3306 46.1416 -78.708 43.9575 -78.6836 c42.6021 -78.6392 41.9316 -78.3384 41.3706 -77.2656 c41.1167 -76.7412 40.4868 -76.522 39.9624 -76.7759 c39.4385 -77.0298 39.2188 -77.6597 39.4731 -78.1836 c40.3364 -80.0513 42.1694 -80.8394 43.9575 -80.7949 cfUu*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa65.186 -263.8428 m60.2563 -263.8428 L60.2563 -264.6621 L60.2563 -267.0342 58.3271 -268.9658 55.9551 -268.9658 C46.4966 -268.9658 L44.1245 -268.9658 42.1953 -267.0342 42.1953 -264.6621 C42.1953 -263.8428 L37.1694 -263.8428 L35.1216 -263.8428 33.46 -265.5059 33.46 -267.5537 C33.46 -286.0664 L33.46 -288.1152 35.1216 -289.7773 37.1694 -289.7773 C65.186 -289.7773 L67.2339 -289.7773 68.895 -288.1152 68.895 -286.0664 C68.895 -267.5537 L68.895 -265.5059 67.2339 -263.8428 65.186 -263.8428 Cf0 D53.4316 -274.1182 m64.0581 -274.1182 L64.6089 -274.1182 65.0557 -274.5654 65.0557 -275.1191 c65.0557 -275.6699 64.6089 -276.1162 64.0581 -276.1162 C53.4316 -276.1162 L52.8784 -276.1162 52.4316 -275.6699 52.4316 -275.1191 c52.4316 -274.5654 52.8784 -274.1182 53.4316 -274.1182 Cf44.0415 -272.002 m45.7231 -272.002 47.0864 -273.3662 47.0864 -275.0479 c47.0864 -276.7275 45.7231 -278.0938 44.0415 -278.0938 c42.3589 -278.0938 40.9961 -276.7275 40.9961 -275.0479 c40.9961 -273.3662 42.3589 -272.002 44.0415 -272.002 cf50.1577 -284.0342 m37.9248 -284.0342 L37.9248 -281.2002 L37.9248 -279.6357 39.1938 -278.3652 40.7598 -278.3652 C41.9712 -278.3652 L44.0967 -280.4902 L46.2222 -278.3652 L47.3228 -278.3652 L48.8887 -278.3652 50.1577 -279.6357 50.1577 -281.2002 C50.1577 -284.0342 Lf59.3408 -283.4209 m53.4307 -283.4209 L52.8774 -283.4209 52.4321 -282.9717 52.4321 -282.4199 c52.4321 -281.8672 52.8774 -281.4209 53.4307 -281.4209 C59.3408 -281.4209 L59.894 -281.4209 60.3418 -281.8672 60.3418 -282.4199 c60.3418 -282.9717 59.894 -283.4209 59.3408 -283.4209 Cf64.0576 -279.7695 m53.4307 -279.7695 L52.8774 -279.7695 52.4302 -279.3203 52.4302 -278.7695 c52.4302 -278.2158 52.8774 -277.7686 53.4307 -277.7686 C64.0576 -277.7686 L64.6089 -277.7686 65.0562 -278.2158 65.0562 -278.7695 c65.0562 -279.3203 64.6089 -279.7695 64.0576 -279.7695 Cf*U*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa55.9556 -261.0469 m55.1201 -261.0469 L54.8057 -259.1738 53.1895 -257.7441 51.2261 -257.7422 c49.2646 -257.7441 47.6484 -259.1738 47.333 -261.0469 C46.4961 -261.0469 L45.2256 -261.0469 44.1948 -262.0781 44.1948 -263.3496 C44.1948 -264.6621 L44.1948 -265.9326 45.2256 -266.9648 46.4961 -266.9648 C55.9556 -266.9648 L57.2261 -266.9648 58.2573 -265.9326 58.2573 -264.6621 C58.2573 -263.3496 L58.2573 -262.0781 57.2261 -261.0469 55.9556 -261.0469 Cf0 D51.2261 -263.6621 m50.144 -263.6602 49.27 -262.7852 49.2656 -261.7041 c49.27 -260.6201 50.1465 -259.7461 51.2261 -259.7432 c52.3081 -259.7461 53.1841 -260.6201 53.1865 -261.7041 c53.1841 -262.7852 52.3081 -263.6602 51.2261 -263.6621 cf*UUu*u1 D345.8945 -281.4697 m333.9531 -260.7852 L332.9268 -258.9961 331.125 -257.8604 329.1475 -257.8633 c327.168 -257.8633 325.3711 -259 324.3467 -260.791 C312.4111 -281.4629 L311.8691 -282.4033 311.5859 -283.4297 311.5859 -284.4482 c311.584 -285.3633 311.8145 -286.2725 312.2852 -287.085 c313.2236 -288.71 314.9697 -289.6816 316.9063 -289.7686 C316.9189 -289.7773 L341.1045 -289.7773 L343.1563 -289.7773 345.0313 -288.7891 346.0176 -287.083 c346.4854 -286.2725 346.7158 -285.3633 346.7158 -284.4482 c346.7158 -283.4297 346.4326 -282.4063 345.8945 -281.4697 Cf0 D344.3359 -286.1113 m343.7217 -287.165 342.5488 -287.8291 341.0908 -287.835 C317.2764 -287.835 L317.2549 -287.834 317.2324 -287.833 317.21 -287.833 c315.75 -287.8291 314.5771 -287.167 313.9678 -286.1113 c313.6738 -285.6045 313.5293 -285.043 313.5273 -284.4482 c313.5273 -283.793 313.71 -283.0967 314.0928 -282.4326 C326.0322 -261.7588 L326.0332 -261.7588 L326.7637 -260.4941 327.9268 -259.8066 329.1475 -259.8047 c330.3711 -259.8066 331.5332 -260.4912 332.2686 -261.7568 C344.2119 -282.4375 L344.5889 -283.0967 344.7715 -283.793 344.7715 -284.4482 c344.7715 -285.0449 344.627 -285.6084 344.3359 -286.1113 cf*U*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa342.1768 -283.6104 m337.291 -275.1484 L336.6953 -274.1152 335.7178 -272.4199 335.1201 -271.3896 C330.2363 -262.9297 L329.6387 -261.8936 328.6621 -261.8936 328.0664 -262.9297 C323.1816 -271.3896 L322.585 -272.4199 321.6074 -274.1152 321.0107 -275.1484 C316.127 -283.6104 L315.5313 -284.6445 316.0186 -285.4883 317.2129 -285.4883 C341.0908 -285.4883 L342.2832 -285.4883 342.7725 -284.6445 342.1768 -283.6104 Cf0 D330.3281 -282.6387 m329.9648 -282.9834 329.5391 -283.1553 329.0508 -283.1553 c328.5566 -283.1553 328.127 -282.9834 327.7627 -282.6387 c327.3984 -282.292 327.2158 -281.8789 327.2158 -281.3975 c327.2158 -280.916 327.3984 -280.499 327.7627 -280.1475 c328.127 -279.7959 328.5566 -279.6201 329.0508 -279.6201 c329.5391 -279.6201 329.9648 -279.7959 330.3281 -280.1475 c330.6934 -280.499 330.875 -280.916 330.875 -281.3975 c330.875 -281.8789 330.6934 -282.292 330.3281 -282.6387 cf330.7559 -271.9268 m330.6641 -272.3545 330.5488 -272.8564 330.4102 -273.4336 c330.2764 -273.9785 330.125 -274.6563 329.9531 -275.4707 c329.7822 -276.2861 329.6016 -277.292 329.4111 -278.4902 C328.6797 -278.4902 L328.4902 -277.2793 328.3086 -276.2715 328.1377 -275.4658 c327.9668 -274.6611 327.8154 -273.9873 327.6816 -273.4424 c327.5625 -272.9414 327.4512 -272.4531 327.3496 -271.9736 c327.248 -271.4961 327.1973 -271.1357 327.1973 -270.8955 c327.1973 -270.4072 327.3779 -269.9912 327.7383 -269.6455 c328.0996 -269.3008 328.5342 -269.1279 329.041 -269.1279 c329.541 -269.1279 329.9746 -269.3008 330.3428 -269.6455 c330.71 -269.9912 330.8945 -270.4072 330.8945 -270.8955 c330.8945 -271.1563 330.8477 -271.499 330.7559 -271.9268 cf*UUu*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa197.624 -262.0264 m193.873 -258.8232 188.3784 -258.7461 184.5459 -261.7949 C193.1533 -270.4033 L195.2539 -268.042 196.8125 -265.1865 197.624 -262.0264 Cf207.8477 -272.1924 m199.5527 -263.8965 L197.3359 -270.7969 191.8877 -276.2461 184.9858 -278.4648 C193.2832 -286.7607 L197.3047 -290.7822 203.8262 -290.7832 207.8477 -286.7607 c211.873 -282.7383 211.873 -276.2188 207.8477 -272.1924 Cf182.8823 -263.458 m179.833 -267.291 179.9131 -272.7871 183.1167 -276.5371 C186.2759 -275.7246 189.1299 -274.167 191.4893 -272.0664 C182.8823 -263.458 Lf*U0 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa171.1211 -282.8477 m170.8457 -282.8477 170.5747 -282.8203 170.314 -282.7676 c169.3296 -282.5771 168.4497 -282.1064 167.6992 -281.375 c167.624 -281.3047 167.5781 -281.2461 167.5591 -281.2236 c167.376 -280.998 167.2944 -280.7285 167.3218 -280.4521 c167.3491 -280.1758 167.4849 -279.9287 167.6992 -279.751 c167.8848 -279.5986 168.1118 -279.5166 168.3516 -279.5166 c168.667 -279.5166 168.9609 -279.6572 169.1611 -279.9004 c169.1777 -279.9199 169.8237 -280.5742 170.6958 -280.7246 c170.8438 -280.7471 170.9985 -280.7627 171.165 -280.7627 c172.0303 -280.7627 172.894 -280.3145 173.8843 -279.3506 c175.0918 -278.1631 175.394 -276.3477 174.7871 -273.9521 c174.3286 -272.2002 173.5361 -270.7422 173.2378 -270.1943 C173.1499 -270.0332 L172.5288 -268.7822 172.1655 -267.5908 172.0386 -266.417 c171.8701 -264.999 171.9473 -262.2627 174.3574 -259.8779 c175.521 -258.6787 176.9478 -258.0215 178.3804 -258.0215 c178.7578 -258.0215 179.125 -258.0674 179.4751 -258.1572 c180.5762 -258.4287 181.5815 -259.0186 182.5464 -259.957 C182.2778 -260.1846 182.0171 -260.4219 181.7651 -260.6748 c181.5205 -260.916 181.2935 -261.167 181.0762 -261.4229 C180.8325 -261.1807 179.9878 -260.4053 178.9912 -260.1797 c178.7617 -260.1338 178.5347 -260.1025 178.2988 -260.1025 c177.4814 -260.1025 176.7202 -260.4844 175.8296 -261.3408 c174.0386 -263.1533 173.9888 -264.9756 174.1035 -266.1904 c174.21 -267.1533 174.5098 -268.125 174.9976 -269.082 c175.0186 -269.1279 175.0503 -269.1846 175.0957 -269.2705 c175.3921 -269.8145 176.293 -271.4717 176.7974 -273.4326 c177.3604 -275.5723 177.5669 -278.5869 175.3564 -280.8203 c174.022 -282.1533 172.543 -282.8477 171.1211 -282.8477 C171.1211 -282.8477 LfUu*u114.7461 -276.834 m114.3447 -276.6777 113.6084 -276.2676 113.2114 -275.3457 C113.2114 -275.3457 L113.041 -274.957 112.9785 -274.5723 112.9805 -274.2422 C112.9805 -274.2422 L112.9805 -273.7969 113.0864 -273.4434 113.1758 -273.2188 C113.1758 -273.2188 L113.3193 -272.8418 113.688 -272.1777 114.4824 -271.7676 C114.4824 -271.7676 L114.4966 -271.752 L114.6606 -271.6797 L115.0142 -271.5254 115.3926 -271.4492 115.771 -271.4492 C115.771 -271.4492 L116.1201 -271.4492 116.4697 -271.5156 116.7959 -271.6445 C116.7959 -271.6445 L117.4863 -271.918 118.0396 -272.4551 118.3325 -273.1328 C118.3325 -273.1328 L118.4824 -273.4824 118.5596 -273.8594 118.5596 -274.2383 C118.5596 -274.2383 L118.5615 -274.584 118.4946 -274.9336 118.3638 -275.2676 C118.3638 -275.2676 L118.0938 -275.9551 117.5571 -276.5059 116.8667 -276.8027 C116.8667 -276.8027 L116.5239 -276.9492 116.1514 -277.0273 115.771 -277.0273 C115.771 -277.0273 L115.4258 -277.0273 115.0767 -276.9629 114.7461 -276.834 C114.7461 -276.834 Lf1 D115.4111 -273.4121 m115.1099 -273.541 114.9873 -273.7754 114.9312 -273.916 C114.9312 -273.916 L114.9038 -273.9805 114.8667 -274.1035 114.8667 -274.2422 C114.8667 -274.2422 L114.8687 -274.3457 114.8833 -274.457 114.9453 -274.5996 C114.9453 -274.5996 L115.0723 -274.9004 115.3071 -275.0234 115.436 -275.0762 C115.436 -275.0762 L115.5444 -275.1191 115.6543 -275.1406 115.771 -275.1406 C115.771 -275.1406 L115.8872 -275.1406 116.0103 -275.1152 116.1284 -275.0664 C116.1284 -275.0664 L116.3555 -274.9668 116.5176 -274.7988 116.6089 -274.5723 C116.6089 -274.5723 L116.6528 -274.4609 116.6733 -274.3496 116.6733 -274.2383 C116.6733 -274.2383 L116.6733 -274.1191 116.6484 -273.998 116.5986 -273.8848 C116.5986 -273.8848 L116.4966 -273.6523 116.3325 -273.4922 116.1016 -273.4004 C116.1016 -273.4004 L115.9893 -273.3555 115.8789 -273.3359 115.771 -273.3359 C115.771 -273.3359 L115.6504 -273.3359 115.5317 -273.3594 115.4175 -273.4102 C115.4175 -273.4102 L115.4175 -273.4102 L115.4111 -273.4121 L115.4111 -273.4121 Lf*U0 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa131.9995 -288.6172 m136.0376 -282.875 135.8237 -279.0352 v135.6147 -275.084 132.2319 -271.9688 y132.0112 -275.1797 128.0239 -278.3398 127.0776 -281.6094 c125.5796 -286.8086 129.0308 -289.7773 y123.7114 -289.4121 120.4849 -283.9414 122.6147 -276.5449 c123.7085 -272.8477 129.9888 -266.2715 128.6743 -257.4355 c133.7231 -263.4648 141.5601 -273.3496 141.6782 -278.6074 c141.7427 -283.8027 136.7798 -288.9453 131.9995 -288.6172 cf0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa125.9956 -263.1953 m121.7515 -259.2715 115.436 -257.9785 109.7905 -260.4238 c102.1606 -263.7246 98.6499 -272.5898 101.9536 -280.2207 c105.2505 -287.8359 114.0845 -291.3438 121.7056 -288.0762 C121.6021 -287.9453 121.4946 -287.8223 121.3979 -287.6836 c119.6128 -285.1348 119.0513 -281.7383 119.7466 -277.9766 C119.7461 -277.9766 119.7456 -277.9785 119.7451 -277.9785 C119.499 -278.2402 119.2256 -278.4785 118.9258 -278.6914 c118.9233 -278.6934 118.9214 -278.6953 118.9194 -278.6973 c118.6172 -278.9102 118.2896 -279.0957 117.937 -279.248 c115.1733 -280.4434 111.9604 -279.1719 110.7642 -276.4063 c109.5659 -273.6426 110.8384 -270.4297 113.603 -269.2324 c116.3687 -268.0371 119.5825 -269.3086 120.7778 -272.0742 c120.8857 -272.3242 120.9668 -272.5781 121.0356 -272.832 c121.0474 -272.877 121.0601 -272.9219 121.0708 -272.9668 c121.1333 -273.2246 121.1787 -273.4844 121.2026 -273.7441 c121.2026 -273.7461 121.2036 -273.748 121.2036 -273.75 C121.5181 -273.1523 121.8657 -272.5332 122.2456 -271.8672 c123.6548 -269.3906 125.2847 -266.5117 125.9956 -263.1953 CfUu*u1 D274.7686 -271.5508 m274.6748 -270.9316 274.2002 -270.4365 273.584 -270.3242 C271.5703 -269.9551 270.5156 -269.7656 V270.293 -269.1494 270.0195 -268.5498 269.6934 -267.9658 C270.3418 -267.0742 271.4346 -265.583 Y271.6211 -265.3252 271.7109 -265.0225 271.7109 -264.7197 c271.7109 -264.3916 271.6045 -264.0615 271.3818 -263.7939 c270.5654 -262.7939 269.6641 -261.915 268.6992 -261.1787 c268.1943 -260.7959 267.502 -260.7773 266.9805 -261.1357 C265.2227 -262.3428 264.3457 -262.9473 V263.7939 -262.6719 263.2334 -262.4453 262.665 -262.2646 C262.4961 -261.2012 262.1914 -259.2676 Y262.0879 -258.6201 261.5684 -258.1172 260.915 -258.041 c260.2715 -257.9678 259.6592 -257.9307 259.0439 -257.9307 C258.9014 -257.9277 L258.5313 -257.9307 L258.5059 -257.9307 258.2617 -257.9316 Y258.2607 -257.9316 258.3643 -257.9307 Y258.1943 -257.9316 L258.1865 -257.9326 257.4922 -258.0078 Y257.2178 -258.04 L256.585 -258.1201 256.043 -258.6045 255.9258 -259.2324 C255.5693 -261.167 255.373 -262.2373 V254.7217 -262.4414 254.0928 -262.6963 253.4893 -263.0039 C252.6035 -262.3672 251.0322 -261.2373 Y250.5059 -260.8564 249.792 -260.8711 249.2773 -261.2686 c248.3467 -261.9922 247.4746 -262.8496 246.6865 -263.8135 c246.4678 -264.084 246.3555 -264.4102 246.3555 -264.7412 c246.3555 -265.0273 246.4414 -265.3174 246.6133 -265.5684 C247.7021 -267.1582 248.3193 -268.0566 V247.9521 -268.7305 247.6494 -269.4443 247.418 -270.1768 C246.3389 -270.3486 244.46 -270.6445 Y243.8145 -270.7471 243.3115 -271.2637 243.2334 -271.9141 c243.1572 -272.5273 243.1201 -273.1855 243.1201 -273.874 c243.1201 -274.5 243.1416 -275.0068 243.1875 -275.4736 c243.2549 -276.125 243.7461 -276.6533 244.3867 -276.7705 C246.2783 -277.1064 247.3535 -277.3008 V247.5947 -278.125 247.917 -278.916 248.3232 -279.666 C247.6787 -280.5547 246.5762 -282.0645 Y246.3896 -282.3223 246.2969 -282.625 246.2969 -282.9268 c246.2969 -283.2529 246.4033 -283.5791 246.6201 -283.8447 c247.334 -284.7324 248.165 -285.5576 249.0977 -286.3037 c249.6025 -286.7051 250.3105 -286.7314 250.8428 -286.3662 C252.4668 -285.2471 253.3613 -284.6338 V254.1426 -285.0439 254.958 -285.3711 255.8096 -285.6035 C255.9824 -286.6934 256.2676 -288.502 Y256.377 -289.1943 256.8779 -289.707 257.5801 -289.7314 C259.0439 -289.7773 L259.8242 -289.7773 260.4678 -289.7402 261.0762 -289.6641 c261.7041 -289.5811 262.2119 -289.1045 262.3291 -288.4785 C262.7031 -286.4658 262.9004 -285.4033 V263.7061 -285.1377 264.4756 -284.7939 265.1963 -284.373 C266.0918 -285.0215 267.5439 -286.0781 Y268.0908 -286.4746 268.8379 -286.4473 269.3545 -286.0088 c270.248 -285.2471 271.0674 -284.374 271.7861 -283.417 c271.9814 -283.1572 272.0791 -282.8467 272.0791 -282.5381 c272.0791 -282.2471 271.9951 -281.9551 271.8213 -281.7031 C270.6406 -279.998 270.0283 -279.1123 V270.3525 -278.4307 270.6172 -277.7227 270.8096 -276.9863 C271.9053 -276.8125 273.6914 -276.5293 Y274.3857 -276.4209 274.8975 -275.9063 274.9209 -275.2051 C274.9688 -273.874 L274.9688 -273.0293 274.8682 -272.2256 274.7686 -271.5508 cf0 D259.0449 -280.5967 m255.2852 -280.5967 252.2393 -277.5498 252.2373 -273.792 c252.2393 -270.0313 255.2852 -266.9854 259.0449 -266.9854 c262.8037 -266.9854 265.8477 -270.0313 265.8496 -273.792 c265.8477 -277.5498 262.8037 -280.5967 259.0449 -280.5967 cf*U*u0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa254.1953 -273.792 m254.1953 -271.1133 256.3643 -268.9414 259.0439 -268.9414 C259.0439 -268.9414 L261.7227 -268.9414 263.8916 -271.1133 263.8916 -273.792 C263.8916 -273.792 L263.8916 -276.4707 261.7207 -278.6387 259.0439 -278.6387 C259.0439 -278.6387 L256.3643 -278.6387 254.1953 -276.4688 254.1953 -273.792 C254.1953 -273.792 Lf1 D256.1943 -273.792 m256.1982 -275.3643 257.4688 -276.6357 259.0439 -276.6377 C259.0439 -276.6377 L260.6182 -276.6357 261.8906 -275.3643 261.8926 -273.792 C261.8926 -273.792 L261.8906 -272.2178 260.6162 -270.9443 259.0439 -270.9404 C259.0439 -270.9404 L257.4717 -270.9443 256.1982 -272.2178 256.1943 -273.792 C256.1943 -273.792 Lf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF