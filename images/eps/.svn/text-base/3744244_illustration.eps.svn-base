%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (Scott Dunlap) ()%%Title: (tech+entertainment-cobalt.eps)%%CreationDate: 7/9/07 5:25 PM%%BoundingBox: 31 -335 346 -80%%HiResBoundingBox: 31.2061 -334.3906 345.3193 -80.0225%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 190.625 -190.625 190.625 -190.625%AI3_TileBox: -319.875 -850.125 700.125 469.875%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 380 306%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -157.7539 9.75391 2.6139 1829 1115 26 1 0 50 75 0 0%AI5_OpenViewLayers: 77%%PageOrigin:-35.8745 -859.125%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--2 Bn%AI5_BeginGradient: (New Gradient Swatch 1)(New Gradient Swatch 1) 0 3 Bd[<11121313141517181A1B1C1C1E1F20><0B0C0C0D0E0F0F1012131314151617><0B0B0C0D0E0F0F1012131314151617>0<EBEAE9E8E7E6E5E4E2E1E0DFDEDDDC><ECEBEAE9E8E7E6E5E3E2E1E0DFDEDD><EDECEBEAE9E8E7E6E4E3E2E1E0DFDE>4 %_Br<000000000000000000000000000000000000000000000000010101020203030404050506060708090A0A0B0C0D1011><00000000000000000000000000000000000000000000000001000001010202020203020304050405050607080A0A0B><0000000000000000000000000000000000000000000000000000000001010201020203030304050506070708090A0B>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F6F6F5F4F3F2F1F0EFEEECEB><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F8F8F7F6F5F5F4F3F2F1F0EEEDEC><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F7F6F5F4F3F2F1F0EFEEED>4 %_Br[0.85 0 53.6585 100 %_BS%_0.85 0 53.6585 100 Bs0.92 0 50 80 %_BS%_0.92 0 50 80 Bs1 0 80 0 %_BS%_1 0 80 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 15)(Unnamed gradient 15) 0 3 Bd[<11121313141517181A1B1C1C1E1F20><0B0C0C0D0E0F0F1012131314151617><0B0B0C0D0E0F0F1012131314151617>0<EBEAE9E8E7E6E5E4E2E1E0DFDEDDDC><ECEBEAE9E8E7E6E5E3E2E1E0DFDEDD><EDECEBEAE9E8E7E6E4E3E2E1E0DFDE>4 %_Br<000000000000000000000000000000000000000000000000010101020203030404050506060708090A0A0B0C0D1011><00000000000000000000000000000000000000000000000001000001010202020203020304050405050607080A0A0B><0000000000000000000000000000000000000000000000000000000001010201020203030304050506070708090A0B>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F6F6F5F4F3F2F1F0EFEEECEB><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F8F8F7F6F5F5F4F3F2F1F0EEEDEC><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F7F6F5F4F3F2F1F0EFEEED>4 %_Br[0.85 0 53.6585 100 %_BS%_0.85 0 53.6585 100 Bs0.92 0 50 80 %_BS%_0.92 0 50 80 Bs1 0 80 0 %_BS%_1 0 80 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (New Gradient Swatch 2)(New Gradient Swatch 2) 0 2 Bd[<0303030303030404040404040505050505060606080807070908080909090A0A0B0B0B0C0C0C0D0D0E0E0F0F100F0F10101111121213131414151616171717171818191A1A1B1B1C1C1C1D1E1E1F20202020212222222324242526262627282829><A4A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A8A8A8A9A9ABABAAABABADADAEAEAFAFB0B0B1B1B3B4B4B5B5B6B6B7B9B9BABBBBBCBDBDBEBFBFC0C1C2C2C3C4C5C5C6C8C8C9C9CACCCDCDCFCECFD0D1D2D3D4D5D6D6D7D8D8D9DADBDCDDDEDFE0E1E2>1<000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101020202020202020202030303030303030404040505050505060606060607080808080909090A0B0B0B0C0D0D0D0E0F0F10><F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDBDAD9D9D8D8D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCCCCCBCACAC9C8C7C7C6><797979797978787878787777777776767675757574747373737272717170706F6F6E6E6D6D6C6B6B6A6A6969686767666565646363626161605F5E5E5D5C5B5B5A5958575756555453525251504F4E4D4C4B4A4A494847464544434241403F3E3D>04 %_Br[0.160784 0.886274 1 0.062745 0.776471 0.239216 0 2 53.6585 100 %_BS%_0.160784 0.886274 1 0.062745 0.776471 0.239216 0 2 53.6585 100 Bs0.011765 0.643137 1 0 0.94902 0.47451 0 2 65 0 %_BS%_0.011765 0.643137 1 0 0.94902 0.47451 0 2 65 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])PcBb2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 1)PcBb2 (New Gradient Swatch 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 2)Pc0.54902 0.486274 0.552941 0.188235 0.439216 0.423529 0.392157 Xa(New Color Swatch 2)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(reflections) Ln0 A*u1 D0 O0 J 0 j 1 w 4 M []0 d0 XR0 g62.8701 -146.457 m52.1406 -146.457 L52.1333 -146.541 52.1152 -146.6216 52.1152 -146.707 c52.1152 -148.3638 53.4585 -149.707 55.1152 -149.707 C60.3926 -149.707 L62.0493 -149.707 63.3926 -148.3638 63.3926 -146.707 c63.3926 -146.6128 63.373 -146.5239 63.3647 -146.4321 C63.1997 -146.4399 63.0371 -146.457 62.8701 -146.457 Cfu0 g62.8701 -117.8643 m40.8306 -117.8643 L36.2749 -117.8643 32.5688 -121.5703 32.5688 -126.126 C32.5688 -136.1953 L32.5688 -140.752 36.2749 -144.457 40.8306 -144.457 C62.8701 -144.457 L67.4238 -144.457 71.1318 -140.752 71.1318 -136.1953 C71.1318 -126.126 L71.1318 -121.5703 67.4238 -117.8643 62.8701 -117.8643 Cf0 D0 g42.5918 -140.1943 m38.8857 -140.1943 L38.1694 -140.1943 37.5889 -139.6138 37.5889 -138.8975 c37.5889 -138.1812 38.1694 -137.6006 38.8857 -137.6006 C42.5918 -137.6006 L43.3081 -137.6006 43.8887 -138.1812 43.8887 -138.8975 c43.8887 -139.6138 43.3081 -140.1943 42.5918 -140.1943 Cf0 g54.8613 -141.1558 m48.9878 -141.1558 44.209 -136.3755 44.209 -130.5 c44.209 -124.624 48.9878 -119.8433 54.8613 -119.8433 c60.7402 -119.8433 65.5234 -124.624 65.5234 -130.5 c65.5234 -136.3755 60.7402 -141.1558 54.8613 -141.1558 cfUu1 D0 g54.8613 -122.2764 m50.3228 -122.2764 46.6416 -125.9565 46.6416 -130.5 c46.6416 -135.042 50.3228 -138.7231 54.8613 -138.7231 c59.4058 -138.7231 63.0903 -135.042 63.0903 -130.5 c63.0903 -125.9565 59.4058 -122.2764 54.8613 -122.2764 cf0 D51.5728 -136.1943 m50.417 -136.2593 49.4214 -135.3809 49.356 -134.2227 c49.2905 -133.063 50.1719 -132.0688 51.3262 -132.0039 c52.4839 -131.9351 53.48 -132.8174 53.5459 -133.9751 c53.6157 -135.1328 52.7334 -136.125 51.5728 -136.1943 cBb1 (New Gradient Swatch 1) 51.8501 -149.707 90 31.8428 1 0 0 1 0 0 Bg-0.000001 31.8428 42.563 0.000002 30.5688 -149.707 Xm-0.000352 8055.7251 42.563 0.000002 30.5693 -8205.4316 Bc-0.000001 25.4742 42.563 0.000002 30.5688 -149.707 Bm0 6.36855 42.563 0.000002 30.5688 -124.2329 Bm-0.000352 8055.7251 42.563 0.000002 30.5688 -117.8643 Bcf0 BBU*U*u1 D0 g132.0845 -145.2578 m132.0845 -121.6035 L132.0845 -119.4849 130.3667 -117.7676 128.2495 -117.7676 C112.2646 -117.7676 L110.147 -117.7676 108.4297 -119.4849 108.4297 -121.6035 C108.4297 -145.2578 L108.4297 -147.3765 110.147 -149.0938 112.2646 -149.0938 C128.2495 -149.0938 L130.3667 -149.0938 132.0845 -147.3765 132.0845 -145.2578 Cf0 D0 g117.5981 -126.6987 m116.9878 -127.3857 115.9375 -127.4473 115.249 -126.8364 c114.5645 -126.2256 114.499 -125.1753 115.1113 -124.4897 c115.7246 -123.8032 116.7754 -123.7397 117.459 -124.3506 c118.146 -124.96 118.21 -126.0137 117.5981 -126.6987 cf0 g121.354 -122.9429 m120.7451 -123.6304 119.6914 -123.6909 119.0059 -123.0811 c118.3188 -122.4697 118.2554 -121.4189 118.8662 -120.7334 c119.48 -120.0479 120.5288 -119.9839 121.2158 -120.5938 c121.9028 -121.2046 121.9644 -122.2578 121.354 -122.9429 cf0 g121.582 -130.8213 m120.9321 -131.4717 119.8784 -131.4702 119.2285 -130.8203 c118.5786 -130.1704 118.5786 -129.1182 119.2275 -128.4692 c119.877 -127.8184 120.9321 -127.8184 121.5791 -128.4683 c122.2314 -129.1167 122.2324 -130.1714 121.582 -130.8213 cf0 g125.3359 -127.0649 m124.689 -127.7158 123.6323 -127.7134 122.9844 -127.064 c122.3325 -126.415 122.335 -125.3618 122.9844 -124.7148 c123.6343 -124.0625 124.6865 -124.063 125.3364 -124.7124 c125.9849 -125.3608 125.9858 -126.415 125.3359 -127.0649 cf127.3545 -143.6167 m127.3545 -144.5146 126.6289 -145.2412 125.7305 -145.2412 C114.7852 -145.2412 L113.8877 -145.2412 113.1597 -144.5146 113.1597 -143.6167 C113.1597 -135.5928 L113.1597 -134.6958 113.8877 -133.9683 114.7852 -133.9683 C125.7305 -133.9683 L126.6289 -133.9683 127.3545 -134.6958 127.3545 -135.5928 C127.3545 -143.6167 LBb1 (New Gradient Swatch 1) 120.2573 -149.0938 90 31.3262 1 0 0 1 0 0 Bg-0.000001 31.3262 27.6548 0.000001 106.4297 -149.0938 Xm-0.000355 8124.1323 27.6548 0.000001 106.4302 -8273.2266 Bc-0.000001 25.0609 27.6548 0.000001 106.4297 -149.0938 Bm0 6.26523 27.6548 0.000001 106.4297 -124.0327 Bm-0.000355 8124.1323 27.6548 0.000001 106.4297 -117.7676 Bcf0 BB*U*uu1 D0 g342.5625 -211.1445 m338.3848 -206.9668 332.4189 -207.7734 328.2412 -211.9502 C316.0645 -224.127 L311.8887 -228.3047 311.083 -234.2686 315.2588 -238.4473 c319.4365 -242.623 325.4014 -241.8174 329.5791 -237.6406 C341.7568 -225.4629 L345.9316 -221.2871 346.7373 -215.3193 342.5625 -211.1445 cf0 D0 g326.4863 -236.4512 m323.917 -239.0205 319.749 -239.0215 317.1777 -236.4502 c314.6074 -233.8789 314.6084 -229.7109 317.1777 -227.1406 c319.748 -224.5713 323.917 -224.5703 326.4893 -227.1406 c329.0566 -229.7109 329.0566 -233.8799 326.4863 -236.4512 cf0 g333.5654 -221.9414 m332.6494 -221.9941 331.8604 -221.2969 331.8086 -220.3789 c331.7568 -219.4609 332.4551 -218.6729 333.3701 -218.6211 c334.2871 -218.5664 335.0771 -219.2656 335.1289 -220.1836 c335.1836 -221.1006 334.4844 -221.8867 333.5654 -221.9414 cf0 g333.5664 -216.6299 m332.6484 -216.6836 331.8604 -215.9844 331.8076 -215.0684 c331.7568 -214.1494 332.4531 -213.3633 333.3701 -213.3086 c334.2881 -213.2539 335.0762 -213.9551 335.1289 -214.8711 c335.1846 -215.7881 334.4824 -216.5762 333.5664 -216.6299 cf0 g339.1963 -213.3066 m340.1133 -213.3066 340.8594 -214.0518 340.8594 -214.9707 c340.8623 -215.8887 340.1133 -216.6338 339.1963 -216.6328 c338.2764 -216.6348 337.5332 -215.8887 337.5352 -214.9717 c337.5332 -214.0508 338.2773 -213.3066 339.1963 -213.3066 cf0 g339.1963 -221.9453 m338.2773 -221.9453 337.5332 -221.2012 337.5332 -220.2832 c337.5322 -219.3633 338.2783 -218.6172 339.1953 -218.6191 c340.1152 -218.6172 340.8613 -219.3613 340.8613 -220.2813 c340.8613 -221.2012 340.1152 -221.9453 339.1963 -221.9453 cfU1 D324.6699 -228.9395 m324.2158 -228.4844 323.4795 -228.4844 323.0254 -228.9395 C321.875 -230.0898 L320.7246 -228.9395 L320.2705 -228.4844 319.5342 -228.4844 319.0801 -228.9395 c318.626 -229.3926 318.625 -230.1299 319.0801 -230.584 C320.2305 -231.7344 L319.082 -232.8828 L318.627 -233.3369 318.6279 -234.0732 319.082 -234.5273 c319.5361 -234.9824 320.2725 -234.9824 320.7266 -234.5273 C321.875 -233.3789 L323.0234 -234.5283 L323.4775 -234.9824 324.2139 -234.9824 324.668 -234.5293 c325.1221 -234.0742 325.123 -233.3379 324.668 -232.8838 C323.5195 -231.7344 L324.6699 -230.584 L325.124 -230.1299 325.124 -229.3936 324.6699 -228.9395 cBb1 (New Gradient Swatch 1) 328.9102 -241.2051 90 32.8193 1 0 0 1 0 0 Bg-0.000001 32.8193 39.6543 0.000002 309.083 -241.2051 Xm-0.000364 8334.2031 39.6543 0.000002 309.083 -8575.4082 Bc-0.000001 26.2555 39.6543 0.000002 309.083 -241.2051 Bm0 6.56387 39.6543 0.000002 309.083 -214.9492 Bm-0.000364 8334.2031 39.6543 0.000002 309.083 -208.3857 Bcf0 BB*U*u0 g340.373 -144.5552 m340.373 -123.0059 L340.373 -120.1484 338.0566 -117.832 335.1992 -117.832 C320.9609 -117.832 L318.1035 -117.832 315.7871 -120.1484 315.7871 -123.0059 C315.7871 -144.5552 L315.7871 -147.4116 318.1035 -149.728 320.9609 -149.728 C335.1992 -149.728 L338.0566 -149.728 340.373 -147.4116 340.373 -144.5552 Cf0 D0 g323.4863 -145.0796 m323.752 -145.3535 323.9268 -145.7109 323.9268 -146.1255 c323.9268 -146.9561 323.2539 -147.6367 322.4238 -147.6367 c321.5938 -147.6367 320.9121 -147.1958 320.9121 -146.4072 c320.9121 -147.1963 320.2324 -147.6367 319.4023 -147.6367 c318.5713 -147.6367 317.8984 -146.9561 317.8984 -146.1255 c317.8984 -145.7275 318.0566 -145.3535 318.3223 -145.0796 c318.5957 -144.7974 320.3154 -143.6514 320.9121 -142.2979 C321.5605 -143.6514 322.4238 -144.0005 323.4863 -145.0796 cf0 g333.8926 -133.3496 m334.4922 -133.9683 334.8867 -134.7744 334.8867 -135.7114 c334.8867 -137.5874 333.3672 -139.1245 331.4932 -139.1245 c329.6172 -139.1245 328.0801 -138.1289 328.0801 -136.3477 c328.0801 -138.1294 326.543 -139.1245 324.667 -139.1245 c322.793 -139.1245 321.2744 -137.5874 321.2744 -135.7114 c321.2744 -134.812 321.6309 -133.9683 322.2305 -133.3496 c322.8486 -132.7124 326.7305 -130.1245 328.0801 -127.0684 C329.542 -130.1245 331.4932 -130.9121 333.8926 -133.3496 cf338.2256 -121.5771 m338.2256 -121.9761 338.0684 -122.3496 337.8027 -122.623 c337.5283 -122.9063 335.8086 -124.0522 335.2119 -125.4053 C334.5645 -124.0522 333.7012 -123.7031 332.6387 -122.6235 c332.3721 -122.3496 332.1973 -121.9927 332.1973 -121.5771 c332.1973 -120.7476 332.8701 -120.0664 333.7002 -120.0664 c334.5303 -120.0659 335.2119 -120.5073 335.2119 -121.2959 c335.2109 -120.5073 335.8926 -120.0664 336.7227 -120.0664 c337.5527 -120.0664 338.2256 -120.7476 338.2256 -121.5771 cBb1 (New Gradient Swatch 1) 328.0801 -149.728 90 31.896 1 0 0 1 0 0 Bg-0.000001 31.896 28.5859 0.000001 313.7871 -149.728 Xm-0.000364 8331.9551 28.5859 0.000001 313.7871 -8481.6836 Bc-0.000001 25.5168 28.5859 0.000001 313.7871 -149.728 Bm0 6.3792 28.5859 0.000001 313.7871 -124.2114 Bm-0.000364 8331.9551 28.5859 0.000001 313.7871 -117.832 Bcf0 BB*U0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa200.0303 -139.2427 m200.0254 -139.3823 L200.0264 -139.3604 200.0303 -139.2446 200.0303 -139.2427 Cf*u1 D0 g202.1182 -136.8057 m202.2148 -130.5605 198.2939 -128.6738 Y195.8262 -127.3677 196.3574 -129.4478 Y198.1504 -132.4487 198.0039 -134.5781 Y198.0039 -138.3057 191.3242 -140.7256 Y191.4219 -129.6426 191.3242 -125.8184 v191.2275 -121.9946 189.0498 -117.832 183.3867 -117.832 c177.7251 -117.832 178.0635 -122.2847 Y178.0635 -129.8838 187.9365 -127.7061 Y187.9365 -150.0664 L189.4863 -151.6152 191.0337 -150.1143 Y191.7119 -148.1787 192.4863 -147.6465 Y202.6494 -141.9834 202.1182 -136.8057 Yf0 D186.1221 -125.5737 m186.1226 -125.9878 185.7871 -126.3242 185.373 -126.3247 c183.4404 -126.3276 181.9839 -125.9443 181.0444 -125.1855 c180.1655 -124.4756 179.7197 -123.3716 179.7197 -121.9038 c179.7095 -121.4897 180.0352 -121.0962 180.4497 -121.0859 c180.8638 -121.0757 181.2061 -121.3535 181.2168 -121.7676 C181.2197 -121.8853 L181.2197 -122.9102 181.4707 -123.6016 181.9868 -124.0186 c182.6426 -124.5483 183.813 -124.8271 185.3711 -124.8247 c185.7852 -124.8242 186.1216 -125.1592 186.1221 -125.5737 cBb1 (New Gradient Swatch 1) 190.0913 -150.7676 90 32.9355 1 0 0 1 0 0 Bg-0.000001 32.9355 28.9248 0.000001 175.7251 -150.7676 Xm-0.000358 8194.8145 28.9248 0.000001 175.7256 -8345.582 Bc-0.000001 26.3484 28.9248 0.000001 175.7251 -150.7676 Bm0 6.58711 28.9248 0.000001 175.7251 -124.4189 Bm-0.000358 8194.8145 28.9248 0.000001 175.7251 -117.832 Bcf0 BB*U*u1 D0 g328.8584 -325.3818 m328.6436 -325.168 328.3584 -325.082 328.0791 -325.1025 C327.7998 -325.082 327.5146 -325.168 327.3018 -325.3818 C319.999 -332.6836 L319.6084 -333.0742 319.6084 -333.707 319.999 -334.0977 c320.3896 -334.4883 321.0225 -334.4883 321.4131 -334.0977 C328.0791 -327.4316 L334.7451 -334.0977 L335.1357 -334.4883 335.7686 -334.4883 336.1592 -334.0977 c336.5498 -333.707 336.5498 -333.0742 336.1592 -332.6836 C328.8584 -325.3818 Lfu0 g341.0439 -299.5371 m315.1162 -299.5371 L312.9619 -299.5371 311.2158 -301.2852 311.2158 -303.4404 C311.2158 -319.6924 L311.2158 -321.8457 312.9619 -323.5938 315.1162 -323.5938 C341.0439 -323.5938 L343.1982 -323.5938 344.9443 -321.8457 344.9443 -319.6924 C344.9443 -303.4404 L344.9443 -301.2852 343.1982 -299.5371 341.0439 -299.5371 Cf0 D0 g335.1162 -318.7168 m335.1162 -319.7021 334.3154 -320.5039 333.3311 -320.5039 C316.2803 -320.5039 L315.2959 -320.5039 314.4932 -319.7021 314.4932 -318.7168 C314.4932 -304.415 L314.4932 -303.4297 315.2959 -302.627 316.2803 -302.627 C333.3311 -302.627 L334.3154 -302.627 335.1162 -303.4297 335.1162 -304.415 C335.1162 -318.7168 Lf0 g340.2178 -313.4941 m339.1729 -313.4941 338.3311 -312.6475 338.3311 -311.6055 c338.3311 -310.5635 339.1729 -309.7148 340.2197 -309.7148 c341.2607 -309.7188 342.1064 -310.5635 342.1064 -311.6055 c342.1064 -312.6475 341.2607 -313.4941 340.2178 -313.4941 cf340.2178 -307.3516 m339.1729 -307.3516 338.3311 -306.5049 338.3311 -305.4648 c338.3311 -304.4209 339.1729 -303.5742 340.2197 -303.5742 c341.2607 -303.5762 342.1064 -304.4209 342.1064 -305.4648 c342.1064 -306.5049 341.2607 -307.3516 340.2178 -307.3516 cBb1 (New Gradient Swatch 1) 328.0801 -334.3906 90 34.8535 1 0 0 1 0 0 Bg-0.000002 34.8535 37.7285 0.000002 309.2158 -334.3906 Xm-0.000364 8332.0527 37.7285 0.000002 309.2158 -8666.4434 Bc-0.000001 27.8828 37.7285 0.000002 309.2158 -334.3906 Bm0 6.9707 37.7285 0.000002 309.2158 -306.5078 Bm-0.000364 8332.0527 37.7285 0.000002 309.2158 -299.5371 Bcf0 BBU*U*u1 D0 g267.3994 -227.4258 m267.3994 -221.248 L267.3994 -216.3184 263.3535 -212.3086 258.3799 -212.3086 c253.4053 -212.3086 249.3574 -216.3184 249.3574 -221.248 C249.3574 -227.4258 L249.3574 -227.9785 249.8047 -228.4258 250.3574 -228.4258 c250.9102 -228.4258 251.3574 -227.9785 251.3574 -227.4258 C251.3574 -221.248 L251.3574 -217.4219 254.5078 -214.3086 258.3799 -214.3086 c262.25 -214.3086 265.3994 -217.4219 265.3994 -221.248 C265.3994 -227.4258 L265.3994 -227.9785 265.8467 -228.4258 266.3994 -228.4258 c266.9521 -228.4258 267.3994 -227.9785 267.3994 -227.4258 Cf0 g258.3779 -211.082 m260.7881 -211.082 262.9512 -210.043 264.4619 -208.3965 C252.2939 -208.3965 L253.8047 -210.043 255.9678 -211.082 258.3779 -211.082 cfu0 g253.0527 -221.5449 m253.0527 -234.7441 L253.0527 -237.6533 255.4697 -240.0244 258.3809 -240.0244 c261.2861 -240.0244 263.7031 -237.6533 263.7031 -234.7441 C263.7031 -221.5449 L263.7031 -218.6816 261.2861 -216.3105 258.3809 -216.3105 c255.4697 -216.3105 253.0527 -218.6816 253.0527 -221.5449 Cf0 D254.8906 -230.9141 m254.8906 -230.2676 255.4141 -229.7422 256.0625 -229.7422 c256.71 -229.7422 257.2324 -230.2676 257.2324 -230.9141 C257.2324 -234.2617 L257.2324 -234.9082 256.71 -235.4336 256.0625 -235.4336 c255.4141 -235.4336 254.8906 -234.9082 254.8906 -234.2617 C254.8906 -230.9141 LBb1 (Unnamed gradient 15) 258.3789 -240.0244 90 31.6279 1 0 0 1 0 0 Bg-0.000001 31.6279 22.042 0.000001 247.3574 -240.0244 Xm-0.000361 8262.2539 22.042 0.000001 247.3574 -8502.2773 Bc-0.000001 25.3023 22.042 0.000001 247.3574 -240.0244 Bm0 6.32559 22.042 0.000001 247.3574 -214.7217 Bm-0.000361 8262.2539 22.042 0.000001 247.3574 -208.3965 Bcf0 BBU*U*uu1 D0 g135.3521 -308.8389 m133.1963 -306.6826 L132.0923 -306.9785 130.8682 -306.708 130.0015 -305.8408 c129.1372 -304.9756 128.8667 -303.752 129.1626 -302.6484 C127.3022 -300.7881 L125.6333 -299.1191 122.9312 -299.1191 121.2632 -300.7881 C105.1606 -316.8887 L103.4946 -318.5566 103.4946 -321.2598 105.1616 -322.9268 C106.8491 -324.6143 L108.0747 -324.04 109.5752 -324.2471 110.5864 -325.2588 c111.5977 -326.2705 111.8042 -327.7705 111.23 -328.9961 C113.2124 -330.9785 L114.8794 -332.6465 117.5825 -332.6455 119.2505 -330.9795 C135.3521 -314.876 L137.019 -313.208 137.019 -310.5059 135.3521 -308.8389 Cf0 D0 g131.2617 -314.7998 m119.1733 -326.8896 L118.3213 -327.7383 116.8643 -327.6621 115.9243 -326.7217 C109.4175 -320.2158 L108.9854 -319.7842 108.7188 -319.2275 108.6655 -318.6484 c108.6597 -318.5791 108.6563 -318.5098 108.6563 -318.4414 c108.6563 -317.8789 108.8672 -317.3506 109.2505 -316.9678 C121.3423 -304.875 L121.3408 -304.876 L121.7227 -304.4932 122.2441 -304.2813 122.8096 -304.2813 c123.4565 -304.2803 124.1055 -304.5576 124.5903 -305.043 C131.0972 -311.5479 L131.582 -312.0332 131.8589 -312.6826 131.8579 -313.3291 c131.8569 -313.8955 131.6455 -314.417 131.2617 -314.7998 CfU1 D123.1763 -306.457 m122.9966 -306.2773 122.8013 -306.2646 122.7559 -306.2891 C122.7554 -306.29 110.6646 -318.3818 Y110.6592 -318.3906 110.6553 -318.4092 110.6553 -318.4346 c110.6553 -318.5146 110.6924 -318.6621 110.8315 -318.8018 C117.3384 -325.3076 L117.5244 -325.4932 117.7236 -325.4971 117.7617 -325.4736 C129.8491 -313.3838 L129.875 -313.3398 129.8643 -313.1445 129.6826 -312.9609 C123.1763 -306.457 LBb1 (New Gradient Swatch 1) 120.2563 -332.2295 90 32.6934 1 0 0 1 0 0 Bg-0.000001 32.6934 37.5244 0.000002 101.4946 -332.2295 Xm-0.000355 8124.5483 37.5244 0.000002 101.4951 -8456.7773 Bc-0.000001 26.1547 37.5244 0.000002 101.4946 -332.2295 Bm0 6.53867 37.5244 0.000002 101.4946 -306.0752 Bm-0.000355 8124.5483 37.5244 0.000002 101.4946 -299.5361 Bcf0 BB*U*u0 g67.9414 -302.7568 m63.0273 -305.5957 L63.0273 -315.8457 L67.9414 -318.6846 L70.4453 -320.1299 72.4941 -318.9463 72.4941 -316.0557 C72.4941 -305.3848 L72.4941 -302.4951 70.4453 -301.3115 67.9414 -302.7568 Cf0 g48.0889 -326.8799 m36.6895 -326.8799 L35.585 -326.8799 34.6895 -327.7754 34.6895 -328.8799 c34.6895 -329.9844 35.585 -330.8799 36.6895 -330.8799 C48.0889 -330.8799 L51.9971 -330.8799 55.1855 -327.7754 55.3379 -323.9053 C51.3232 -323.9053 L51.1748 -325.5684 49.79 -326.8799 48.0889 -326.8799 Cfu0 g55.7637 -299.5361 m36.4697 -299.5361 L33.5625 -299.5361 31.2061 -301.8936 31.2061 -304.7998 C31.2061 -316.6416 L31.2061 -319.5479 33.5625 -321.9053 36.4697 -321.9053 C55.7637 -321.9053 L58.6699 -321.9053 61.0273 -319.5479 61.0273 -316.6416 C61.0273 -304.7998 L61.0273 -301.8936 58.6699 -299.5361 55.7637 -299.5361 Cf0 D54.0039 -314.1689 m38.2295 -314.1689 L37.2803 -314.1689 36.5107 -313.3994 36.5107 -312.4502 c36.5107 -311.501 37.2803 -310.7314 38.2295 -310.7314 C54.0039 -310.7314 L54.9531 -310.7314 55.7227 -311.501 55.7227 -312.4502 c55.7227 -313.3994 54.9531 -314.1689 54.0039 -314.1689 CBb1 (New Gradient Swatch 1) 51.8501 -330.8799 90 31.3438 1 0 0 1 0 0 Bg-0.000001 31.3438 45.2881 0.000002 29.2061 -330.8799 Xm-0.000352 8055.7256 45.2881 0.000002 29.2065 -8386.6055 Bc-0.000001 25.075 45.2881 0.000002 29.2061 -330.8799 Bm0 6.26875 45.2881 0.000002 29.2061 -305.8047 Bm-0.000352 8055.7256 45.2881 0.000002 29.2061 -299.5361 Bcf0 BBU*U*uu1 D0 g204.0869 -303.5469 m204.0889 -301.3389 202.2852 -299.5371 200.0791 -299.5361 C180.0981 -299.5371 L177.894 -299.5361 176.0903 -301.3428 176.0913 -303.5469 C176.0913 -327.4707 L176.0894 -329.6768 177.894 -331.4795 180.0981 -331.4805 C200.0811 -331.4805 L202.2861 -331.4805 204.0898 -329.6768 204.0918 -327.4697 C204.0869 -303.5469 Lf0 D0 g178.1807 -302.7334 m180.4209 -302.7334 L180.4209 -305.3789 L178.1787 -305.3789 L178.1807 -302.7334 Lf0 g178.1787 -327.9619 m178.1797 -325.3154 L180.4189 -325.3154 L180.4209 -327.9609 L178.1787 -327.9619 Lf0 g180.4219 -322.3154 m178.1807 -322.3154 L178.1812 -319.6709 L180.4219 -319.6709 L180.4219 -322.3154 Lf0 g178.1797 -314.0254 m180.4189 -314.0254 L180.4209 -316.6709 L178.1807 -316.6719 L178.1797 -314.0254 Lf0 g178.1797 -311.0244 m178.1807 -308.3789 L180.4209 -308.3789 L180.4219 -311.0264 L178.1797 -311.0244 Lf0 g197.3809 -328.1787 m195.6738 -328.1787 184.5083 -328.1777 182.8013 -328.1777 C182.7974 -327.1094 182.7974 -317.7422 182.7974 -316.6729 C184.5083 -316.6738 195.6738 -316.6729 197.3809 -316.6719 C197.3809 -328.1787 Lf0 g182.7983 -314.0059 m182.7974 -312.9375 182.7974 -303.5703 182.7974 -302.502 C184.5083 -302.5 195.6729 -302.5 197.3809 -302.502 C197.3809 -303.5703 197.3809 -312.9375 197.3818 -314.0068 C195.6738 -314.0059 184.5073 -314.0068 182.7983 -314.0059 Cf0 g202.0313 -327.9619 m199.7881 -327.9619 L199.7881 -325.3125 L202.0313 -325.3145 L202.0313 -327.9619 Lf0 g202.0313 -322.3135 m199.7891 -322.3135 L199.7881 -319.6689 L202.0313 -319.6689 L202.0313 -322.3135 Lf0 g202.0313 -316.6699 m199.7891 -316.6699 L199.7881 -314.0234 L202.0332 -314.0234 L202.0313 -316.6699 Lf0 g202.0313 -311.0244 m199.791 -311.0244 L199.7881 -308.3799 L202.0332 -308.3789 L202.0313 -311.0244 Lf202.0293 -305.3789 m199.7891 -305.3799 L199.7881 -302.7334 L202.0332 -302.7334 L202.0293 -305.3789 LBb1 (New Gradient Swatch 1) 190.0918 -331.4805 90 31.9443 1 0 0 1 0 0 Bg-0.000001 31.9443 32.0029 0.000001 174.0894 -331.4805 Xm-0.000358 8193.9668 32.0029 0.000001 174.0898 -8525.4473 Bc-0.000001 25.5555 32.0029 0.000001 174.0894 -331.4805 Bm0 6.38887 32.0029 0.000001 174.0894 -305.9248 Bm-0.000358 8193.9668 32.0029 0.000001 174.0894 -299.5361 Bcf0 BBU*U*u1 D0 g255.1357 -321.5264 m255.8145 -322.2646 256.7139 -322.7969 257.7314 -323.0137 C257.7246 -323.0645 257.7021 -323.1094 257.7021 -323.1611 c257.7021 -327.7432 251.7783 -331.4707 244.4971 -331.4707 c243.9443 -331.4707 243.4971 -331.918 243.4971 -332.4707 c243.4971 -333.0234 243.9443 -333.4707 244.4971 -333.4707 c252.8809 -333.4707 259.7021 -328.8457 259.7021 -323.1611 c259.7021 -323.1143 259.6816 -323.0742 259.6758 -323.0293 C260.7314 -322.8271 261.6689 -322.2881 262.3682 -321.5264 C255.1357 -321.5264 Lfu0 g275.0303 -299.6299 m272.9834 -299.2617 271.626 -299.96 270.3174 -302.0186 C268.2725 -305.4434 L265.5859 -304.4463 262.1221 -303.8438 258.3359 -303.8438 c254.584 -303.8438 251.1455 -304.4346 248.4697 -305.416 C246.4404 -302.0186 L245.1338 -299.96 243.7764 -299.2617 241.7275 -299.6299 c239.6797 -299.998 238.2471 -301.5654 238.5283 -303.1309 C242.4189 -317.9092 L242.8818 -320.4844 245.9893 -322.0801 249.3574 -321.4756 c250.876 -321.2021 252.1865 -320.5254 253.1279 -319.6318 C263.6309 -319.6318 L264.5723 -320.5254 265.8818 -321.2021 267.4014 -321.4756 c270.7705 -322.0801 273.877 -320.4844 274.3398 -317.9092 C278.2295 -303.1309 L278.5117 -301.5654 277.0791 -299.998 275.0303 -299.6299 cf0 D0 g252.417 -314.3145 m250.7051 -314.3145 L250.7051 -316.0264 L250.7051 -316.8545 250.0332 -317.5264 249.2051 -317.5264 c248.377 -317.5264 247.7051 -316.8545 247.7051 -316.0264 C247.7051 -314.3145 L245.9932 -314.3145 L245.165 -314.3145 244.4932 -313.6426 244.4932 -312.8145 c244.4932 -311.9863 245.165 -311.3145 245.9932 -311.3145 C247.7051 -311.3145 L247.7051 -309.6035 L247.7051 -308.7754 248.377 -308.1035 249.2051 -308.1035 c250.0332 -308.1035 250.7051 -308.7754 250.7051 -309.6035 C250.7051 -311.3145 L252.417 -311.3145 L253.2451 -311.3145 253.917 -311.9863 253.917 -312.8145 c253.917 -313.6426 253.2451 -314.3145 252.417 -314.3145 Cf0 g264.0977 -313.2227 m263.0713 -313.2246 262.2373 -312.3896 262.2393 -311.3613 c262.2373 -310.3359 263.0713 -309.5039 264.0967 -309.5039 c265.124 -309.5039 265.957 -310.3359 265.9561 -311.3613 c265.957 -312.3896 265.124 -313.2227 264.0977 -313.2227 cf0 g267.6094 -317.5645 m266.583 -317.5664 265.749 -316.7314 265.751 -315.7051 c265.749 -314.6777 266.583 -313.8457 267.6094 -313.8477 c268.6377 -313.8457 269.4688 -314.6777 269.4688 -315.7051 c269.4688 -316.7314 268.6377 -317.5645 267.6094 -317.5645 cf270.4141 -312.5781 m269.3896 -312.6396 268.5088 -311.8555 268.4502 -310.8311 c268.3896 -309.8037 269.1689 -308.9258 270.1943 -308.8662 c271.2217 -308.8066 272.1025 -309.5879 272.1621 -310.6123 c272.2217 -311.6367 271.4395 -312.5195 270.4141 -312.5781 cBb1 (New Gradient Swatch 1) 258.3789 -333.4707 90 33.9346 1 0 0 1 0 0 Bg-0.000001 33.9346 44.2646 0.000002 236.2471 -333.4707 Xm-0.000361 8262.2539 44.2646 0.000002 236.2471 -8595.7246 Bc-0.000001 27.1477 44.2646 0.000002 236.2471 -333.4707 Bm0 6.78691 44.2646 0.000002 236.2471 -306.3232 Bm-0.000361 8262.2539 44.2646 0.000002 236.2471 -299.5361 Bcf0 BBU*U*u1 D0 g139.0137 -230.3105 m138.291 -229.582 137.1143 -229.582 136.3975 -230.3105 c127.4941 -239.2051 113.0195 -239.2051 104.1226 -230.3105 c103.3994 -229.582 102.2197 -229.582 101.5 -230.3105 c100.7769 -231.0293 100.7769 -232.2051 101.5 -232.9258 c111.8491 -243.2695 128.6709 -243.2695 139.0137 -232.9219 c139.7373 -232.2031 139.7373 -231.0293 139.0137 -230.3105 cf0 g133.54 -227.4492 m134.2607 -226.7246 134.2607 -225.5547 133.54 -224.8311 c132.8115 -224.1045 131.6377 -224.1045 130.915 -224.8311 c125.0381 -230.707 115.4722 -230.707 109.5967 -224.8311 c108.8735 -224.1045 107.6973 -224.1045 106.9712 -224.8311 c106.2568 -225.5547 106.2568 -226.7246 106.9712 -227.4453 c114.2964 -234.7715 126.2148 -234.7715 133.54 -227.4492 cf0 g120.2612 -224.6816 m123.1279 -224.6816 125.8252 -223.5625 127.8389 -221.542 c128.1572 -221.2275 128.3291 -220.8076 128.3291 -220.3662 c128.3291 -219.9248 128.1572 -219.5029 127.8447 -219.1904 c127.1963 -218.542 126.1377 -218.542 125.4893 -219.1904 c124.0908 -220.584 122.2383 -221.3545 120.2612 -221.3545 c118.2783 -221.3545 116.4224 -220.584 115.0332 -219.1904 c114.7153 -218.874 114.2993 -218.7031 113.8511 -218.7031 c113.4014 -218.7031 112.9966 -218.874 112.6724 -219.1904 c112.3628 -219.5029 112.1846 -219.9248 112.1846 -220.3643 C112.1846 -220.3662 L112.1846 -220.8076 112.3628 -221.2275 112.6724 -221.542 c114.6978 -223.5625 117.395 -224.6816 120.2612 -224.6816 cfu0 g120.2578 -217.0176 m122.6377 -217.0176 124.5654 -215.0869 124.5654 -212.7012 c124.5654 -210.3271 122.6377 -208.3975 120.2578 -208.3975 c117.876 -208.3975 115.9453 -210.3271 115.9453 -212.7012 c115.9453 -215.0869 117.876 -217.0176 120.2578 -217.0176 cf0 D118.8682 -211.792 m119.8569 -211.792 120.6577 -212.5947 120.6577 -213.5811 c120.6577 -214.5713 119.8569 -215.373 118.8682 -215.373 c117.8789 -215.373 117.0771 -214.5713 117.0771 -213.5811 c117.0771 -212.5947 117.8789 -211.792 118.8682 -211.792 cBb1 (New Gradient Swatch 1) 120.2573 -240.6836 90 32.2861 1 0 0 1 0 0 Bg-0.000001 32.2861 42.9604 0.000002 98.7769 -240.6836 Xm-0.000355 8126.7183 42.9604 0.000002 98.7773 -8367.4023 Bc-0.000001 25.8289 42.9604 0.000002 98.7769 -240.6836 Bm0 6.45723 42.9604 0.000002 98.7769 -214.8545 Bm-0.000355 8126.7183 42.9604 0.000002 98.7769 -208.3975 Bcf0 BBU*U*u1 D0 g264.2402 -132.7969 m267.418 -132.7969 269.9941 -130.2217 269.9941 -127.0439 c269.9941 -123.8672 267.418 -121.292 264.2402 -121.2881 c261.0645 -121.2881 258.4863 -123.8672 258.4863 -127.0439 c258.4863 -130.2217 261.0645 -132.7969 264.2402 -132.7969 cf0 g263.7148 -145.4297 m251.6855 -149.9648 L251.3398 -149.6592 250.8906 -149.4678 250.3926 -149.4678 c249.3145 -149.4678 248.4395 -150.3428 248.4395 -151.4238 c248.4395 -152.5039 249.3145 -153.3799 250.3926 -153.3799 c251.4746 -153.3799 252.3516 -152.5039 252.3516 -151.4238 c252.3516 -151.3887 252.3418 -151.3555 252.3398 -151.3203 C267.9648 -145.4297 L263.7148 -145.4297 Lfu0 g271.4141 -117.7021 m245.6855 -117.7021 L243.3809 -117.7021 241.5137 -119.5713 241.5137 -121.874 C241.5137 -139.2578 L241.5137 -141.5625 243.3809 -143.4297 245.6855 -143.4297 C271.4141 -143.4297 L273.7168 -143.4297 275.5859 -141.5625 275.5859 -139.2578 C275.5859 -121.874 L275.5859 -119.5713 273.7168 -117.7021 271.4141 -117.7021 Cf0 D0 g264.2402 -119.2881 m268.5176 -119.293 271.9941 -122.7725 271.9941 -127.0439 c271.9941 -131.3193 268.5156 -134.7969 264.2402 -134.7969 c259.9648 -134.7969 256.4863 -131.3193 256.4863 -127.0439 c256.4863 -122.7676 259.9648 -119.2881 264.2402 -119.2881 cf0 g251.5762 -125.0225 m252.6875 -125.0244 253.5918 -125.9277 253.5918 -127.043 c253.5918 -128.1572 252.6875 -129.0615 251.5723 -129.0615 c250.457 -129.0615 249.5566 -128.1572 249.5566 -127.043 c249.5566 -125.9277 250.457 -125.0225 251.5762 -125.0225 cf270.9629 -141.0391 m246.6211 -141.0391 L245.1504 -141.0391 243.957 -139.8457 243.957 -138.373 c243.957 -136.9023 245.1504 -135.71 246.6211 -135.71 C253.3242 -135.71 L253.3242 -138.5918 L253.3242 -139.2676 253.7715 -139.7969 254.3438 -139.7969 c254.918 -139.7969 255.3652 -139.2676 255.3652 -138.5918 C255.3652 -135.71 L270.9629 -135.71 L272.4336 -135.71 273.627 -136.9023 273.627 -138.373 c273.627 -139.8457 272.4336 -141.0391 270.9629 -141.0391 CBb1 (New Gradient Swatch 1) 258.5498 -153.3799 90 35.6777 1 0 0 1 0 0 Bg-0.000002 35.6777 38.0723 0.000002 239.5137 -153.3799 Xm-0.000361 8262.4248 38.0723 0.000002 239.5137 -8415.8047 Bc-0.000001 28.5422 38.0723 0.000002 239.5137 -153.3799 Bm0 7.13555 38.0723 0.000002 239.5137 -124.8379 Bm-0.000361 8262.4248 38.0723 0.000002 239.5137 -117.7021 Bcf0 BBU*U*uu1 D0 g67.6855 -225.1621 m63.5249 -221.1064 62.3457 -219.9561 V62.6245 -218.3281 63.606 -212.6055 63.6064 -212.6025 c63.647 -212.3643 63.667 -212.1289 63.667 -211.8984 c63.667 -210.7412 63.1641 -209.7061 62.2539 -209.0449 c61.1621 -208.2529 59.7407 -208.1836 58.4492 -208.8613 C53.2964 -211.5723 51.8501 -212.334 V50.3892 -211.5654 45.2495 -208.8613 45.2476 -208.8604 c43.9575 -208.1826 42.5352 -208.2529 41.4434 -209.0469 c40.5347 -209.708 40.0327 -210.7412 40.0327 -211.8965 c40.0327 -212.1289 40.0532 -212.3662 40.0942 -212.6055 C41.0752 -218.3262 41.355 -219.957 V40.1729 -221.1084 36.0146 -225.1621 36.0137 -225.1631 c35.2524 -225.9063 34.8481 -226.8389 34.8481 -227.7881 c34.8481 -228.1387 34.9033 -228.4902 35.0156 -228.8359 c35.4321 -230.1191 36.541 -231.0107 37.9844 -231.2217 C44.5684 -232.1777 45.3628 -232.293 V45.7192 -233.0156 48.6343 -238.918 48.6636 -238.9766 c49.3071 -240.2852 50.4985 -241.0684 51.8511 -241.0684 c53.2036 -241.0684 54.3955 -240.2852 55.0366 -238.9805 C57.6074 -233.7715 58.3364 -232.293 V59.9707 -232.0566 65.7192 -231.2217 65.7227 -231.2207 c67.1616 -231.0098 68.269 -230.1191 68.6855 -228.8359 c68.7974 -228.4902 68.8525 -228.1387 68.8525 -227.7891 c68.8525 -226.8398 68.4478 -225.9063 67.6855 -225.1621 Cf0 D0 g66.7832 -228.2188 m66.6045 -228.7695 66.1123 -229.1426 65.4331 -229.2422 C65.4312 -229.2422 57.5952 -230.3809 Y57.311 -230.4219 56.8726 -230.7402 56.7446 -231 C53.2432 -238.0957 L52.9399 -238.7129 52.4321 -239.0684 51.8511 -239.0684 c51.27 -239.0684 50.7622 -238.7129 50.4585 -238.0938 C46.9546 -231 L46.8271 -230.7393 46.3892 -230.4219 46.1016 -230.3799 C38.272 -229.2422 L37.5898 -229.1426 37.0967 -228.7695 36.9175 -228.2178 c36.7388 -227.666 36.9175 -227.0752 37.4106 -226.5947 C43.0786 -221.0693 L43.2852 -220.8672 43.4526 -220.3545 43.4038 -220.0713 C43.4033 -220.0703 42.0654 -212.2676 Y41.9492 -211.5898 42.1509 -211.0049 42.6201 -210.6641 c43.0889 -210.3232 43.708 -210.3105 44.3179 -210.6309 C44.3184 -210.6318 51.3242 -214.3174 Y51.5781 -214.4492 52.1221 -214.4492 52.3794 -214.3154 C59.3804 -210.6318 L59.9902 -210.3115 60.6089 -210.3232 61.0776 -210.6631 c61.5464 -211.0029 61.7495 -211.5869 61.6348 -212.2656 C61.6348 -212.2676 60.2969 -220.0703 Y60.2485 -220.3535 60.416 -220.8672 60.6226 -221.0693 C66.2896 -226.5947 L66.7822 -227.0752 66.9619 -227.667 66.7832 -228.2188 cfU1 D0 g48.666 -238.9824 m48.6636 -238.9766 L48.6631 -238.9766 48.6631 -238.9766 Y48.666 -238.9824 Lf64.6621 -227.1367 m59.3784 -221.9844 L58.9668 -221.583 58.71 -220.7939 58.8066 -220.2285 C60.0537 -212.9531 L60.1504 -212.3867 59.8135 -212.1436 59.3052 -212.4102 C52.7744 -215.8467 L52.2651 -216.1123 51.4341 -216.1123 50.9258 -215.8467 C44.394 -212.4102 L43.8857 -212.1436 43.5488 -212.3867 43.6465 -212.9531 C44.894 -220.2285 L44.9912 -220.7939 44.7344 -221.583 44.3228 -221.9844 C39.0381 -227.1367 L38.6274 -227.5371 38.7568 -227.9316 39.3242 -228.0156 C46.6265 -229.0762 L47.1948 -229.1602 47.8687 -229.6465 48.1216 -230.1621 C51.3892 -236.7793 L51.6426 -237.2949 52.0596 -237.2949 52.3125 -236.7793 C55.5776 -230.1621 L55.8325 -229.6465 56.5063 -229.1602 57.0728 -229.0762 C64.3789 -228.0156 L64.9443 -227.9316 65.0728 -227.5371 64.6621 -227.1367 CBb1 (New Gradient Swatch 1) 51.8501 -241.0684 90 32.6709 1 0 0 1 0 0 Bg-0.000001 32.6709 38.0044 0.000002 32.8481 -241.0684 Xm-0.000352 8055.7251 38.0044 0.000002 32.8486 -8296.793 Bc-0.000001 26.1367 38.0044 0.000002 32.8481 -241.0684 Bm0 6.53418 38.0044 0.000002 32.8481 -214.9316 Bm-0.000352 8055.7251 38.0044 0.000002 32.8481 -208.3975 Bcf0 BB*U*uu0 g183.188 -208.3975 m175.4585 -208.3975 L172.4048 -208.3975 169.9282 -210.875 169.9282 -213.9287 C169.9282 -233.7539 L169.9282 -236.8057 172.4048 -239.2832 175.4585 -239.2832 C183.188 -239.2832 L186.2427 -239.2832 188.7192 -236.8057 188.7192 -233.7539 C188.7192 -213.9287 L188.7192 -210.875 186.2427 -208.3975 183.188 -208.3975 Cf0 D0 g186.5806 -233.7539 m186.5806 -235.6211 185.0591 -237.1436 183.188 -237.1436 C175.4585 -237.1436 L173.5884 -237.1436 172.0669 -235.6211 172.0669 -233.7539 C172.0669 -213.9287 L172.0669 -212.0586 173.5884 -210.5352 175.4585 -210.5352 C183.188 -210.5352 L185.0591 -210.5352 186.5806 -212.0586 186.5806 -213.9287 C186.5806 -233.7539 LfU1 D0 g177.6753 -242.5557 m180.9722 -242.5557 L182.2466 -242.5557 183.2808 -241.5215 183.2808 -240.248 C175.3667 -240.248 L175.3667 -241.5215 176.3999 -242.5557 177.6753 -242.5557 Cfu0 g183.188 -212.6758 m175.4585 -212.6758 L174.7661 -212.6758 174.2036 -213.2354 174.2036 -213.9287 C174.2036 -233.7539 L174.2036 -234.4434 174.7661 -235.0059 175.4585 -235.0059 C183.188 -235.0059 L183.8813 -235.0059 184.4438 -234.4434 184.4438 -233.7539 C184.4438 -213.9287 L184.4438 -213.2354 183.8813 -212.6758 183.188 -212.6758 Cf0 D0 g180.4653 -224.6465 m183.0063 -231.7617 L174.2769 -223.0332 L178.1372 -223.0332 L175.5962 -215.918 L184.3247 -224.6465 L180.4653 -224.6465 LfUu1 D0 g204.7246 -208.3975 m196.9941 -208.3975 L193.9395 -208.3975 191.4629 -210.875 191.4629 -213.9287 C191.4629 -233.7539 L191.4629 -236.8057 193.9395 -239.2832 196.9941 -239.2832 C204.7246 -239.2832 L207.7783 -239.2832 210.2549 -236.8057 210.2549 -233.7539 C210.2549 -213.9287 L210.2549 -210.875 207.7783 -208.3975 204.7246 -208.3975 Cf0 D0 g208.1162 -233.7539 m208.1162 -235.6211 206.5957 -237.1436 204.7246 -237.1436 C196.9941 -237.1436 L195.125 -237.1436 193.6016 -235.6211 193.6016 -233.7539 C193.6016 -213.9287 L193.6016 -212.0586 195.125 -210.5352 196.9941 -210.5352 C204.7246 -210.5352 L206.5957 -210.5352 208.1162 -212.0586 208.1162 -213.9287 C208.1162 -233.7539 LfU1 D0 g204.7246 -212.6758 m196.9941 -212.6758 L196.3018 -212.6758 195.7393 -213.2354 195.7393 -213.9287 C195.7393 -221.3037 L205.9795 -225.5449 L205.9795 -213.9287 L205.9795 -213.2354 205.416 -212.6758 204.7246 -212.6758 Cf199.2119 -242.5557 m202.5068 -242.5557 L203.7822 -242.5557 204.8164 -241.5215 204.8164 -240.248 C196.9023 -240.248 L196.9023 -241.5215 197.9365 -242.5557 199.2119 -242.5557 CBb1 (New Gradient Swatch 1) 190.0918 -242.5557 90 34.1582 1 0 0 1 0 0 Bg-0.000001 34.1582 44.3271 0.000002 167.9282 -242.5557 Xm-0.000358 8193.9668 44.3271 0.000002 167.9287 -8436.5234 Bc-0.000001 27.3266 44.3271 0.000002 167.9282 -242.5557 Bm0 6.83164 44.3271 0.000002 167.9282 -215.2295 Bm-0.000358 8193.9668 44.3271 0.000002 167.9282 -208.3975 Bcf0 BB*ULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 9 255 102 0 0 50 Lb(Media + Entertainment) Ln0 Au0 D0 O0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa0 J 0 j 1 w 4 M []0 d0 XR62.8701 -87.1729 m63.0371 -87.1729 63.1997 -87.1899 63.3647 -87.1978 C63.373 -87.106 63.3926 -87.0171 63.3926 -86.9229 c63.3926 -85.2661 62.0493 -83.9229 60.3926 -83.9229 C55.1152 -83.9229 L53.4585 -83.9229 52.1152 -85.2661 52.1152 -86.9229 c52.1152 -87.0083 52.1333 -87.0889 52.1406 -87.1729 C62.8701 -87.1729 Lfu*u1 D62.8701 -89.1729 m40.8306 -89.1729 L36.2749 -89.1729 32.5688 -92.8779 32.5688 -97.4346 C32.5688 -107.5039 L32.5688 -112.0596 36.2749 -115.7656 40.8306 -115.7656 C62.8701 -115.7656 L67.4238 -115.7656 71.1318 -112.0596 71.1318 -107.5039 C71.1318 -97.4346 L71.1318 -92.8779 67.4238 -89.1729 62.8701 -89.1729 Cf0 D42.5918 -96.0293 m38.8857 -96.0293 L38.1694 -96.0293 37.5889 -95.4487 37.5889 -94.7324 c37.5889 -94.0161 38.1694 -93.4355 38.8857 -93.4355 C42.5918 -93.4355 L43.3081 -93.4355 43.8887 -94.0161 43.8887 -94.7324 c43.8887 -95.4487 43.3081 -96.0293 42.5918 -96.0293 Cf54.8613 -113.7866 m48.9878 -113.7866 44.209 -109.0059 44.209 -103.1299 c44.209 -97.2544 48.9878 -92.4741 54.8613 -92.4741 c60.7402 -92.4741 65.5234 -97.2544 65.5234 -103.1299 c65.5234 -109.0059 60.7402 -113.7866 54.8613 -113.7866 cf*UU*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa54.8613 -94.9067 m50.3228 -94.9067 46.6416 -98.5879 46.6416 -103.1299 c46.6416 -107.6733 50.3228 -111.3535 54.8613 -111.3535 c59.4058 -111.3535 63.0903 -107.6733 63.0903 -103.1299 c63.0903 -98.5879 59.4058 -94.9067 54.8613 -94.9067 cf0 D51.3262 -101.626 m50.1719 -101.561 49.2905 -100.5669 49.356 -99.4072 c49.4214 -98.249 50.417 -97.3706 51.5728 -97.4355 c52.7334 -97.5049 53.6157 -98.4971 53.5459 -99.6548 c53.48 -100.8125 52.4839 -101.6948 51.3262 -101.626 cf*UU*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa128.2495 -84.4395 m112.2646 -84.4395 L110.147 -84.4395 108.4297 -86.1567 108.4297 -88.2754 C108.4297 -111.9297 L108.4297 -114.0483 110.147 -115.7656 112.2646 -115.7656 C128.2495 -115.7656 L130.3667 -115.7656 132.0845 -114.0483 132.0845 -111.9297 C132.0845 -88.2754 L132.0845 -86.1567 130.3667 -84.4395 128.2495 -84.4395 Cf0 D117.459 -109.1826 m116.7754 -109.7935 115.7246 -109.73 115.1113 -109.0435 c114.499 -108.3579 114.5645 -107.3076 115.249 -106.6968 c115.9375 -106.0859 116.9878 -106.1475 117.5981 -106.8345 c118.21 -107.5195 118.146 -108.5732 117.459 -109.1826 cf121.2158 -112.9395 m120.5288 -113.5493 119.48 -113.4854 118.8662 -112.7998 c118.2554 -112.1143 118.3188 -111.0635 119.0059 -110.4521 c119.6914 -109.8423 120.7451 -109.9028 121.354 -110.5903 c121.9644 -111.2754 121.9028 -112.3286 121.2158 -112.9395 cf121.5791 -105.0649 m120.9321 -105.7148 119.877 -105.7148 119.2275 -105.064 c118.5786 -104.415 118.5786 -103.3628 119.2285 -102.7129 c119.8784 -102.063 120.9321 -102.0615 121.582 -102.7119 c122.2324 -103.3618 122.2314 -104.4165 121.5791 -105.0649 cf125.3364 -108.8208 m124.6865 -109.4702 123.6343 -109.4707 122.9844 -108.8184 c122.335 -108.1714 122.3325 -107.1182 122.9844 -106.4692 c123.6323 -105.8198 124.689 -105.8174 125.3359 -106.4683 c125.9858 -107.1182 125.9849 -108.1724 125.3364 -108.8208 cf127.3545 -97.9404 m127.3545 -98.8374 126.6289 -99.5649 125.7305 -99.5649 C114.7852 -99.5649 L113.8877 -99.5649 113.1597 -98.8374 113.1597 -97.9404 C113.1597 -89.9165 L113.1597 -89.0186 113.8877 -88.292 114.7852 -88.292 C125.7305 -88.292 L126.6289 -88.292 127.3545 -89.0186 127.3545 -89.9165 C127.3545 -97.9404 Lf*U*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa341.7568 -189.2417 m329.5791 -177.064 L325.4014 -172.8867 319.4365 -172.0811 315.2588 -176.2573 c311.083 -180.4355 311.8887 -186.3999 316.0645 -190.5771 C328.2412 -202.7539 L332.4189 -206.9297 338.3848 -207.7373 342.5625 -203.5605 c346.7373 -199.3848 345.9316 -193.417 341.7568 -189.2417 Cf0 D326.4893 -187.564 m323.917 -190.1343 319.748 -190.1328 317.1777 -187.563 c314.6084 -184.9932 314.6074 -180.8247 317.1777 -178.2539 c319.749 -175.6831 323.917 -175.6836 326.4863 -178.2534 c329.0566 -180.8242 329.0566 -184.9932 326.4893 -187.564 cf333.3701 -201.3965 m332.4531 -201.3418 331.7568 -200.5547 331.8076 -199.6357 c331.8604 -198.7188 332.6484 -198.0215 333.5664 -198.0742 c334.4824 -198.1279 335.1846 -198.916 335.1289 -199.832 c335.0762 -200.748 334.2881 -201.4492 333.3701 -201.3965 cf333.3701 -196.083 m332.4551 -196.0313 331.7568 -195.2441 331.8086 -194.3242 c331.8604 -193.4063 332.6494 -192.7109 333.5654 -192.7617 c334.4844 -192.8174 335.1836 -193.6035 335.1289 -194.5215 c335.0771 -195.4375 334.2871 -196.1377 333.3701 -196.083 cf339.1963 -201.3965 m338.2773 -201.3965 337.5332 -200.6533 337.5352 -199.7324 c337.5332 -198.8164 338.2764 -198.0693 339.1963 -198.0713 c340.1133 -198.0703 340.8623 -198.8154 340.8594 -199.7334 c340.8594 -200.6523 340.1133 -201.3975 339.1963 -201.3965 cf339.1953 -196.084 m338.2783 -196.0859 337.5322 -195.3408 337.5332 -194.4209 c337.5332 -193.5039 338.2773 -192.7598 339.1963 -192.7598 c340.1152 -192.7598 340.8613 -193.5039 340.8613 -194.4229 c340.8613 -195.3418 340.1152 -196.0879 339.1953 -196.084 cf*U0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa324.6699 -184.1196 m323.5195 -182.9692 L324.668 -181.8203 L325.123 -181.3662 325.1221 -180.6294 324.668 -180.1753 c324.2139 -179.7212 323.4775 -179.7212 323.0234 -180.1758 C321.875 -181.3247 L320.7266 -180.1763 L320.2725 -179.7222 319.5361 -179.7222 319.082 -180.1763 c318.6279 -180.6309 318.627 -181.3672 319.082 -181.8218 C320.2305 -182.9697 L319.0801 -184.1201 L318.625 -184.5742 318.626 -185.311 319.0801 -185.7651 c319.5342 -186.2192 320.2705 -186.2192 320.7246 -185.7646 C321.875 -184.6143 L323.0254 -185.7651 L323.4795 -186.2192 324.2158 -186.2192 324.6699 -185.7651 c325.124 -185.3105 325.124 -184.5742 324.6699 -184.1196 Cf*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa335.1992 -83.8696 m320.9609 -83.8696 L318.1035 -83.8696 315.7871 -86.186 315.7871 -89.0425 C315.7871 -110.5918 L315.7871 -113.4492 318.1035 -115.7656 320.9609 -115.7656 C335.1992 -115.7656 L338.0566 -115.7656 340.373 -113.4492 340.373 -110.5918 C340.373 -89.0425 L340.373 -86.186 338.0566 -83.8696 335.1992 -83.8696 Cf0 D320.9121 -91.2998 m320.3154 -89.9463 318.5957 -88.8003 318.3223 -88.5181 c318.0566 -88.2441 317.8984 -87.8701 317.8984 -87.4722 c317.8984 -86.6416 318.5713 -85.9609 319.4023 -85.9609 c320.2324 -85.9609 320.9121 -86.4014 320.9121 -87.1904 c320.9121 -86.4019 321.5938 -85.9609 322.4238 -85.9609 c323.2539 -85.9609 323.9268 -86.6416 323.9268 -87.4722 c323.9268 -87.8867 323.752 -88.2441 323.4863 -88.5181 c322.4238 -89.5972 321.5605 -89.9463 320.9121 -91.2998 Cf328.0801 -106.5293 m326.7305 -103.4731 322.8486 -100.8853 322.2305 -100.248 c321.6309 -99.6294 321.2744 -98.7856 321.2744 -97.8862 c321.2744 -96.0103 322.793 -94.4731 324.667 -94.4731 c326.543 -94.4731 328.0801 -95.4683 328.0801 -97.25 c328.0801 -95.4688 329.6172 -94.4731 331.4932 -94.4731 c333.3672 -94.4731 334.8867 -96.0103 334.8867 -97.8862 c334.8867 -98.8232 334.4922 -99.6294 333.8926 -100.248 c331.4932 -102.6855 329.542 -103.4731 328.0801 -106.5293 Cf336.7227 -113.5313 m335.8926 -113.5313 335.2109 -113.0903 335.2119 -112.3018 c335.2119 -113.0903 334.5303 -113.5317 333.7002 -113.5313 c332.8701 -113.5313 332.1973 -112.8501 332.1973 -112.0205 c332.1973 -111.605 332.3721 -111.248 332.6387 -110.9741 c333.7012 -109.8945 334.5645 -109.5454 335.2119 -108.1924 C335.8086 -109.5454 337.5283 -110.6914 337.8027 -110.9746 c338.0684 -111.248 338.2256 -111.6216 338.2256 -112.0205 c338.2256 -112.8501 337.5527 -113.5313 336.7227 -113.5313 cf*U0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa200.0303 -99.0195 m200.0254 -98.8799 L200.0264 -98.9019 200.0303 -99.0176 200.0303 -99.0195 Cf*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa192.4863 -85.9512 m191.7119 -85.4189 191.0337 -83.4834 V189.4863 -81.9824 187.9365 -83.5313 V187.9365 -105.8916 L178.0635 -103.7139 178.0635 -111.313 V177.7251 -115.7656 183.3867 -115.7656 v189.0498 -115.7656 191.2275 -111.603 191.3242 -107.7793 c191.4219 -103.9551 191.3242 -92.8721 Y198.0039 -95.292 198.0039 -99.0195 V198.1504 -101.1489 196.3574 -104.1499 V195.8262 -106.23 198.2939 -104.9238 V202.2148 -103.0371 202.1182 -96.792 V202.6494 -91.6143 192.4863 -85.9512 Vf0 D185.3711 -108.7729 m183.813 -108.7705 182.6426 -109.0493 181.9868 -109.5791 c181.4707 -109.9961 181.2197 -110.6875 181.2197 -111.7124 C181.2168 -111.8301 L181.2061 -112.2441 180.8638 -112.522 180.4497 -112.5117 c180.0352 -112.5015 179.7095 -112.1079 179.7197 -111.6938 c179.7197 -110.2261 180.1655 -109.1221 181.0444 -108.4121 c181.9839 -107.6533 183.4404 -107.27 185.373 -107.2729 c185.7871 -107.2734 186.1226 -107.6099 186.1221 -108.0239 c186.1216 -108.4385 185.7852 -108.7734 185.3711 -108.7729 cf*Uuuu*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa341.0439 -273.4775 m315.1162 -273.4775 L312.9619 -273.4775 311.2158 -275.2256 311.2158 -277.3789 C311.2158 -293.6309 L311.2158 -295.7861 312.9619 -297.5342 315.1162 -297.5342 C341.0439 -297.5342 L343.1982 -297.5342 344.9443 -295.7861 344.9443 -293.6309 C344.9443 -277.3789 L344.9443 -275.2256 343.1982 -273.4775 341.0439 -273.4775 Cf0 D335.1162 -292.6563 m335.1162 -293.6416 334.3154 -294.4443 333.3311 -294.4443 C316.2803 -294.4443 L315.2959 -294.4443 314.4932 -293.6416 314.4932 -292.6563 C314.4932 -278.3545 L314.4932 -277.3691 315.2959 -276.5674 316.2803 -276.5674 C333.3311 -276.5674 L334.3154 -276.5674 335.1162 -277.3691 335.1162 -278.3545 C335.1162 -292.6563 Lf340.2197 -293.4971 m339.1729 -293.4971 338.3311 -292.6504 338.3311 -291.6064 c338.3311 -290.5664 339.1729 -289.7197 340.2178 -289.7197 c341.2607 -289.7197 342.1064 -290.5664 342.1064 -291.6064 c342.1064 -292.6504 341.2607 -293.4951 340.2197 -293.4971 cf340.2197 -287.3564 m339.1729 -287.3564 338.3311 -286.5078 338.3311 -285.4658 c338.3311 -284.4238 339.1729 -283.5771 340.2178 -283.5771 c341.2607 -283.5771 342.1064 -284.4238 342.1064 -285.4658 c342.1064 -286.5078 341.2607 -287.3525 340.2197 -287.3564 cf*UUU0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa327.0889 -271.4756 m329.0693 -271.4756 L336.1592 -264.3857 L336.5498 -263.9951 336.5498 -263.3623 336.1592 -262.9717 c335.7686 -262.5811 335.1357 -262.5811 334.7451 -262.9717 C328.0791 -269.6377 L321.4131 -262.9717 L321.0225 -262.5811 320.3896 -262.5811 319.999 -262.9717 c319.6084 -263.3623 319.6084 -263.9951 319.999 -264.3857 C327.0889 -271.4756 LfU*u1 D266.3994 -186.3667 m265.8467 -186.3667 265.3994 -186.8145 265.3994 -187.3667 C265.3994 -193.5439 L265.3994 -197.3701 262.25 -200.4834 258.3799 -200.4834 c254.5078 -200.4834 251.3574 -197.3701 251.3574 -193.5439 C251.3574 -187.3667 L251.3574 -186.8145 250.9102 -186.3667 250.3574 -186.3667 c249.8047 -186.3667 249.3574 -186.8145 249.3574 -187.3667 C249.3574 -193.5439 L249.3574 -198.4736 253.4053 -202.4834 258.3799 -202.4834 c263.3535 -202.4834 267.3994 -198.4736 267.3994 -193.5439 C267.3994 -187.3667 L267.3994 -186.8145 266.9521 -186.3667 266.3994 -186.3667 cf252.2939 -206.3955 m264.4619 -206.3955 L262.9512 -204.749 260.7881 -203.71 258.3779 -203.71 c255.9678 -203.71 253.8047 -204.749 252.2939 -206.3955 Cfu258.3809 -198.4824 m261.2861 -198.4824 263.7031 -196.1113 263.7031 -193.248 C263.7031 -180.0488 L263.7031 -177.1392 261.2861 -174.7681 258.3809 -174.7681 c255.4697 -174.7681 253.0527 -177.1392 253.0527 -180.0488 C253.0527 -193.248 L253.0527 -196.1113 255.4697 -198.4824 258.3809 -198.4824 cf0 D254.8906 -180.5308 m254.8906 -179.8848 255.4141 -179.3594 256.0625 -179.3594 c256.71 -179.3594 257.2324 -179.8848 257.2324 -180.5308 C257.2324 -183.8784 L257.2324 -184.5249 256.71 -185.0503 256.0625 -185.0503 c255.4141 -185.0503 254.8906 -184.5249 254.8906 -183.8784 C254.8906 -180.5308 LfU*U*uu1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa135.3521 -282.1943 m119.2505 -266.0908 L117.5825 -264.4248 114.8794 -264.4238 113.2124 -266.0918 C111.23 -268.0742 L111.8042 -269.2998 111.5977 -270.7998 110.5864 -271.8115 c109.5752 -272.8232 108.0747 -273.0303 106.8491 -272.4561 C105.1616 -274.1436 L103.4946 -275.8105 103.4946 -278.5137 105.1606 -280.1816 C121.2632 -296.2822 L122.9312 -297.9512 125.6333 -297.9512 127.3022 -296.2822 C129.1626 -294.4219 L128.8667 -293.3184 129.1372 -292.0947 130.0015 -291.2295 c130.8682 -290.3623 132.0923 -290.0918 133.1963 -290.3877 C135.3521 -288.2314 L137.019 -286.5645 137.019 -283.8623 135.3521 -282.1943 Cf0 D131.0972 -285.5225 m124.5903 -292.0273 L124.1055 -292.5127 123.4565 -292.79 122.8096 -292.7891 c122.2441 -292.7891 121.7227 -292.5771 121.3408 -292.1943 C121.3423 -292.1953 L109.2505 -280.1025 L108.8672 -279.7197 108.6563 -279.1914 108.6563 -278.6289 c108.6563 -278.5605 108.6597 -278.4912 108.6655 -278.4219 c108.7188 -277.8428 108.9854 -277.2861 109.4175 -276.8545 C115.9243 -270.3486 L116.8643 -269.4082 118.3213 -269.332 119.1733 -270.1807 C131.2617 -282.2705 L131.6455 -282.6533 131.8569 -283.1748 131.8579 -283.7412 c131.8589 -284.3877 131.582 -285.0371 131.0972 -285.5225 CfU1 D117.7617 -271.5967 m117.7236 -271.5732 117.5244 -271.5771 117.3384 -271.7627 C110.8315 -278.2686 L110.6924 -278.4082 110.6553 -278.5557 110.6553 -278.6357 c110.6553 -278.6611 110.6592 -278.6797 110.6646 -278.6885 C122.7559 -290.7813 L122.8013 -290.8057 122.9966 -290.793 123.1763 -290.6133 C129.6826 -284.1094 L129.8643 -283.9258 129.875 -283.7305 129.8491 -283.6865 C117.7617 -271.5967 Lf*U*uu135.3521 -282.1943 m119.2505 -266.0908 L117.5825 -264.4248 114.8794 -264.4238 113.2124 -266.0918 C111.23 -268.0742 L111.8042 -269.2998 111.5977 -270.7998 110.5864 -271.8115 c109.5752 -272.8232 108.0747 -273.0303 106.8491 -272.4561 C105.1616 -274.1436 L103.4946 -275.8105 103.4946 -278.5137 105.1606 -280.1816 C121.2632 -296.2822 L122.9312 -297.9512 125.6333 -297.9512 127.3022 -296.2822 C129.1626 -294.4219 L128.8667 -293.3184 129.1372 -292.0947 130.0015 -291.2295 c130.8682 -290.3623 132.0923 -290.0918 133.1963 -290.3877 C135.3521 -288.2314 L137.019 -286.5645 137.019 -283.8623 135.3521 -282.1943 Cf0 D131.0972 -285.5225 m124.5903 -292.0273 L124.1055 -292.5127 123.4565 -292.79 122.8096 -292.7891 c122.2441 -292.7891 121.7227 -292.5771 121.3408 -292.1943 C121.3423 -292.1953 L109.2505 -280.1025 L108.8672 -279.7197 108.6563 -279.1914 108.6563 -278.6289 c108.6563 -278.5605 108.6597 -278.4912 108.6655 -278.4219 c108.7188 -277.8428 108.9854 -277.2861 109.4175 -276.8545 C115.9243 -270.3486 L116.8643 -269.4082 118.3213 -269.332 119.1733 -270.1807 C131.2617 -282.2705 L131.6455 -282.6533 131.8569 -283.1748 131.8579 -283.7412 c131.8589 -284.3877 131.582 -285.0371 131.0972 -285.5225 CfU1 D117.7617 -271.5967 m117.7236 -271.5732 117.5244 -271.5771 117.3384 -271.7627 C110.8315 -278.2686 L110.6924 -278.4082 110.6553 -278.5557 110.6553 -278.6357 c110.6553 -278.6611 110.6592 -278.6797 110.6646 -278.6885 C122.7559 -290.7813 L122.8013 -290.8057 122.9966 -290.793 123.1763 -290.6133 C129.6826 -284.1094 L129.8643 -283.9258 129.875 -283.7305 129.8491 -283.6865 C117.7617 -271.5967 Lf*Uu0 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa67.9414 -278.3857 m63.0273 -281.2246 L63.0273 -291.4746 L67.9414 -294.3135 L70.4453 -295.7588 72.4941 -294.5752 72.4941 -291.6855 C72.4941 -281.0146 L72.4941 -278.124 70.4453 -276.9404 67.9414 -278.3857 Cf36.6895 -270.1904 m48.0889 -270.1904 L49.79 -270.1904 51.1748 -271.502 51.3232 -273.165 C55.3379 -273.165 L55.1855 -269.2949 51.9971 -266.1904 48.0889 -266.1904 C36.6895 -266.1904 L35.585 -266.1904 34.6895 -267.0859 34.6895 -268.1904 c34.6895 -269.2949 35.585 -270.1904 36.6895 -270.1904 Cfu*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa55.7637 -275.165 m36.4697 -275.165 L33.5625 -275.165 31.2061 -277.5225 31.2061 -280.4287 C31.2061 -292.2705 L31.2061 -295.1768 33.5625 -297.5342 36.4697 -297.5342 C55.7637 -297.5342 L58.6699 -297.5342 61.0273 -295.1768 61.0273 -292.2705 C61.0273 -280.4287 L61.0273 -277.5225 58.6699 -275.165 55.7637 -275.165 Cf0 D54.0039 -286.3389 m38.2295 -286.3389 L37.2803 -286.3389 36.5107 -285.5693 36.5107 -284.6201 c36.5107 -283.6709 37.2803 -282.9014 38.2295 -282.9014 C54.0039 -282.9014 L54.9531 -282.9014 55.7227 -283.6709 55.7227 -284.6201 c55.7227 -285.5693 54.9531 -286.3389 54.0039 -286.3389 Cf*UUUu*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa200.0811 -265.5898 m180.0981 -265.5898 L177.894 -265.5908 176.0894 -267.3936 176.0913 -269.5996 C176.0913 -293.5234 L176.0903 -295.7275 177.894 -297.5342 180.0981 -297.5332 C200.0791 -297.5342 L202.2852 -297.5332 204.0889 -295.7314 204.0869 -293.5234 C204.0918 -269.6006 L204.0898 -267.3936 202.2861 -265.5898 200.0811 -265.5898 Cf0 D199.7881 -269.1084 m202.0313 -269.1084 L202.0313 -271.7559 L199.7881 -271.7578 L199.7881 -269.1084 Lf199.7891 -274.7568 m202.0313 -274.7568 L202.0313 -277.4014 L199.7881 -277.4014 L199.7891 -274.7568 Lf182.8013 -268.8926 m184.5083 -268.8926 195.6738 -268.8916 197.3809 -268.8916 C197.3809 -280.3984 L195.6738 -280.3975 184.5083 -280.3965 182.7974 -280.3975 C182.7974 -279.3281 182.7974 -269.9609 182.8013 -268.8926 Cf180.4209 -269.1094 m180.4189 -271.7549 L178.1797 -271.7549 L178.1787 -269.1084 L180.4209 -269.1094 Lf178.1807 -280.3984 m180.4209 -280.3994 L180.4189 -283.0449 L178.1797 -283.0449 L178.1807 -280.3984 Lf180.4209 -294.3369 m178.1807 -294.3369 L178.1787 -291.6914 L180.4209 -291.6914 L180.4209 -294.3369 Lf180.4209 -288.6914 m178.1807 -288.6914 L178.1797 -286.0459 L180.4219 -286.0439 L180.4209 -288.6914 Lf180.4219 -277.3994 m178.1812 -277.3994 L178.1807 -274.7549 L180.4219 -274.7549 L180.4219 -277.3994 Lf197.3809 -294.5684 m195.6729 -294.5703 184.5083 -294.5703 182.7974 -294.5684 C182.7974 -293.5 182.7974 -284.1328 182.7983 -283.0645 C184.5073 -283.0635 195.6738 -283.0645 197.3818 -283.0635 C197.3809 -284.1328 197.3809 -293.5 197.3809 -294.5684 Cf199.7881 -294.3369 m199.7891 -291.6904 L202.0293 -291.6914 L202.0332 -294.3369 L199.7881 -294.3369 Lf199.7881 -288.6904 m199.791 -286.0459 L202.0313 -286.0459 L202.0332 -288.6914 L199.7881 -288.6904 Lf199.7881 -283.0469 m199.7891 -280.4004 L202.0313 -280.4004 L202.0332 -283.0469 L199.7881 -283.0469 Lf*UUu262.3682 -275.5439 m261.6689 -274.7822 260.7314 -274.2432 259.6758 -274.041 C259.6816 -273.9961 259.7021 -273.9561 259.7021 -273.9092 c259.7021 -268.2246 252.8809 -263.5996 244.4971 -263.5996 c243.9443 -263.5996 243.4971 -264.0469 243.4971 -264.5996 c243.4971 -265.1523 243.9443 -265.5996 244.4971 -265.5996 c251.7783 -265.5996 257.7021 -269.3271 257.7021 -273.9092 c257.7021 -273.9609 257.7246 -274.0059 257.7314 -274.0566 C256.7139 -274.2734 255.8145 -274.8057 255.1357 -275.5439 C262.3682 -275.5439 Lf*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa278.2295 -293.9395 m274.3398 -279.1611 L273.877 -276.5859 270.7705 -274.9902 267.4014 -275.5947 c265.8818 -275.8682 264.5723 -276.5449 263.6309 -277.4385 C253.1279 -277.4385 L252.1865 -276.5449 250.876 -275.8682 249.3574 -275.5947 c245.9893 -274.9902 242.8818 -276.5859 242.4189 -279.1611 C238.5283 -293.9395 L238.2471 -295.5049 239.6797 -297.0723 241.7275 -297.4404 c243.7764 -297.8086 245.1338 -297.1104 246.4404 -295.0518 C248.4697 -291.6543 L251.1455 -292.6357 254.584 -293.2266 258.3359 -293.2266 c262.1221 -293.2266 265.5859 -292.624 268.2725 -291.627 C270.3174 -295.0518 L271.626 -297.1104 272.9834 -297.8086 275.0303 -297.4404 c277.0791 -297.0723 278.5117 -295.5049 278.2295 -293.9395 Cf0 D252.417 -285.7559 m250.7051 -285.7559 L250.7051 -287.4668 L250.7051 -288.2949 250.0332 -288.9668 249.2051 -288.9668 c248.377 -288.9668 247.7051 -288.2949 247.7051 -287.4668 C247.7051 -285.7559 L245.9932 -285.7559 L245.165 -285.7559 244.4932 -285.084 244.4932 -284.2559 c244.4932 -283.4277 245.165 -282.7559 245.9932 -282.7559 C247.7051 -282.7559 L247.7051 -281.0439 L247.7051 -280.2158 248.377 -279.5439 249.2051 -279.5439 c250.0332 -279.5439 250.7051 -280.2158 250.7051 -281.0439 C250.7051 -282.7559 L252.417 -282.7559 L253.2451 -282.7559 253.917 -283.4277 253.917 -284.2559 c253.917 -285.084 253.2451 -285.7559 252.417 -285.7559 Cf264.0967 -287.5664 m263.0713 -287.5664 262.2373 -286.7344 262.2393 -285.709 c262.2373 -284.6807 263.0713 -283.8457 264.0977 -283.8477 c265.124 -283.8477 265.957 -284.6807 265.9561 -285.709 c265.957 -286.7344 265.124 -287.5664 264.0967 -287.5664 cf267.6094 -283.2227 m266.583 -283.2246 265.749 -282.3926 265.751 -281.3652 c265.749 -280.3389 266.583 -279.5039 267.6094 -279.5059 c268.6377 -279.5059 269.4688 -280.3389 269.4688 -281.3652 c269.4688 -282.3926 268.6377 -283.2246 267.6094 -283.2227 cf270.1943 -288.2041 m269.1689 -288.1445 268.3896 -287.2666 268.4502 -286.2393 c268.5088 -285.2148 269.3896 -284.4307 270.4141 -284.4922 c271.4395 -284.5508 272.2217 -285.4336 272.1621 -286.458 c272.1025 -287.4824 271.2217 -288.2637 270.1943 -288.2041 cf*UUuu101.5 -184.4819 m102.2197 -185.2104 103.3994 -185.2104 104.1226 -184.4819 c113.0195 -175.5874 127.4941 -175.5874 136.3975 -184.4819 c137.1143 -185.2104 138.291 -185.2104 139.0137 -184.4819 c139.7373 -183.7642 139.7373 -182.5903 139.0137 -181.8706 c128.6709 -171.5239 111.8491 -171.5239 101.5 -181.8677 c100.7769 -182.5884 100.7769 -183.7642 101.5 -184.4819 cf/BBAccumRotation (0.785398) XTUu106.9712 -189.9619 m107.6973 -190.6885 108.8735 -190.6885 109.5967 -189.9619 c115.4722 -184.0854 125.0381 -184.0854 130.915 -189.9619 c131.6377 -190.6885 132.8115 -190.6885 133.54 -189.9619 c134.2607 -189.2383 134.2607 -188.0679 133.54 -187.3442 c126.2148 -180.022 114.2964 -180.022 106.9712 -187.3481 c106.2568 -188.0679 106.2568 -189.2383 106.9712 -189.9619 cf/BBAccumRotation (0.785398) XTU120.2612 -190.1113 m117.395 -190.1113 114.6978 -191.2305 112.6724 -193.251 C112.3628 -193.5654 112.1846 -193.9854 112.1846 -194.4268 c112.1846 -194.4287 l112.1846 -194.8682 112.3628 -195.29 112.6724 -195.6025 c112.9966 -195.9189 113.4014 -196.0898 113.8511 -196.0898 c114.2993 -196.0898 114.7153 -195.9189 115.0332 -195.6025 c116.4224 -194.209 118.2783 -193.4385 120.2612 -193.4385 c122.2383 -193.4385 124.0908 -194.209 125.4893 -195.6025 c126.1377 -196.251 127.1963 -196.251 127.8447 -195.6025 c128.1572 -195.29 128.3291 -194.8682 128.3291 -194.4268 c128.3291 -193.9854 128.1572 -193.5654 127.8389 -193.251 c125.8252 -191.2305 123.1279 -190.1113 120.2612 -190.1113 c120.2612 -190.1113 lf/BBAccumRotation (0.000000) XT*u1 D120.2578 -197.7754 m117.876 -197.7754 115.9453 -199.7061 115.9453 -202.0918 c115.9453 -204.4658 117.876 -206.3955 120.2578 -206.3955 c122.6377 -206.3955 124.5654 -204.4658 124.5654 -202.0918 c124.5654 -199.7061 122.6377 -197.7754 120.2578 -197.7754 cf0 D118.8682 -203.001 m117.8789 -203.001 117.0771 -202.1982 117.0771 -201.2119 c117.0771 -200.2217 117.8789 -199.4199 118.8682 -199.4199 c119.8569 -199.4199 120.6577 -200.2217 120.6577 -201.2119 c120.6577 -202.1982 119.8569 -203.001 118.8682 -203.001 cf*UU1 Ap0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa269.9941 -106.3584 m269.9941 -109.5352 267.418 -112.1104 264.2402 -112.1143 c261.0645 -112.1143 258.4863 -109.5352 258.4863 -106.3584 c258.4863 -103.1807 261.0645 -100.6055 264.2402 -100.6055 c267.418 -100.6055 269.9941 -103.1807 269.9941 -106.3584 cf0 Ap250.3926 -83.9346 m250.8906 -83.9346 251.3398 -83.7432 251.6855 -83.4375 C263.7148 -87.9727 L267.9648 -87.9727 L252.3398 -82.0815 L252.3418 -82.0469 252.3516 -82.0137 252.3516 -81.9785 c252.3516 -80.8979 251.4746 -80.0225 250.3926 -80.0225 c249.3145 -80.0225 248.4395 -80.8979 248.4395 -81.9785 c248.4395 -83.0596 249.3145 -83.9346 250.3926 -83.9346 cf*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa271.4141 -89.9727 m245.6855 -89.9727 L243.3809 -89.9727 241.5137 -91.8403 241.5137 -94.144 C241.5137 -111.5283 L241.5137 -113.8311 243.3809 -115.7002 245.6855 -115.7002 C271.4141 -115.7002 L273.7168 -115.7002 275.5859 -113.8311 275.5859 -111.5283 C275.5859 -94.144 L275.5859 -91.8403 273.7168 -89.9727 271.4141 -89.9727 Cf0 D251.5762 -108.3799 m250.457 -108.3799 249.5566 -107.4746 249.5566 -106.3594 c249.5566 -105.2451 250.457 -104.3408 251.5723 -104.3408 c252.6875 -104.3408 253.5918 -105.2451 253.5918 -106.3594 c253.5918 -107.4746 252.6875 -108.3779 251.5762 -108.3799 cf264.2402 -114.1143 m259.9648 -114.1143 256.4863 -110.6348 256.4863 -106.3584 c256.4863 -102.083 259.9648 -98.6055 264.2402 -98.6055 c268.5156 -98.6055 271.9941 -102.083 271.9941 -106.3584 c271.9941 -110.6299 268.5176 -114.1094 264.2402 -114.1143 cf270.9629 -97.6924 m255.3652 -97.6924 L255.3652 -94.811 L255.3652 -94.1353 254.918 -93.606 254.3438 -93.606 c253.7715 -93.606 253.3242 -94.1353 253.3242 -94.811 C253.3242 -97.6924 L246.6211 -97.6924 L245.1504 -97.6924 243.957 -96.4995 243.957 -95.0288 c243.957 -93.5571 245.1504 -92.3633 246.6211 -92.3633 C270.9629 -92.3633 L272.4336 -92.3633 273.627 -93.5571 273.627 -95.0288 c273.627 -96.4995 272.4336 -97.6924 270.9629 -97.6924 Cf*U*uu1 D68.8525 -187.0039 m68.8525 -186.6543 68.7974 -186.3022 68.6855 -185.957 c68.269 -184.6743 67.1616 -183.7827 65.7227 -183.5718 c65.7192 -183.5713 59.9707 -182.7368 58.3364 -182.4995 C57.6074 -181.022 55.0366 -175.812 Y54.3955 -174.5073 53.2036 -173.7251 51.8511 -173.7251 c50.4985 -173.7251 49.3071 -174.5073 48.6636 -175.8164 c48.6343 -175.8755 45.7192 -181.7773 45.3628 -182.4995 C44.5684 -182.6147 37.9844 -183.5713 Y36.541 -183.7822 35.4321 -184.6738 35.0156 -185.957 c34.9033 -186.3027 34.8481 -186.6548 34.8481 -187.0049 c34.8481 -187.9541 35.2524 -188.8872 36.0137 -189.6299 c36.0146 -189.6309 40.1729 -193.6846 41.355 -194.8359 C41.0752 -196.4668 40.0942 -202.1875 Y40.0532 -202.4268 40.0327 -202.6641 40.0327 -202.8965 c40.0327 -204.0518 40.5347 -205.085 41.4434 -205.7461 c42.5352 -206.54 43.9575 -206.6104 45.2476 -205.9326 c45.2495 -205.9316 50.3892 -203.2275 51.8501 -202.459 C53.2964 -203.2207 58.4492 -205.9316 Y59.7407 -206.6094 61.1621 -206.54 62.2539 -205.748 c63.1641 -205.0869 63.667 -204.0518 63.667 -202.8945 c63.667 -202.6641 63.647 -202.4287 63.6064 -202.1904 c63.606 -202.1875 62.6245 -196.4648 62.3457 -194.8369 C63.5249 -193.6865 67.6855 -189.6309 Y68.4478 -188.8867 68.8525 -187.9536 68.8525 -187.0039 cf0 D66.2896 -188.1982 m60.6226 -193.7236 L60.416 -193.9258 60.2485 -194.4395 60.2969 -194.7227 C61.6348 -202.5254 61.6348 -202.5273 V61.7495 -203.2061 61.5464 -203.79 61.0776 -204.1299 c60.6089 -204.4697 59.9902 -204.4814 59.3804 -204.1611 C52.3794 -200.4775 L52.1221 -200.3438 51.5781 -200.3438 51.3242 -200.4756 C44.3184 -204.1611 44.3179 -204.1621 V43.708 -204.4824 43.0889 -204.4697 42.6201 -204.1289 c42.1509 -203.7881 41.9492 -203.2031 42.0654 -202.5254 C43.4033 -194.7227 43.4038 -194.7217 V43.4526 -194.4385 43.2852 -193.9258 43.0786 -193.7236 C37.4106 -188.1982 L36.9175 -187.7178 36.7388 -187.1265 36.9175 -186.5752 c37.0967 -186.0234 37.5898 -185.6499 38.272 -185.5503 C46.1016 -184.4131 L46.3892 -184.3706 46.8271 -184.0537 46.9546 -183.7935 C50.4585 -176.6987 L50.7622 -176.0801 51.27 -175.7251 51.8511 -175.7251 c52.4321 -175.7251 52.9399 -176.0801 53.2432 -176.6973 C56.7446 -183.7935 L56.8726 -184.0522 57.311 -184.3706 57.5952 -184.4126 C65.4312 -185.5503 65.4331 -185.5508 V66.1123 -185.6504 66.6045 -186.0239 66.7832 -186.5747 c66.9619 -187.126 66.7822 -187.7178 66.2896 -188.1982 CfU48.6631 -175.8169 m48.6631 -175.8164 48.6636 -175.8164 V48.6636 -175.8159 48.666 -175.811 Y48.6631 -175.8169 Lf1 D64.3789 -186.7778 m57.0728 -185.7173 L56.5063 -185.6333 55.8325 -185.1465 55.5776 -184.6304 C52.3125 -178.0137 L52.0596 -177.498 51.6426 -177.498 51.3892 -178.0137 C48.1216 -184.6304 L47.8687 -185.1465 47.1948 -185.6333 46.6265 -185.7173 C39.3242 -186.7778 L38.7568 -186.8608 38.6274 -187.2559 39.0381 -187.6567 C44.3228 -192.8086 L44.7344 -193.21 44.9912 -193.999 44.894 -194.5645 C43.6465 -201.8398 L43.5488 -202.4063 43.8857 -202.6494 44.394 -202.3828 C50.9258 -198.9463 L51.4341 -198.6807 52.2651 -198.6807 52.7744 -198.9463 C59.3052 -202.3828 L59.8135 -202.6494 60.1504 -202.4063 60.0537 -201.8398 C58.8066 -194.5645 L58.71 -193.999 58.9668 -193.21 59.3784 -192.8086 C64.6621 -187.6567 L65.0728 -187.2559 64.9443 -186.8608 64.3789 -186.7778 Cf*U*u183.188 -175.5098 m175.4585 -175.5098 L172.4048 -175.5098 169.9282 -177.9873 169.9282 -181.0391 C169.9282 -200.8643 L169.9282 -203.918 172.4048 -206.3955 175.4585 -206.3955 C183.188 -206.3955 L186.2427 -206.3955 188.7192 -203.918 188.7192 -200.8643 C188.7192 -181.0391 L188.7192 -177.9873 186.2427 -175.5098 183.188 -175.5098 Cf0 D186.5806 -200.8643 m186.5806 -202.7344 185.0591 -204.2578 183.188 -204.2578 C175.4585 -204.2578 L173.5884 -204.2578 172.0669 -202.7344 172.0669 -200.8643 C172.0669 -181.0391 L172.0669 -179.1719 173.5884 -177.6494 175.4585 -177.6494 C183.188 -177.6494 L185.0591 -177.6494 186.5806 -179.1719 186.5806 -181.0391 C186.5806 -200.8643 Lf*U1 Ap0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa175.3667 -174.5449 m175.3667 -173.2715 176.3999 -172.2373 177.6753 -172.2373 C180.9722 -172.2373 L182.2466 -172.2373 183.2808 -173.2715 183.2808 -174.5449 C175.3667 -174.5449 Lf/BBAccumRotation (0.000000) XT*u0 Ap1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa183.188 -179.7871 m175.4585 -179.7871 L174.7661 -179.7871 174.2036 -180.3496 174.2036 -181.0391 C174.2036 -200.8643 L174.2036 -201.5576 174.7661 -202.1172 175.4585 -202.1172 C183.188 -202.1172 L183.8813 -202.1172 184.4438 -201.5576 184.4438 -200.8643 C184.4438 -181.0391 L184.4438 -180.3496 183.8813 -179.7871 183.188 -179.7871 Cf0 D175.5962 -198.875 m178.1372 -191.7598 L174.2769 -191.7598 L183.0063 -183.0313 L180.4653 -190.1465 L184.3247 -190.1465 L175.5962 -198.875 Lf*U*u1 D204.7246 -175.5098 m196.9941 -175.5098 L193.9395 -175.5098 191.4629 -177.9873 191.4629 -181.0391 C191.4629 -200.8643 L191.4629 -203.918 193.9395 -206.3955 196.9941 -206.3955 C204.7246 -206.3955 L207.7783 -206.3955 210.2549 -203.918 210.2549 -200.8643 C210.2549 -181.0391 L210.2549 -177.9873 207.7783 -175.5098 204.7246 -175.5098 Cf0 D208.1162 -200.8643 m208.1162 -202.7344 206.5957 -204.2578 204.7246 -204.2578 C196.9941 -204.2578 L195.125 -204.2578 193.6016 -202.7344 193.6016 -200.8643 C193.6016 -181.0391 L193.6016 -179.1719 195.125 -177.6494 196.9941 -177.6494 C204.7246 -177.6494 L206.5957 -177.6494 208.1162 -179.1719 208.1162 -181.0391 C208.1162 -200.8643 Lf*U195.7393 -193.4893 m195.7393 -200.8643 L195.7393 -201.5576 196.3018 -202.1172 196.9941 -202.1172 C204.7246 -202.1172 L205.416 -202.1172 205.9795 -201.5576 205.9795 -200.8643 C205.9795 -189.248 L195.7393 -193.4893 Lf1 Ap0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa196.9023 -174.5449 m196.9023 -173.2715 197.9365 -172.2373 199.2119 -172.2373 C202.5068 -172.2373 L203.7822 -172.2373 204.8164 -173.2715 204.8164 -174.5449 C196.9023 -174.5449 Lf/BBAccumRotation (0.000000) XTLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF