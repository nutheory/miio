%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (Scott Dunlap) ()%%Title: (blogging+internet1-cobalt.eps)%%CreationDate: 7/9/07 3:42 PM%%BoundingBox: 34 -327 344 -74%%HiResBoundingBox: 34.021 -326.0234 343.5352 -74.4351%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 190.625 -190.625 190.625 -190.625%AI3_TileBox: -319.875 -850.125 700.125 469.875%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 380 326%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -186.3359 107.1187 2.146 1829 1115 18 1 0 50 75 0 0%AI5_OpenViewLayers: 77%%PageOrigin:-35.8745 -849.125%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 3 Bd[<11121313141517181A1B1C1C1E1F20><0B0C0C0D0E0F0F1012131314151617><0B0B0C0D0E0F0F1012131314151617>0<EBEAE9E8E7E6E5E4E2E1E0DFDEDDDC><ECEBEAE9E8E7E6E5E3E2E1E0DFDEDD><EDECEBEAE9E8E7E6E4E3E2E1E0DFDE>4 %_Br<000000000000000000000000000000000000000000000000010101020203030404050506060708090A0A0B0C0D1011><00000000000000000000000000000000000000000000000001000001010202020203020304050405050607080A0A0B><0000000000000000000000000000000000000000000000000000000001010201020203030304050506070708090A0B>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F6F6F5F4F3F2F1F0EFEEECEB><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F8F8F7F6F5F5F4F3F2F1F0EEEDEC><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFCFCFCFBFBFAFAF9F9F8F7F7F6F5F4F3F2F1F0EFEEED>4 %_Br[0.85 0 53.6585 100 %_BS%_0.85 0 53.6585 100 Bs0.92 0 50 80 %_BS%_0.92 0 50 80 Bs1 0 80 0 %_BS%_1 0 80 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Reflections) Ln0 Auu*u1 D0 O0 J 0 j 1 w 4 M []0 d0 XR0 g66.1172 -114.5659 m66.1172 -115.8755 L66.1172 -119.9375 63.3701 -123.3623 59.6387 -124.4116 C62.3291 -127.1016 L64.7637 -127.1016 L68.2256 -127.1016 71.0313 -124.2954 71.0313 -120.834 C71.0313 -114.5659 L66.1172 -114.5659 Lf0 g49.4199 -117.5972 m54.5732 -122.749 L57.2432 -122.749 L61.04 -122.749 64.1172 -119.6714 64.1172 -115.8755 C64.1172 -109.0015 L34.4531 -109.0015 L34.4531 -115.8755 L34.4531 -119.6714 37.5303 -122.749 41.3271 -122.749 C44.2666 -122.749 L49.4199 -117.5972 Lf0 g58.1479 -127.7378 m58.4805 -128.6982 58.6699 -129.7246 58.6699 -130.7964 c58.6699 -134.6572 56.3252 -137.9785 52.9863 -139.4175 C54.1821 -140.5039 55.7651 -141.1719 57.5078 -141.1719 c61.2266 -141.1719 64.2402 -138.1572 64.2402 -134.438 c64.2402 -130.9355 61.5659 -128.0605 58.1479 -127.7378 Cf56.6699 -130.7964 m56.6699 -126.7183 53.3643 -123.4121 49.2852 -123.4121 c45.207 -123.4121 41.9014 -126.7183 41.9014 -130.7964 c41.9014 -134.8755 45.207 -138.1812 49.2852 -138.1812 c53.3643 -138.1812 56.6699 -134.8755 56.6699 -130.7964 cBb1 (Unnamed gradient 4) 52.7422 -141.1719 90 32.1704 1 0 0 1 0 0 Bg-0.000001 32.1704 40.5781 0.000002 32.4531 -141.1719 Xm-0.000352 8056.6172 40.5781 0.000002 32.4536 -8197.7891 Bc-0.000001 25.7363 40.5781 0.000002 32.4531 -141.1719 Bm0 6.43408 40.5781 0.000002 32.4531 -115.4355 Bm-0.000352 8056.6172 40.5781 0.000002 32.4531 -109.0015 Bcf0 BB*UUu*u0 g134.4917 -109.0015 m107.8491 -109.0015 L105.0952 -109.0015 102.8608 -111.2349 102.8608 -113.9902 C102.8608 -115.8896 L102.8608 -118.6445 105.0952 -120.8784 107.8491 -120.8784 C116.9126 -120.8784 L121.584 -114.77 L123.729 -117.5742 126.2568 -120.8784 V134.4917 -120.8784 L137.2466 -120.8784 139.48 -118.6445 139.48 -115.8896 C139.48 -113.9902 L139.48 -111.2349 137.2466 -109.0015 134.4917 -109.0015 Cf130.5991 -136.1099 m127.3286 -136.1099 124.6787 -133.4585 124.6787 -130.1885 c124.6787 -130.1851 124.6797 -130.1802 124.6797 -130.1768 C130.8516 -130.1768 L121.584 -118.062 L116.9512 -124.1187 L112.3188 -130.1768 L117.8374 -130.1768 L117.9097 -131.2759 117.9927 -131.8291 v118.7266 -136.7153 122.7651 -140.7773 127.7065 -140.7773 c132.6499 -140.7773 136.6567 -136.771 136.6567 -131.8291 c136.6567 -131.291 136.606 -130.7646 136.5151 -130.2539 C136.4785 -133.4932 133.8457 -136.1099 130.5991 -136.1099 cBb1 (Unnamed gradient 4) 121.1704 -140.7773 90 31.7759 1 0 0 1 0 0 Bg-0.000001 31.7759 40.6191 0.000002 100.8608 -140.7773 Xm-0.000355 8125.0454 40.6191 0.000002 100.8613 -8265.8223 Bc-0.000001 25.4207 40.6191 0.000002 100.8608 -140.7773 Bm0 6.35518 40.6191 0.000002 100.8608 -115.3564 Bm-0.000355 8125.0454 40.6191 0.000002 100.8608 -109.0015 Bcf0 BB*UU*u0 g193.5703 -133.0171 m193.5723 -137.1748 193.5732 -140.2651 V201.1406 -132.6968 L198.2578 -132.6968 193.8906 -132.6968 Y193.7178 -132.6968 193.5703 -132.8438 193.5703 -133.0171 Cfu0 g201.4355 -130.7705 m201.4355 -112.855 L201.4355 -110.7261 199.71 -109.0015 197.582 -109.0015 C181.5283 -109.0015 L179.4014 -109.0015 177.6758 -110.7261 177.6758 -112.855 C177.6758 -136.6152 L177.6758 -138.7432 179.4014 -140.4683 181.5283 -140.4683 C191.6445 -140.4683 L191.6445 -133.0171 L191.6445 -131.7783 192.6523 -130.7705 193.8906 -130.7705 C201.4355 -130.7705 Lf0 D0 g182.4106 -127.8364 m186.4507 -130.9302 L185.7285 -131.8735 L184.874 -132.9897 183.2778 -133.2002 182.1616 -132.3462 c181.0454 -131.4922 180.834 -129.894 181.689 -128.7793 C182.4106 -127.8364 Lf0 g184.0244 -125.71 m188.064 -128.8018 L187.123 -130.0332 L183.0825 -126.9404 L184.0244 -125.71 Lf0 g194.7207 -115.9409 m194.998 -116.1533 195.3604 -116.1772 195.6563 -116.0371 C195.5957 -116.3604 195.7139 -116.7012 195.9902 -116.9141 c196.1807 -117.0586 196.4053 -117.1157 196.625 -117.0938 C196.5664 -117.5146 196.4053 -117.9268 196.127 -118.2881 C188.7642 -127.9067 L184.7236 -124.813 L192.0879 -115.1948 L192.3643 -114.8345 192.7188 -114.5693 193.1104 -114.4033 C193.1475 -114.6182 193.2607 -114.8237 193.4482 -114.9673 c193.7275 -115.1802 194.0889 -115.2031 194.3828 -115.0625 C194.3242 -115.3857 194.4414 -115.7285 194.7207 -115.9409 cf198.0068 -112.375 m198.0146 -112.3506 197.4023 -114.8198 Y197.3428 -114.9893 197.2148 -115.0957 197.0557 -115.1309 c196.9082 -115.166 196.7383 -115.1167 196.623 -115.0034 C196.6309 -115.0098 L196.623 -115.0029 L196.623 -115.0034 L195.9414 -114.3823 L195.96 -114.3975 195.1475 -113.8945 Y194.9932 -113.8267 194.8867 -113.6831 194.8691 -113.5186 c194.8486 -113.3486 194.9258 -113.1836 195.0684 -113.0874 C195.0654 -113.0889 195.2949 -112.9297 Y195.3184 -112.9155 197.332 -111.8247 Y197.4785 -111.7251 197.6953 -111.7314 197.8525 -111.8516 c198.0146 -111.9751 198.0762 -112.1855 198.0068 -112.375 CBb1 (Unnamed gradient 4) 189.5562 -140.4683 90 31.4668 1 0 0 1 0 0 Bg-0.000001 31.4668 27.7603 0.000001 175.6758 -140.4683 Xm-0.000358 8193.4316 27.7603 0.000001 175.6763 -8333.9004 Bc-0.000001 25.1734 27.7603 0.000001 175.6758 -140.4683 Bm0 6.29336 27.7603 0.000001 175.6758 -115.2949 Bm-0.000358 8193.4316 27.7603 0.000001 175.6758 -109.0015 Bcf0 BBU*U*uu1 D0 g249.2148 -112.7026 m243.2568 -112.7026 L242.7529 -111.0967 L242.3779 -109.9673 241.9512 -109.1138 240.623 -109.1138 c239.4658 -109.1138 238.6621 -109.7676 238.6621 -110.7705 c238.6621 -111.3726 238.7383 -111.8506 239.2646 -113.2798 C243.1807 -123.8462 L243.9102 -125.8286 244.5361 -127.5356 246.5684 -127.5356 c248.6523 -127.5356 249.2783 -125.8286 250.0068 -123.8462 C251.4531 -119.9443 L250.3574 -116.9873 L249.6152 -114.9712 249.3066 -113.8403 249.2148 -112.7026 Cf0 D0 g246.6953 -123.0181 m246.6436 -123.0181 L244.46 -116.4683 L248.7275 -116.4683 L246.6953 -123.0181 LfUu1 D0 g275.5107 -109.0015 m273.1836 -109.0015 272.4375 -110.4941 271.7773 -112.4712 C270.8975 -115.2813 L259.2168 -115.2813 L258.3398 -112.4712 L257.6797 -110.4941 256.9336 -109.0015 254.6055 -109.0015 c252.5859 -109.0015 251.1807 -110.1426 251.1807 -111.8999 c251.1807 -112.9531 251.3125 -113.7891 252.2324 -116.2925 C259.084 -134.7822 L260.3594 -138.2515 261.4561 -141.2378 265.0117 -141.2378 c268.6572 -141.2378 269.7568 -138.2515 271.0322 -134.7822 C277.8818 -116.2925 L278.8057 -113.7891 278.9355 -112.9531 278.9355 -111.8999 c278.9355 -110.1426 277.5313 -109.0015 275.5107 -109.0015 cf0 D265.2324 -133.332 m265.1465 -133.332 L261.3262 -121.8706 L268.791 -121.8706 L265.2324 -133.332 LBb1 (Unnamed gradient 4) 258.7988 -141.2378 90 32.2363 1 0 0 1 0 0 Bg-0.000001 32.2363 44.2734 0.000002 236.6621 -141.2378 Xm-0.000361 8262.6738 44.2734 0.000002 236.6621 -8403.9121 Bc-0.000001 25.7891 44.2734 0.000002 236.6621 -141.2378 Bm0 6.44727 44.2734 0.000002 236.6621 -115.4487 Bm-0.000361 8262.6738 44.2734 0.000002 236.6621 -109.0015 Bcf0 BBU*U*u1 D0 g320.5254 -110.3784 m318.7559 -110.3784 317.1152 -112.0679 316.1035 -114.2935 C322.0527 -114.2935 L322.4102 -114.2935 322.7012 -114.5835 322.7012 -114.9414 c322.7012 -115.2993 322.4102 -115.5894 322.0527 -115.5894 C315.6318 -115.5894 L314.5898 -119.2793 L322.6074 -119.2793 L322.9648 -119.2793 323.2559 -119.5693 323.2559 -119.9272 c323.2559 -120.2852 322.9648 -120.5752 322.6074 -120.5752 C314.2227 -120.5752 L313.1807 -124.2651 L321.4395 -124.2651 L321.7979 -124.2651 322.0879 -124.5552 322.0879 -124.9131 c322.0879 -125.271 321.7979 -125.561 321.4395 -125.561 C312.8232 -125.561 L312.835 -128.125 314.4189 -130.1992 316.377 -130.1992 C322.2646 -130.1992 L325.1602 -130.3213 L322.3682 -135.5771 323.3535 -139.1904 Y323.8477 -141.9048 326.9229 -141.5503 Y327.29 -141.5073 327.4082 -141.0181 327.4434 -140.7534 c328.666 -131.459 336.6504 -123.293 337.6992 -122.3232 C333.6035 -110.3784 L320.5254 -110.3784 Lf343.377 -117.3984 m341.1777 -110.9775 L340.9277 -110.2412 340.4063 -109.646 339.7061 -109.3022 c339.0059 -108.958 338.2109 -108.9067 337.4727 -109.1602 C336.0225 -109.6572 L340.1094 -121.5947 L341.5586 -121.1021 L342.2949 -120.8516 342.8896 -120.3291 343.2354 -119.6309 c343.5781 -118.9307 343.6289 -118.1382 343.377 -117.3984 CBb1 (Unnamed gradient 4) 328.1797 -141.5654 90 32.564 1 0 0 1 0 0 Bg-0.000001 32.564 34.8057 0.000002 310.8232 -141.5654 Xm-0.000364 8332.3945 34.8057 0.000002 310.8232 -8473.9609 Bc-0.000001 26.0512 34.8057 0.000002 310.8232 -141.5654 Bm0 6.51279 34.8057 0.000002 310.8232 -115.5142 Bm-0.000364 8332.3945 34.8057 0.000002 310.8232 -109.0015 Bcf0 BB*UUu*u0 g67.6792 -226.166 m67.6792 -205.5361 L67.6792 -202.4414 65.1479 -199.9121 62.0571 -199.9121 C41.4263 -199.9121 L38.3325 -199.9121 35.8032 -202.4414 35.8032 -205.5361 C35.8032 -226.166 L35.8032 -229.2607 38.3325 -231.79 41.4263 -231.79 C62.0571 -231.79 L65.1479 -231.79 67.6792 -229.2607 67.6792 -226.166 Cf0 D0 g46.4917 -207.9053 m46.4917 -209.5225 45.1812 -210.832 43.5659 -210.832 c41.9507 -210.832 40.6392 -209.5225 40.6392 -207.9053 c40.6392 -206.29 41.9507 -204.9785 43.5659 -204.9785 c45.1812 -204.9785 46.4917 -206.29 46.4917 -207.9053 cf0 g54.8608 -205.3857 m54.7202 -215.8828 46.1313 -218.7988 41.3521 -218.8945 C41.3511 -218.4707 41.3452 -215.7822 41.3442 -215.3818 C43.105 -215.3125 51.188 -214.4893 51.3413 -205.3857 C54.8608 -205.3857 Lf62.0161 -205.3857 m61.8511 -224.624 43.646 -225.9668 41.3521 -226.0566 C41.3511 -225.6357 41.3481 -222.9443 41.3481 -222.5439 C43.4497 -222.4775 58.3384 -221.4316 58.5005 -205.3857 C62.0161 -205.3857 LBb1 (Unnamed gradient 4) 51.7412 -231.79 90 31.8779 1 0 0 1 0 0 Bg-0.000001 31.8779 35.876 0.000002 33.8032 -231.79 Xm-0.000352 8055.6162 35.876 0.000002 33.8037 -8287.4063 Bc-0.000001 25.5023 35.876 0.000002 33.8032 -231.79 Bm0 6.37559 35.876 0.000002 33.8032 -206.2881 Bm-0.000352 8055.6162 35.876 0.000002 33.8032 -199.9121 Bcf0 BB*U*u1 D0 g119.8418 -232.6299 m120.2876 -232.4785 120.7041 -232.2861 121.021 -231.9697 C136.8481 -216.1406 L137.1138 -215.875 137.2871 -215.5273 137.4385 -215.166 C132.2002 -212.5029 126.0537 -213.3418 122.0571 -217.3389 C122.0571 -217.3389 L119.6079 -219.7871 118.3335 -223.0615 118.3335 -226.4365 C118.3335 -228.5195 118.8472 -230.6367 119.8418 -232.6299 Cf117.3638 -232.374 m116.5991 -230.457 116.1685 -228.4609 116.1685 -226.4775 c116.1685 -222.499 117.6665 -218.6191 120.5029 -215.7832 c124.8691 -211.4189 131.6143 -210.2793 137.4648 -212.79 C137.2988 -212.3721 137.0781 -211.9775 136.7568 -211.6543 C126.1484 -201.0449 l125.7305 -200.6279 125.1992 -200.3652 124.623 -200.2197 C124.6577 -202.0303 124.8247 -210.8125 Y124.5776 -211.4316 L123.957 -211.6816 123.9551 -211.6816 V123.478 -211.6699 123.083 -211.2734 123.0742 -210.7988 C122.8867 -200.9072 122.8745 -200.2549 V122.415 -200.4023 121.9917 -200.624 121.6616 -200.9531 C105.8335 -216.7822 L105.502 -217.1143 105.2803 -217.5371 105.1348 -217.9941 C105.7847 -218.0078 115.6777 -218.1943 Y116.1543 -218.2031 116.5503 -218.5986 116.5605 -219.0771 C116.3135 -219.6953 L115.6929 -219.9443 L105.7495 -219.7568 105.0977 -219.7441 V105.2456 -220.3193 105.5078 -220.8486 105.9258 -221.2686 C116.5347 -231.8779 L116.7617 -232.1035 117.0757 -232.2207 117.3638 -232.374 CBb1 (Unnamed gradient 4) 121.2813 -232.6299 90 32.4102 1 0 0 1 0 0 Bg-0.000001 32.4102 36.3672 0.000002 103.0977 -232.6299 Xm-0.000355 8125.1563 36.3672 0.000002 103.0981 -8357.7861 Bc-0.000001 25.9281 36.3672 0.000002 103.0977 -232.6299 Bm0 6.48203 36.3672 0.000002 103.0977 -206.7021 Bm-0.000355 8125.1563 36.3672 0.000002 103.0977 -200.2197 Bcf0 BB*U*u0 g198.0322 -209.1904 m197.499 -209.1904 196.9805 -209.2393 196.4736 -209.3281 C199.6797 -209.3652 202.2686 -211.9707 202.2686 -215.1846 c202.2686 -218.4189 199.6445 -221.041 196.4102 -221.041 c196.4063 -221.041 196.4023 -221.04 196.3975 -221.04 C196.3975 -214.9316 L184.4097 -224.1025 L190.4028 -228.6865 L196.3975 -233.2695 L196.3975 -227.8115 L197.4854 -227.7393 198.0322 -227.6572 v202.8672 -226.9307 206.8857 -222.9346 206.8857 -218.0449 c206.8857 -213.1523 202.9219 -209.1904 198.0322 -209.1904 cf194.7021 -209.0811 m182.7144 -199.9121 L182.7144 -205.3721 L181.6265 -205.4443 181.0796 -205.5264 v176.2446 -206.2529 172.2256 -210.2471 172.2256 -215.1367 c172.2256 -220.0273 176.1904 -223.9932 181.0796 -223.9932 c181.6123 -223.9932 182.1323 -223.9443 182.6377 -223.8525 C179.4316 -223.8164 176.8442 -221.2109 176.8442 -217.999 c176.8442 -214.7646 179.4668 -212.1406 182.7031 -212.1406 C182.7144 -212.1406 L182.7144 -218.249 L194.7021 -209.0811 LBb1 (Unnamed gradient 4) 189.5562 -233.2695 90 33.3574 1 0 0 1 0 0 Bg-0.000001 33.3574 38.6606 0.000002 170.2256 -233.2695 Xm-0.000358 8193.4316 38.6606 0.000002 170.2261 -8426.7012 Bc-0.000001 26.6859 38.6606 0.000002 170.2256 -233.2695 Bm0 6.67148 38.6606 0.000002 170.2256 -206.584 Bm-0.000358 8193.4316 38.6606 0.000002 170.2256 -199.9121 Bcf0 BB*U*u0 g249.8672 -227.6699 m249.5947 -228.4521 250.0078 -229.3057 250.79 -229.5771 c251.1436 -229.6992 259.5332 -232.5557 266.8857 -229.5488 c267.6523 -229.2363 268.0195 -228.3604 267.7061 -227.5918 c267.3936 -226.8242 266.5176 -226.46 265.75 -226.7725 c259.4648 -229.3447 251.8496 -226.7695 251.7734 -226.7432 c250.9922 -226.4736 250.1367 -226.8867 249.8672 -227.6699 cfu0 g276.3145 -218.6543 m276.3145 -206.0078 L276.3145 -202.6406 273.585 -199.9121 270.2188 -199.9121 C247.3828 -199.9121 L244.0146 -199.9121 241.2852 -202.6406 241.2852 -206.0078 C241.2852 -218.6543 L241.2852 -222.0225 244.0146 -224.75 247.3828 -224.75 C270.2188 -224.75 L273.585 -224.75 276.3145 -222.0225 276.3145 -218.6543 Cf0 D272.1055 -213.7764 m272.1055 -214.1904 271.7686 -214.5264 271.3555 -214.5264 c270.9404 -214.5264 270.6055 -214.1904 270.6055 -213.7764 C270.6055 -209.8857 L270.6055 -206.916 269.4482 -205.7607 266.4785 -205.7607 C249.6396 -205.7607 L249.2266 -205.7607 248.8896 -205.4238 248.8896 -205.0107 c248.8896 -204.5957 249.2266 -204.2607 249.6396 -204.2607 C266.4785 -204.2607 L270.2646 -204.2607 272.1055 -206.0996 272.1055 -209.8857 C272.1055 -213.7764 LBb1 (Unnamed gradient 4) 258.7998 -230.9209 90 31.0088 1 0 0 1 0 0 Bg-0.000001 31.0088 39.0293 0.000002 239.2852 -230.9209 Xm-0.000361 8264.3096 39.0293 0.000002 239.2852 -8495.2305 Bc-0.000001 24.807 39.0293 0.000002 239.2852 -230.9209 Bm0 6.20176 39.0293 0.000002 239.2852 -206.1143 Bm-0.000361 8264.3096 39.0293 0.000002 239.2852 -199.9121 Bcf0 BBU*U*u1 D0 g332.1934 -223.9277 m332.1934 -228.085 332.1953 -231.1768 V339.7646 -223.6074 L336.8809 -223.6074 332.5146 -223.6074 Y332.3398 -223.6074 332.1934 -223.7549 332.1934 -223.9277 Cf340.0586 -221.6807 m340.0586 -203.7646 L340.0586 -201.6367 338.335 -199.9121 336.2061 -199.9121 C330.0938 -199.9121 L335.6104 -205.4443 L336.2773 -206.1104 336.2754 -207.1904 335.6104 -207.8535 c334.9434 -208.5195 333.8633 -208.5186 333.1982 -207.8525 C330.0098 -204.6553 L329.9961 -215.6768 L329.9941 -216.6182 329.2305 -217.3818 328.29 -217.3799 c327.3477 -217.3779 326.585 -216.6143 326.585 -215.6729 C326.5977 -204.75 L323.1563 -208.1816 L322.4902 -208.8486 321.4102 -208.8457 320.7461 -208.1807 c320.0811 -207.5146 320.0811 -206.4346 320.748 -205.7686 C326.6182 -199.9121 L320.1504 -199.9121 L318.0234 -199.9121 316.2988 -201.6367 316.2988 -203.7646 C316.2988 -227.5264 L316.2988 -229.6523 318.0234 -231.3799 320.1504 -231.3799 C330.2676 -231.3799 L330.2676 -223.9277 L330.2676 -222.6875 331.2754 -221.6807 332.5146 -221.6807 C340.0586 -221.6807 LBb1 (Unnamed gradient 4) 328.1787 -231.3799 90 31.4678 1 0 0 1 0 0 Bg-0.000001 31.4678 27.7598 0.000001 314.2988 -231.3799 Xm-0.000364 8332.0537 27.7598 0.000001 314.2988 -8563.4336 Bc-0.000001 25.1742 27.7598 0.000001 314.2988 -231.3799 Bm0 6.29355 27.7598 0.000001 314.2988 -206.2061 Bm-0.000364 8332.0537 27.7598 0.000001 314.2988 -199.9121 Bcf0 BB*UUu*u0 g50.5288 -300.5781 m50.5288 -298.5322 48.7861 -297.0449 46.5674 -297.0449 c44.2539 -297.0449 42.5742 -298.5977 42.5742 -300.1191 c42.5742 -300.752 43.2085 -301.291 43.7622 -301.291 c45.1416 -301.291 44.8086 -299.5156 46.584 -299.5156 c47.3286 -299.5156 47.8667 -300.1348 47.8667 -300.8623 c47.8667 -301.8291 47.0903 -302.082 46.2656 -302.0986 c45.7432 -302.1152 45.1729 -302.4619 45.1729 -303.3027 c45.1729 -303.999 45.5068 -304.2373 46.52 -304.4736 c47.1064 -304.6035 47.4873 -304.8877 47.4873 -305.5205 c47.4873 -306.0938 47.0269 -306.3613 46.52 -306.3613 c45.2202 -306.3613 45.1572 -305.0156 43.9844 -305.0156 c43.3354 -305.0156 42.939 -305.6484 42.939 -306.1855 c42.939 -307.7861 44.9829 -308.833 46.4888 -308.833 c48.3745 -308.833 49.9585 -307.6934 49.9585 -305.7422 c49.9585 -304.9355 49.5786 -304.1113 48.6909 -303.4453 C49.8955 -302.9727 50.5288 -301.877 50.5288 -300.5781 cfu0 g56.1851 -297.0449 m52.9375 -297.0449 51.4639 -299.9766 51.4639 -302.9365 c51.4639 -305.8994 52.9375 -308.833 56.1851 -308.833 c59.4346 -308.833 60.9082 -305.8994 60.9082 -302.9365 c60.9082 -299.9766 59.4346 -297.0449 56.1851 -297.0449 cf0 D0 g56.1851 -306.3613 m54.585 -306.3613 54.126 -304.3486 54.126 -302.9365 c54.126 -301.5273 54.585 -299.5156 56.1851 -299.5156 c57.7861 -299.5156 58.2456 -301.5273 58.2456 -302.9365 c58.2456 -304.3486 57.7861 -306.3613 56.1851 -306.3613 cfU1 D0 g44.6567 -316.4111 m43.562 -316.4111 42.6758 -317.2988 42.6758 -318.3916 C42.6758 -321.6934 L42.6758 -322.7861 43.562 -323.6738 44.6567 -323.6738 c45.7495 -323.6738 46.6377 -322.7861 46.6377 -321.6934 C46.6377 -318.3916 L46.6377 -317.2988 45.7495 -316.4111 44.6567 -316.4111 cf0 g58.7739 -316.4111 m57.6792 -316.4111 56.7935 -317.2988 56.7935 -318.3916 C56.7935 -321.6934 L56.7935 -322.7861 57.6792 -323.6738 58.7739 -323.6738 c59.8677 -323.6738 60.7544 -322.7861 60.7544 -321.6934 C60.7544 -318.3916 L60.7544 -317.2988 59.8677 -316.4111 58.7739 -316.4111 cfu0 g61.8682 -291.9287 m41.6138 -291.9287 L37.4268 -291.9287 34.021 -295.333 34.021 -299.5205 C34.021 -312.7373 L34.021 -316.6074 36.9312 -319.7959 40.6758 -320.2617 C40.6758 -318.3916 L40.6758 -316.1973 42.4614 -314.4111 44.6567 -314.4111 c46.8521 -314.4111 48.6377 -316.1973 48.6377 -318.3916 C48.6377 -320.332 L54.7935 -320.332 L54.7935 -318.3916 L54.7935 -316.1973 56.5791 -314.4111 58.7739 -314.4111 c60.9688 -314.4111 62.7544 -316.1973 62.7544 -318.3916 C62.7544 -320.2695 L66.5244 -319.8281 69.4614 -316.624 69.4614 -312.7373 C69.4614 -299.5205 L69.4614 -295.333 66.0547 -291.9287 61.8682 -291.9287 Cf0 D66.1602 -311.0488 m37.3228 -311.0488 L37.3228 -299.5205 L37.3228 -297.1563 39.2471 -295.2324 41.6138 -295.2324 C61.8682 -295.2324 L64.2349 -295.2324 66.1602 -297.1563 66.1602 -299.5205 C66.1602 -311.0488 LBb1 (Unnamed gradient 4) 51.7412 -323.6738 90 31.7451 1 0 0 1 0 0 Bg-0.000001 31.7451 39.4404 0.000002 32.021 -323.6738 Xm-0.000352 8055.6162 39.4404 0.000002 32.0215 -8379.29 Bc-0.000001 25.3961 39.4404 0.000002 32.021 -323.6738 Bm0 6.34902 39.4404 0.000002 32.021 -298.2773 Bm-0.000352 8055.6162 39.4404 0.000002 32.021 -291.9287 Bcf0 BBU*U*u1 D0 g127.4121 -308.583 m127.4121 -308.2236 127.7021 -307.9355 128.0596 -307.9355 C136.6758 -307.9355 L136.665 -305.3701 135.0801 -303.2959 133.123 -303.2959 C127.2344 -303.2959 L124.3398 -303.1748 L127.1318 -297.9199 126.1465 -294.3066 Y125.6523 -291.5908 122.5771 -291.9453 Y122.21 -291.9873 122.0908 -292.4785 122.0557 -292.7422 c120.833 -302.0361 112.8496 -310.2031 111.7998 -311.1738 C115.8955 -323.1172 L128.9746 -323.1172 L130.7432 -323.1172 132.3838 -321.4277 133.3965 -319.2031 C127.4463 -319.2031 L127.0889 -319.2031 126.7988 -318.9111 126.7988 -318.5537 c126.7988 -318.1973 127.0889 -317.9063 127.4463 -317.9063 C133.8672 -317.9063 L134.9102 -314.2158 L126.8916 -314.2158 L126.5342 -314.2158 126.2441 -313.9277 126.2441 -313.5684 c126.2441 -313.2109 126.5342 -312.9209 126.8916 -312.9209 C135.2764 -312.9209 L136.3193 -309.2295 L128.0596 -309.2295 L127.7021 -309.2295 127.4121 -308.9404 127.4121 -308.583 cf107.9414 -312.3945 m107.2041 -312.6445 106.6094 -313.167 106.2646 -313.8652 c105.9209 -314.5654 105.8701 -315.3574 106.123 -316.0977 C108.3213 -322.5195 L108.5713 -323.2559 109.0938 -323.8486 109.793 -324.1934 c110.4941 -324.5391 111.2881 -324.5898 112.0273 -324.3359 C113.4775 -323.8398 L109.3906 -311.9023 L107.9414 -312.3945 LBb1 (Unnamed gradient 4) 121.3198 -324.4951 90 32.5654 1 0 0 1 0 0 Bg-0.000001 32.5654 34.8057 0.000002 103.8701 -324.4951 Xm-0.000355 8125.2896 34.8057 0.000002 103.8706 -8449.7852 Bc-0.000001 26.0523 34.8057 0.000002 103.8701 -324.4951 Bm0 6.51309 34.8057 0.000002 103.8701 -298.4424 Bm-0.000355 8125.2896 34.8057 0.000002 103.8701 -291.9297 Bcf0 BB*U*uu0 g179.2578 -315.0938 m178.6953 -315.6494 178.3843 -316.3926 178.3843 -317.1826 c178.3838 -317.9736 178.6943 -318.7158 179.2578 -319.2744 c180.418 -320.4219 182.3008 -320.4199 183.4565 -319.2715 c184.0195 -318.7168 184.3306 -317.9766 184.332 -317.1875 C184.332 -317.1836 L184.332 -316.3926 184.0215 -315.6504 183.4575 -315.0918 c182.2993 -313.9404 180.415 -313.9404 179.2578 -315.0938 cf0 D0 g182.4028 -318.2051 m182.4004 -318.208 L181.8262 -318.7783 180.8901 -318.7793 180.313 -318.208 c180.0366 -317.9336 179.8843 -317.5703 179.8843 -317.1836 c179.8843 -316.7959 180.0371 -316.4326 180.3149 -316.1572 c180.8901 -315.584 181.8252 -315.584 182.4009 -316.1572 c182.6797 -316.4326 182.8325 -316.7988 182.832 -317.1865 c182.8311 -317.5723 182.6787 -317.9326 182.4028 -318.2051 CfUu1 D0 g205.3184 -302.4619 m196.21 -293.4316 L195.2324 -292.4619 193.9395 -291.9287 192.5664 -291.9287 c191.1563 -291.9287 189.8223 -292.4834 188.8066 -293.4922 C175.3018 -306.8828 175.3164 -306.8672 V174.832 -307.3291 174.021 -308.0986 173.8779 -309.5762 C172.875 -319.877 L172.8452 -320.1904 172.7744 -320.9248 175.208 -323.332 c177.5981 -325.6934 178.3291 -325.6201 178.6392 -325.5908 C189.0332 -324.5986 189.0356 -324.5986 V190.4287 -324.4658 191.1465 -323.7744 191.6689 -323.2695 c191.6729 -323.2656 191.749 -323.1904 191.752 -323.1895 C205.2568 -309.7998 L206.2764 -308.7891 206.8359 -307.4648 206.835 -306.0654 c206.835 -304.708 206.2949 -303.4277 205.3184 -302.4619 Cf0 D0 g204.8691 -306.0703 m204.8691 -306.9453 204.5137 -307.7813 203.8682 -308.4209 C190.3628 -321.8105 L190.2964 -321.874 190.2993 -321.8701 V189.8657 -322.2891 189.5518 -322.5908 188.8472 -322.6611 C179.4414 -323.5566 178.6255 -323.6348 V177.832 -323.2744 175.2109 -320.6748 174.8486 -319.8906 C174.8794 -319.5742 175.8345 -309.7627 175.835 -309.7617 C175.9082 -309.0059 176.2817 -308.6494 176.6919 -308.2598 C190.1973 -294.8691 L190.8418 -294.2295 191.6826 -293.8779 192.5664 -293.8779 c193.415 -293.8779 194.2148 -294.208 194.8193 -294.8105 C203.9307 -303.8398 203.9316 -303.8408 V204.5352 -304.4395 204.8691 -305.2295 204.8691 -306.0684 C204.8691 -306.0684 204.8691 -306.0703 vfU1 D180.3057 -308.916 m181.4263 -310.0283 188.5762 -317.1152 189.6968 -318.2266 C190.8936 -317.0391 200.4854 -307.5283 201.6816 -306.3447 C200.5625 -305.2334 193.4111 -298.1455 192.293 -297.0352 C191.0952 -298.2227 181.5029 -307.7295 180.3057 -308.916 CBb1 (Unnamed gradient 4) 189.8511 -325.5986 90 33.6699 1 0 0 1 0 0 Bg-0.000001 33.6699 38.062 0.000002 170.7744 -325.5986 Xm-0.000358 8193.8203 38.062 0.000002 170.7749 -8519.418 Bc-0.000001 26.9359 38.062 0.000002 170.7744 -325.5986 Bm0 6.73398 38.062 0.000002 170.7744 -298.6631 Bm-0.000358 8193.8203 38.062 0.000002 170.7744 -291.9287 Bcf0 BB*U*u0 g258.4229 -321.1016 m263.1074 -321.1016 266.9189 -317.2861 266.9189 -312.6016 c266.9189 -310.4238 266.0762 -308.3408 264.5879 -306.7695 C264.127 -307.3066 263.5439 -307.7656 262.9004 -308.1484 C264.0781 -309.332 264.7529 -310.9277 264.7529 -312.6016 c264.7529 -316.0908 261.9141 -318.9316 258.4229 -318.9316 c254.9316 -318.9316 252.0898 -316.0908 252.0898 -312.6016 c252.0898 -310.9277 252.7646 -309.332 253.9434 -308.1484 C253.3008 -307.7656 252.7178 -307.3066 252.2598 -306.7695 C250.7686 -308.3408 249.9229 -310.4248 249.9229 -312.6016 c249.9229 -317.2861 253.7354 -321.1016 258.4229 -321.1016 cf0 g267.4277 -300.3984 m266.9629 -300.0273 266.2852 -300.1016 265.9121 -300.5615 c265.543 -301.0244 265.6152 -301.7041 266.0781 -302.0742 c268.9941 -304.417 270.668 -307.8994 270.668 -311.623 c270.668 -318.377 265.1729 -323.8691 258.4199 -323.8691 c251.668 -323.8691 246.1768 -318.377 246.1768 -311.623 c246.1768 -307.9111 247.835 -304.4404 250.7305 -302.1035 c250.9512 -301.9209 251.0908 -301.666 251.1221 -301.3779 c251.1523 -301.0938 251.0684 -300.8115 250.8896 -300.5869 c250.707 -300.3623 250.4521 -300.2236 250.166 -300.1953 c249.8809 -300.1641 249.5986 -300.248 249.373 -300.4287 c245.9736 -303.1787 244.0225 -307.2598 244.0225 -311.623 c244.0225 -319.5615 250.4814 -326.0234 258.4199 -326.0234 c266.3604 -326.0234 272.8223 -319.5615 272.8223 -311.623 c272.8223 -307.2441 270.8564 -303.1523 267.4277 -300.3984 cf0 g258.4229 -307.4209 m260.1602 -307.4209 263.4883 -306.0117 263.4883 -304.2734 C261.5684 -295.0781 L261.5684 -293.3398 260.1602 -291.9287 258.4229 -291.9287 c256.6836 -291.9287 255.2764 -293.3398 255.2764 -295.0781 C253.3564 -304.2734 L253.3564 -306.0117 256.6836 -307.4209 258.4229 -307.4209 cf255.1729 -312.6016 m255.1729 -314.3916 256.6309 -315.8516 258.4229 -315.8516 c260.2148 -315.8516 261.6719 -314.3916 261.6719 -312.6016 c261.6719 -310.8076 260.2148 -309.3535 258.4229 -309.3535 c256.6309 -309.3535 255.1729 -310.8076 255.1729 -312.6016 cBb1 (Unnamed gradient 4) 258.4219 -326.0234 90 34.0947 1 0 0 1 0 0 Bg-0.000001 34.0947 32.7998 0.000001 242.0225 -326.0234 Xm-0.000361 8262.2969 32.7998 0.000001 242.0225 -8588.3203 Bc-0.000001 27.2758 32.7998 0.000001 242.0225 -326.0234 Bm0 6.81894 32.7998 0.000001 242.0225 -298.748 Bm-0.000361 8262.2969 32.7998 0.000001 242.0225 -291.9287 Bcf0 BB*U*u0 g315.0117 -296.4873 m315.0117 -319.2852 L315.0117 -321.8027 317.0527 -323.8438 319.5703 -323.8438 C320.0273 -323.8438 L320.0273 -291.9287 L319.5703 -291.9287 L317.0527 -291.9287 315.0117 -293.9697 315.0117 -296.4873 Cfu0 g336.7871 -291.9287 m321.2861 -291.9287 L321.2861 -323.8438 L336.7871 -323.8438 L339.3066 -323.8438 341.3457 -321.8027 341.3457 -319.2852 C341.3457 -296.4873 L341.3457 -293.9697 339.3066 -291.9287 336.7871 -291.9287 Cf0 D336.0479 -322.1367 m326.5859 -322.1367 L326.5859 -302.9111 L326.5859 -302.874 326.5947 -302.8398 326.5986 -302.7998 C330.4609 -306.666 L330.9336 -307.1367 331.6992 -307.1367 332.1729 -306.666 C336.0352 -302.7998 L336.04 -302.8398 336.0479 -302.874 336.0479 -302.9111 C336.0479 -322.1367 LBb1 (Unnamed gradient 4) 328.1787 -323.8438 90 31.915 1 0 0 1 0 0 Bg-0.000001 31.915 30.334 0.000001 313.0117 -323.8438 Xm-0.000364 8332.0537 30.334 0.000001 313.0117 -8655.8984 Bc-0.000001 25.532 30.334 0.000001 313.0117 -323.8438 Bm0 6.38301 30.334 0.000001 313.0117 -298.3115 Bm-0.000364 8332.0537 30.334 0.000001 313.0117 -291.9287 Bcf0 BBU*UULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Blogging + Internet1) Ln0 Auu*u1 D0 O0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa0 J 0 j 1 w 4 M []0 d0 XR64.7637 -88.8989 m62.3291 -88.8989 L59.6387 -91.5889 L63.3701 -92.6382 66.1172 -96.063 66.1172 -100.125 C66.1172 -101.4346 L71.0313 -101.4346 L71.0313 -95.1665 L71.0313 -91.7051 68.2256 -88.8989 64.7637 -88.8989 Cf*U0 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa57.2432 -93.2515 m54.5732 -93.2515 L49.4199 -98.4033 L44.2666 -93.2515 L41.3271 -93.2515 L37.5303 -93.2515 34.4531 -96.3291 34.4531 -100.125 C34.4531 -106.999 L64.1172 -106.999 L64.1172 -100.125 L64.1172 -96.3291 61.04 -93.2515 57.2432 -93.2515 Cf0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa57.5078 -74.8286 m55.7651 -74.8286 54.1821 -75.4966 52.9863 -76.583 C56.3252 -78.022 58.6699 -81.3433 58.6699 -85.2041 c58.6699 -86.2759 58.4805 -87.3022 58.1479 -88.2627 C61.5659 -87.9399 64.2402 -85.0649 64.2402 -81.5625 c64.2402 -77.8433 61.2266 -74.8286 57.5078 -74.8286 cf1 Ap56.6699 -85.2041 m56.6699 -89.2822 53.3643 -92.5884 49.2852 -92.5884 c45.207 -92.5884 41.9014 -89.2822 41.9014 -85.2041 c41.9014 -81.125 45.207 -77.8193 49.2852 -77.8193 c53.3643 -77.8193 56.6699 -81.125 56.6699 -85.2041 cfUUu0 Ap134.4917 -95.1221 m126.2568 -95.1221 L123.729 -98.4263 121.584 -101.2305 Y116.9126 -95.1221 L107.8491 -95.1221 L105.0952 -95.1221 102.8608 -97.356 102.8608 -100.1108 C102.8608 -102.0103 L102.8608 -104.7656 105.0952 -106.999 107.8491 -106.999 C134.4917 -106.999 L137.2466 -106.999 139.48 -104.7656 139.48 -102.0103 C139.48 -100.1108 L139.48 -97.356 137.2466 -95.1221 134.4917 -95.1221 Cf0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa117.9927 -84.1714 m117.9097 -84.7246 117.8374 -85.8237 y112.3188 -85.8237 L116.9512 -91.8818 L121.584 -97.9385 L130.8516 -85.8237 L124.6797 -85.8237 L124.6797 -85.8203 124.6787 -85.8154 124.6787 -85.812 c124.6787 -82.542 127.3286 -79.8906 130.5991 -79.8906 c133.8457 -79.8906 136.4785 -82.5073 136.5151 -85.7466 C136.606 -85.2358 136.6567 -84.7095 136.6567 -84.1714 c136.6567 -79.2295 132.6499 -75.2231 127.7065 -75.2231 c122.7651 -75.2231 118.7266 -79.2852 117.9927 -84.1714 cfU*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa193.8906 -83.3037 m198.2578 -83.3037 201.1406 -83.3037 V193.5732 -75.7354 L193.5723 -78.8257 193.5703 -82.9834 Y193.5703 -83.1567 193.7178 -83.3037 193.8906 -83.3037 Cfu193.8906 -85.23 m192.6523 -85.23 191.6445 -84.2222 191.6445 -82.9834 C191.6445 -75.5322 L181.5283 -75.5322 L179.4014 -75.5322 177.6758 -77.2573 177.6758 -79.3853 C177.6758 -103.1455 L177.6758 -105.2744 179.4014 -106.999 181.5283 -106.999 C197.582 -106.999 L199.71 -106.999 201.4355 -105.2744 201.4355 -103.1455 C201.4355 -85.23 L193.8906 -85.23 Lf0 D181.689 -87.2212 m180.834 -86.1064 181.0454 -84.5083 182.1616 -83.6543 c183.2778 -82.8003 184.874 -83.0107 185.7285 -84.127 C186.4507 -85.0703 L182.4106 -88.1641 L181.689 -87.2212 Lf183.0825 -89.0601 m187.123 -85.9673 L188.064 -87.1987 L184.0244 -90.2905 L183.0825 -89.0601 Lf194.3828 -100.938 m194.0889 -100.7974 193.7275 -100.8203 193.4482 -101.0332 c193.2607 -101.1768 193.1475 -101.3823 193.1104 -101.5972 C192.7188 -101.4312 192.3643 -101.166 192.0879 -100.8057 C184.7236 -91.1875 L188.7642 -88.0938 L196.127 -97.7124 L196.4053 -98.0737 196.5664 -98.4858 196.625 -98.9067 C196.4053 -98.8848 196.1807 -98.9419 195.9902 -99.0864 c195.7139 -99.2993 195.5957 -99.6401 195.6563 -99.9634 C195.3604 -99.8232 194.998 -99.8472 194.7207 -100.0596 c194.4414 -100.272 194.3242 -100.6147 194.3828 -100.938 Cf197.8525 -104.1489 m197.6953 -104.269 197.4785 -104.2754 197.332 -104.1758 C195.3184 -103.085 195.2949 -103.0708 V195.0654 -102.9116 195.0684 -102.9131 V194.9258 -102.8169 194.8486 -102.6519 194.8691 -102.4819 c194.8867 -102.3174 194.9932 -102.1738 195.1475 -102.106 C195.96 -101.603 195.9414 -101.6182 V196.623 -100.9971 L196.623 -100.9976 L196.6309 -100.9907 L196.623 -100.9971 L196.7383 -100.8838 196.9082 -100.8345 197.0557 -100.8696 c197.2148 -100.9048 197.3428 -101.0112 197.4023 -101.1807 C198.0146 -103.6499 198.0068 -103.6255 V198.0762 -103.8149 198.0146 -104.0254 197.8525 -104.1489 cfU*Uu*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa250.3574 -99.0132 m251.4531 -96.0562 L250.0068 -92.1543 L249.2783 -90.1719 248.6523 -88.4648 246.5684 -88.4648 c244.5361 -88.4648 243.9102 -90.1719 243.1807 -92.1543 C239.2646 -102.7207 L238.7383 -104.1499 238.6621 -104.6279 238.6621 -105.23 c238.6621 -106.2329 239.4658 -106.8867 240.623 -106.8867 c241.9512 -106.8867 242.3779 -106.0332 242.7529 -104.9038 C243.2568 -103.2979 L249.2148 -103.2979 L249.3066 -102.1602 249.6152 -101.0293 250.3574 -99.0132 Cf0 D246.6436 -92.9824 m246.6953 -92.9824 L248.7275 -99.5322 L244.46 -99.5322 L246.6436 -92.9824 Lf*Uu*u0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa259.084 -81.2183 m260.3594 -77.749 261.4561 -74.7627 265.0117 -74.7627 c268.6572 -74.7627 269.7568 -77.749 271.0322 -81.2183 c277.8818 -99.708 L278.8057 -102.2114 278.9355 -103.0474 278.9355 -104.1006 c278.9355 -105.8579 277.5313 -106.999 275.5107 -106.999 c273.1836 -106.999 272.4375 -105.5063 271.7773 -103.5293 c270.8975 -100.7192 L259.2168 -100.7192 L258.3398 -103.5293 L257.6797 -105.5063 256.9336 -106.999 254.6055 -106.999 c252.5859 -106.999 251.1807 -105.8579 251.1807 -104.1006 c251.1807 -103.0474 251.3125 -102.2114 252.2324 -99.708 C259.084 -81.2183 lf1 D265.2324 -82.6685 m265.1465 -82.6685 L261.3262 -94.1299 L268.791 -94.1299 L265.2324 -82.6685 lf*UUUu0 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa327.4434 -75.2471 m327.4082 -74.9824 327.29 -74.4932 326.9229 -74.4502 C323.8477 -74.0957 323.3535 -76.8101 V322.3682 -80.4233 325.1602 -85.6792 V322.2646 -85.8013 L316.377 -85.8013 L314.4189 -85.8013 312.835 -87.8755 312.8232 -90.4395 C321.4395 -90.4395 L321.7979 -90.4395 322.0879 -90.7295 322.0879 -91.0874 c322.0879 -91.4453 321.7979 -91.7354 321.4395 -91.7354 C313.1807 -91.7354 L314.2227 -95.4253 L322.6074 -95.4253 L322.9648 -95.4253 323.2559 -95.7153 323.2559 -96.0732 c323.2559 -96.4312 322.9648 -96.7212 322.6074 -96.7212 C314.5898 -96.7212 L315.6318 -100.4111 L322.0527 -100.4111 L322.4102 -100.4111 322.7012 -100.7012 322.7012 -101.0591 c322.7012 -101.417 322.4102 -101.707 322.0527 -101.707 C316.1035 -101.707 L317.1152 -103.9326 318.7559 -105.6221 320.5254 -105.6221 C333.6035 -105.6221 L337.6992 -93.6772 L336.6504 -92.7075 328.666 -84.5415 327.4434 -75.2471 cf0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa336.0225 -106.3433 m337.4727 -106.8403 L338.2109 -107.0938 339.0059 -107.0425 339.7061 -106.6982 c340.4063 -106.3545 340.9277 -105.7593 341.1777 -105.0229 C343.377 -98.6021 L343.6289 -97.8623 343.5781 -97.0698 343.2354 -96.3696 c342.8896 -95.6714 342.2949 -95.1489 341.5586 -94.8984 C340.1094 -94.4058 L336.0225 -106.3433 LfUu*u1 D62.0571 -166.0322 m41.4263 -166.0322 L38.3325 -166.0322 35.8032 -168.5625 35.8032 -171.6553 C35.8032 -192.2871 L35.8032 -195.3809 38.3325 -197.9102 41.4263 -197.9102 C62.0571 -197.9102 L65.1479 -197.9102 67.6792 -195.3809 67.6792 -192.2871 C67.6792 -171.6553 L67.6792 -168.5625 65.1479 -166.0322 62.0571 -166.0322 Cf0 D43.5659 -192.8438 m41.9507 -192.8438 40.6392 -191.5332 40.6392 -189.917 c40.6392 -188.3008 41.9507 -186.9902 43.5659 -186.9902 c45.1812 -186.9902 46.4917 -188.3008 46.4917 -189.917 c46.4917 -191.5332 45.1812 -192.8438 43.5659 -192.8438 cf51.3413 -192.4385 m51.188 -183.333 43.105 -182.5088 41.3442 -182.4404 C41.3452 -182.04 41.3511 -179.3506 41.3521 -178.9277 C46.1313 -179.0225 54.7202 -181.9395 54.8608 -192.4385 C51.3413 -192.4385 Lf58.5005 -192.4385 m58.3384 -176.3896 43.4497 -175.3447 41.3481 -175.2793 C41.3481 -174.8779 41.3511 -172.1865 41.3521 -171.7656 C43.646 -171.8545 61.8511 -173.1982 62.0161 -192.4385 C58.5005 -192.4385 Lf*U*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa118.3335 -171.3857 m118.3335 -174.7607 119.6079 -178.0342 122.0571 -180.4834 C122.0571 -180.4834 L126.0537 -184.4795 132.2002 -185.3193 137.4385 -182.6563 C137.2871 -182.2939 137.1138 -181.9473 136.8481 -181.6816 C121.021 -165.8535 L120.7041 -165.5361 120.2876 -165.3428 119.8418 -165.1934 C118.8472 -167.1846 118.3335 -169.3018 118.3335 -171.3857 Cf116.5347 -165.9453 m105.9258 -176.5547 L105.5078 -176.9736 105.2456 -177.5039 105.0977 -178.0781 C105.7495 -178.0654 115.6929 -177.8779 Y116.3135 -178.127 L116.5605 -178.7461 L116.5503 -179.2236 116.1543 -179.6191 115.6777 -179.6279 C105.7847 -179.8145 105.1348 -179.8271 V105.2803 -180.2852 105.502 -180.708 105.8335 -181.041 C121.6616 -196.8691 L121.9917 -197.1982 122.415 -197.4199 122.8745 -197.5684 C122.8867 -196.916 123.0742 -187.0234 Y123.083 -186.5479 123.478 -186.1514 123.9551 -186.1406 C123.957 -186.1406 124.5776 -186.3906 Y124.8247 -187.0088 L124.6577 -195.793 124.623 -197.6035 V125.1992 -197.4561 125.7305 -197.1943 126.1484 -196.7773 c136.7568 -186.168 L137.0781 -185.8457 137.2988 -185.4512 137.4648 -185.0322 C131.6143 -187.543 124.8691 -186.4033 120.5029 -182.0391 c117.6665 -179.2021 116.1685 -175.3232 116.1685 -171.3447 c116.1685 -169.3604 116.5991 -167.3643 117.3638 -165.4482 C117.0757 -165.6006 116.7617 -165.7188 116.5347 -165.9453 Cf*Uu0 D198.0322 -170.165 m197.4854 -170.083 196.3975 -170.0117 y196.3975 -164.5527 L190.4028 -169.1357 L184.4097 -173.7197 L196.3975 -182.8896 L196.3975 -176.7822 L196.4023 -176.7822 196.4063 -176.7813 196.4102 -176.7813 c199.6445 -176.7813 202.2686 -179.4033 202.2686 -182.6387 c202.2686 -185.8516 199.6797 -188.457 196.4736 -188.4932 C196.9805 -188.583 197.499 -188.6328 198.0322 -188.6328 c202.9219 -188.6328 206.8857 -184.6689 206.8857 -179.7773 c206.8857 -174.8877 202.8672 -170.8916 198.0322 -170.165 cf0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa181.0796 -192.2979 m181.6265 -192.3789 182.7144 -192.4512 y182.7144 -197.9102 L188.7085 -193.3271 L194.7021 -188.7422 L182.7144 -179.5732 L182.7144 -185.6807 L182.7109 -185.6807 182.7065 -185.6816 182.7031 -185.6816 c179.4668 -185.6816 176.8442 -183.0586 176.8442 -179.8232 c176.8442 -176.6104 179.4316 -174.0059 182.6377 -173.9697 C182.1323 -173.8789 181.6123 -173.8301 181.0796 -173.8301 c176.1904 -173.8301 172.2256 -177.7939 172.2256 -182.6846 c172.2256 -187.5752 176.2446 -191.5703 181.0796 -192.2979 cfU*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa251.7734 -171.0791 m251.8496 -171.0527 259.4648 -168.4785 265.75 -171.0498 c266.5176 -171.3633 267.3936 -170.9971 267.7061 -170.2295 c268.0195 -169.4629 267.6523 -168.5859 266.8857 -168.2734 c259.5332 -165.2666 251.1436 -168.1221 250.79 -168.2451 c250.0078 -168.5166 249.5947 -169.3701 249.8672 -170.1523 c250.1367 -170.9346 250.9922 -171.3486 251.7734 -171.0791 cfu270.2188 -173.0713 m247.3828 -173.0713 L244.0146 -173.0713 241.2852 -175.8008 241.2852 -179.168 C241.2852 -191.8145 L241.2852 -195.1816 244.0146 -197.9102 247.3828 -197.9102 C270.2188 -197.9102 L273.585 -197.9102 276.3145 -195.1816 276.3145 -191.8145 C276.3145 -179.168 L276.3145 -175.8008 273.585 -173.0713 270.2188 -173.0713 Cf0 D272.1055 -187.9365 m272.1055 -191.7227 270.2646 -193.5635 266.4785 -193.5635 C249.6396 -193.5635 L249.2266 -193.5635 248.8896 -193.2275 248.8896 -192.8135 c248.8896 -192.3984 249.2266 -192.0635 249.6396 -192.0635 C266.4785 -192.0635 L269.4482 -192.0635 270.6055 -190.9063 270.6055 -187.9365 C270.6055 -184.0469 L270.6055 -183.6328 270.9404 -183.2969 271.3555 -183.2969 c271.7686 -183.2969 272.1055 -183.6328 272.1055 -184.0469 C272.1055 -187.9365 LfU*Uu*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa332.5146 -174.2148 m336.8809 -174.2148 339.7646 -174.2148 V332.1953 -166.6465 L332.1934 -169.7373 332.1934 -173.8945 Y332.1934 -174.0684 332.3398 -174.2148 332.5146 -174.2148 Cf332.5146 -176.1416 m331.2754 -176.1416 330.2676 -175.1338 330.2676 -173.8945 C330.2676 -166.4434 L320.1504 -166.4434 L318.0234 -166.4434 316.2988 -168.1689 316.2988 -170.2969 C316.2988 -194.0576 L316.2988 -196.1855 318.0234 -197.9102 320.1504 -197.9102 C326.6182 -197.9102 L320.748 -192.0547 L320.0811 -191.3896 320.0811 -190.3086 320.7461 -189.6426 c321.4102 -188.9756 322.4902 -188.9746 323.1563 -189.6396 C326.5977 -193.0732 L326.585 -182.1494 L326.585 -181.209 327.3477 -180.4443 328.29 -180.4434 c329.2305 -180.4414 329.9941 -181.2041 329.9961 -182.1455 C330.0098 -193.168 L333.1982 -189.9707 L333.8633 -189.3047 334.9434 -189.3027 335.6104 -189.9678 c336.2754 -190.6328 336.2773 -191.7139 335.6104 -192.3789 C330.0938 -197.9102 L336.2061 -197.9102 L338.335 -197.9102 340.0586 -196.1855 340.0586 -194.0576 C340.0586 -176.1416 L332.5146 -176.1416 Lf*UUUuu*u0 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa43.7622 -280.5654 m45.1416 -280.5654 44.8086 -282.3398 46.584 -282.3398 c47.3286 -282.3398 47.8667 -281.7227 47.8667 -280.9932 c47.8667 -280.0254 47.0903 -279.7734 46.2656 -279.7568 c45.7432 -279.7422 45.1729 -279.3936 45.1729 -278.5527 c45.1729 -277.8564 45.5068 -277.6182 46.52 -277.3809 c47.1064 -277.2529 47.4873 -276.9688 47.4873 -276.335 c47.4873 -275.7637 47.0269 -275.4961 46.52 -275.4961 c45.2202 -275.4961 45.1572 -276.8408 43.9844 -276.8408 c43.3354 -276.8408 42.939 -276.209 42.939 -275.6699 c42.939 -274.0684 44.9829 -273.0225 46.4888 -273.0225 c48.3745 -273.0225 49.9585 -274.1621 49.9585 -276.1143 c49.9585 -276.9219 49.5786 -277.7441 48.6909 -278.4102 c49.8955 -278.8848 50.5288 -279.9785 50.5288 -281.2773 c50.5288 -283.3232 48.7861 -284.8125 46.5674 -284.8125 c44.2539 -284.8125 42.5742 -283.2598 42.5742 -281.7363 c42.5742 -281.1035 43.2085 -280.5654 43.7622 -280.5654 cf*U*u56.1851 -273.0225 m59.4346 -273.0225 60.9082 -275.9561 60.9082 -278.9189 c60.9082 -281.8809 59.4346 -284.8125 56.1851 -284.8125 c52.9375 -284.8125 51.4639 -281.8809 51.4639 -278.9189 c51.4639 -275.9561 52.9375 -273.0225 56.1851 -273.0225 cf1 D56.1851 -282.3398 m57.7861 -282.3398 58.2456 -280.3281 58.2456 -278.9189 c58.2456 -277.5059 57.7861 -275.4961 56.1851 -275.4961 c54.585 -275.4961 54.126 -277.5059 54.126 -278.9189 c54.126 -280.3281 54.585 -282.3398 56.1851 -282.3398 cf*UU0 D42.6758 -260.1621 m42.6758 -263.4629 L42.6758 -264.5566 43.562 -265.4434 44.6567 -265.4434 c45.7495 -265.4434 46.6377 -264.5566 46.6377 -263.4629 C46.6377 -260.1621 L46.6377 -259.0693 45.7495 -258.1816 44.6567 -258.1816 c43.562 -258.1816 42.6758 -259.0693 42.6758 -260.1621 Cf56.7935 -260.1621 m56.7935 -263.4629 L56.7935 -264.5566 57.6792 -265.4434 58.7739 -265.4434 c59.8677 -265.4434 60.7544 -264.5566 60.7544 -263.4629 C60.7544 -260.1621 L60.7544 -259.0693 59.8677 -258.1816 58.7739 -258.1816 c57.6792 -258.1816 56.7935 -259.0693 56.7935 -260.1621 Cf*u1 D0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa62.7544 -261.5879 m62.7544 -263.4629 L62.7544 -265.6582 60.9688 -267.4434 58.7739 -267.4434 c56.5791 -267.4434 54.7935 -265.6582 54.7935 -263.4629 C54.7935 -261.5254 L48.6377 -261.5254 L48.6377 -263.4629 L48.6377 -265.6582 46.8521 -267.4434 44.6567 -267.4434 c42.4614 -267.4434 40.6758 -265.6582 40.6758 -263.4629 C40.6758 -261.5938 L36.9312 -262.0586 34.021 -265.249 34.021 -269.1182 C34.021 -282.335 L34.021 -286.5225 37.4268 -289.9268 41.6138 -289.9268 C61.8682 -289.9268 L66.0547 -289.9268 69.4614 -286.5225 69.4614 -282.335 C69.4614 -269.1182 L69.4614 -265.2314 66.5244 -262.0293 62.7544 -261.5879 Cf0 D66.1602 -282.335 m66.1602 -284.6992 64.2349 -286.624 61.8682 -286.624 C41.6138 -286.624 L39.2471 -286.624 37.3228 -284.6992 37.3228 -282.335 C37.3228 -270.8066 L66.1602 -270.8066 L66.1602 -282.335 Lf*UUu0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa122.0557 -289.1143 m122.0908 -289.3779 122.21 -289.8682 122.5771 -289.9102 C125.6523 -290.2646 126.1465 -287.5508 V127.1318 -283.9375 124.3398 -278.6816 V127.2344 -278.5605 L133.123 -278.5605 L135.0801 -278.5605 136.665 -276.4854 136.6758 -273.9219 C128.0596 -273.9219 L127.7021 -273.9219 127.4121 -273.6309 127.4121 -273.2725 c127.4121 -272.915 127.7021 -272.625 128.0596 -272.625 C136.3193 -272.625 L135.2764 -268.9355 L126.8916 -268.9355 L126.5342 -268.9355 126.2441 -268.6465 126.2441 -268.2871 c126.2441 -267.9297 126.5342 -267.6396 126.8916 -267.6396 C134.9102 -267.6396 L133.8672 -263.9492 L127.4463 -263.9492 L127.0889 -263.9492 126.7988 -263.6602 126.7988 -263.3018 c126.7988 -262.9434 127.0889 -262.6543 127.4463 -262.6543 C133.3965 -262.6543 L132.3838 -260.4277 130.7432 -258.7393 128.9746 -258.7393 C115.8955 -258.7393 L111.7998 -270.6836 L112.8496 -271.6533 120.833 -279.8193 122.0557 -289.1143 cf0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa113.4775 -258.0176 m112.0273 -257.5215 L111.2881 -257.2676 110.4941 -257.3184 109.793 -257.6621 c109.0938 -258.0059 108.5713 -258.6016 108.3213 -259.3379 C106.123 -265.7598 L105.8701 -266.498 105.9209 -267.29 106.2646 -267.9922 c106.6094 -268.6895 107.2041 -269.2129 107.9414 -269.4629 C109.3906 -269.9551 L113.4775 -258.0176 LfUuu*u1 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa179.2583 -262.5811 m178.6943 -263.1396 178.3838 -263.8818 178.3843 -264.6729 c178.3843 -265.4629 178.6953 -266.2061 179.2593 -266.7646 c180.415 -267.915 182.2988 -267.915 183.458 -266.7646 c184.0215 -266.2061 184.332 -265.4629 184.332 -264.6729 c184.332 -264.6699 184.332 -264.6689 184.332 -264.668 c184.3306 -263.8779 184.0195 -263.1387 183.4565 -262.582 C182.3003 -261.4355 180.4175 -261.4336 179.2583 -262.5811 Cf0 D180.3159 -265.7012 m180.0371 -265.4238 179.8843 -265.0586 179.8843 -264.6729 c179.8843 -264.2852 180.0366 -263.9219 180.3135 -263.6475 c180.8896 -263.0771 181.8262 -263.0771 182.4004 -263.6475 C182.4028 -263.6504 L182.6787 -263.9229 182.8311 -264.2832 182.832 -264.6689 c182.8325 -265.0586 182.6797 -265.4229 182.4019 -265.6992 c181.8257 -266.2715 180.8901 -266.2725 180.3159 -265.7012 cf183.458 -262.584 m183.4556 -262.5811 L183.458 -262.584 Lf*UU*uu1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa205.2568 -272.0566 m191.752 -258.668 L191.749 -258.665 191.6729 -258.5918 191.6689 -258.5879 c191.1465 -258.0811 190.4287 -257.3896 189.0356 -257.2559 C189.0332 -257.2559 178.6392 -256.2646 Y178.3291 -256.2354 177.5981 -256.1621 175.208 -258.5254 c172.7744 -260.9316 172.8452 -261.665 172.875 -261.9785 C173.8779 -272.2813 L174.021 -273.7559 174.832 -274.5273 175.3164 -274.9893 c175.3018 -274.9727 188.8066 -288.3643 Y189.8223 -289.3711 191.1563 -289.9268 192.5664 -289.9268 c193.9395 -289.9268 195.2324 -289.3936 196.21 -288.4238 C205.3184 -279.3936 L206.2949 -278.4277 206.835 -277.1475 206.835 -275.79 c206.8359 -274.3926 206.2764 -273.0664 205.2568 -272.0566 Cf0 D204.8691 -275.7891 m204.8691 -276.625 204.5352 -277.416 203.9316 -278.0146 c203.9307 -278.0156 194.8193 -287.0469 Y194.2148 -287.6475 193.415 -287.9775 192.5664 -287.9775 c191.6826 -287.9775 190.8418 -287.625 190.1973 -286.9863 C176.6919 -273.5957 L176.2817 -273.2061 175.9082 -272.8516 175.835 -272.0938 C174.8794 -262.2822 174.8486 -261.9648 V175.2109 -261.1807 177.832 -258.5811 178.6255 -258.2207 C179.4414 -258.2988 188.8472 -259.1943 Y189.5518 -259.2646 189.8657 -259.5664 190.2993 -259.9854 c190.2964 -259.9814 190.3628 -260.0449 Y203.8682 -273.4355 L204.5137 -274.0762 204.8691 -274.9111 204.8691 -275.7861 c204.8691 -275.7871 204.8691 -275.7871 204.8691 -275.7891 cfU1 D189.6968 -263.6289 m188.5762 -264.7402 181.4263 -271.8271 180.3057 -272.9395 C181.5029 -274.127 191.0952 -283.6348 192.293 -284.8203 C193.4111 -283.71 200.5625 -276.623 201.6816 -275.5107 C200.4854 -274.3271 190.8936 -264.8164 189.6968 -263.6289 Cf*UUu*u0.666667 0.196078 0 0 0.262745 0.65098 0.866667 Xa258.4229 -260.7559 m253.7354 -260.7559 249.9229 -264.5693 249.9229 -269.2559 c249.9229 -271.4307 250.7686 -273.5146 252.2598 -275.0859 C252.7178 -274.5508 253.3008 -274.0908 253.9434 -273.709 C252.7646 -272.5254 252.0898 -270.9277 252.0898 -269.2559 c252.0898 -265.7646 254.9316 -262.9238 258.4229 -262.9238 c261.9141 -262.9238 264.7529 -265.7646 264.7529 -269.2559 c264.7529 -270.9297 264.0781 -272.5234 262.9004 -273.707 C263.5439 -274.0898 264.127 -274.5508 264.5879 -275.0859 C266.0762 -273.5146 266.9189 -271.4336 266.9189 -269.2559 c266.9189 -264.5693 263.1074 -260.7559 258.4229 -260.7559 cf258.4199 -255.834 m250.4814 -255.834 244.0225 -262.2939 244.0225 -270.2324 c244.0225 -274.5977 245.9736 -278.6768 249.373 -281.4268 c249.5986 -281.6094 249.8809 -281.6914 250.166 -281.6602 c250.4521 -281.6309 250.707 -281.4932 250.8896 -281.2686 c251.0684 -281.0439 251.1523 -280.7637 251.1221 -280.4775 c251.0908 -280.1904 250.9512 -279.9355 250.7305 -279.7529 c247.835 -277.415 246.1768 -273.9443 246.1768 -270.2324 c246.1768 -263.4805 251.668 -257.9863 258.4199 -257.9863 c265.1729 -257.9863 270.668 -263.4805 270.668 -270.2324 c270.668 -273.9561 268.9941 -277.4385 266.0781 -279.7813 c265.6152 -280.1504 265.543 -280.8311 265.9121 -281.2939 c266.2852 -281.7559 266.9629 -281.8301 267.4277 -281.459 c270.8564 -278.7051 272.8223 -274.6133 272.8223 -270.2324 c272.8223 -262.2939 266.3604 -255.834 258.4199 -255.834 cf*Uu*u0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa258.4229 -274.4336 m256.6836 -274.4336 253.3564 -275.8438 253.3564 -277.582 C255.2764 -286.7783 L255.2764 -288.5176 256.6836 -289.9268 258.4229 -289.9268 c260.1602 -289.9268 261.5684 -288.5176 261.5684 -286.7783 C263.4883 -277.582 L263.4883 -275.8438 260.1602 -274.4336 258.4229 -274.4336 cf258.4229 -272.5029 m260.2148 -272.5029 261.6719 -271.0479 261.6719 -269.2559 c261.6719 -267.4648 260.2148 -266.0039 258.4229 -266.0039 c256.6309 -266.0039 255.1729 -267.4648 255.1729 -269.2559 c255.1729 -271.0479 256.6309 -272.5029 258.4229 -272.5029 cf*UUUu0 D0.733333 0.517647 0.47451 0.219608 0.286275 0.376471 0.407843 Xa319.5703 -258.0137 m317.0527 -258.0137 315.0117 -260.0527 315.0117 -262.5723 C315.0117 -285.3682 L315.0117 -287.8857 317.0527 -289.9268 319.5703 -289.9268 C320.0273 -289.9268 L320.0273 -258.0137 L319.5703 -258.0137 Lf*u1 D0.831372 0.513725 0.223529 0.027451 0.207843 0.439216 0.6 Xa336.7871 -258.0137 m321.2861 -258.0137 L321.2861 -289.9268 L336.7871 -289.9268 L339.3066 -289.9268 341.3457 -287.8857 341.3457 -285.3682 C341.3457 -262.5723 L341.3457 -260.0527 339.3066 -258.0137 336.7871 -258.0137 Cf0 D336.0479 -278.9434 m336.0479 -278.9814 336.04 -279.0176 336.0352 -279.0557 C332.1729 -275.1904 L331.6992 -274.7188 330.9336 -274.7188 330.4609 -275.1904 C326.5986 -279.0557 L326.5947 -279.0176 326.5859 -278.9814 326.5859 -278.9434 C326.5859 -259.7188 L336.0479 -259.7188 L336.0479 -278.9434 Lf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF